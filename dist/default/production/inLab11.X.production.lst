

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 02 10:31:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55  0000                     
    56                           ; Version 2.10
    57                           ; Generated 31/07/2019 GMT
    58                           ; 
    59                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F26K22 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    92  0000                     
    93 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    94  0000                     
    95 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    96  0000                     _ANSELA	set	3896
    97  0000                     _ANSELB	set	3897
    98  0000                     _ANSELC	set	3898
    99  0000                     _INTCON2bits	set	4081
   100  0000                     _WPUB	set	3937
   101  0000                     _TRISC	set	3988
   102  0000                     _TRISB	set	3987
   103  0000                     _TRISA	set	3986
   104  0000                     _LATC	set	3979
   105  0000                     _LATB	set	3978
   106  0000                     _LATA	set	3977
   107  0000                     _OSCTUNE	set	3995
   108  0000                     _OSCCON2	set	4050
   109  0000                     _OSCCON	set	4051
   110  0000                     _TXREG1	set	4013
   111  0000                     _RCREG1	set	4014
   112  0000                     _RCSTA1bits	set	4011
   113  0000                     _TXSTA1bits	set	4012
   114  0000                     _SPBRGH1	set	4016
   115  0000                     _SPBRG1	set	4015
   116  0000                     _TXSTA1	set	4012
   117  0000                     _RCSTA1	set	4011
   118  0000                     _BAUDCON1	set	4024
   119  0000                     _ADCON0bits	set	4034
   120  0000                     _ADRESH	set	4036
   121  0000                     _ADRESL	set	4035
   122  0000                     _ADCON2	set	4032
   123  0000                     _ADCON1	set	4033
   124  0000                     _ADCON0	set	4034
   125  0000                     _TX1REG	set	4013
   126  0000                     _PIR1bits	set	3998
   127  0000                     _PORTAbits	set	3968
   128  0000                     _LATCbits	set	3979
   129  0000                     _T0CON	set	4053
   130  0000                     _INTCONbits	set	4082
   131  0000                     _TMR0L	set	4054
   132  0000                     _TMR0H	set	4055
   133  0000                     _T0CONbits	set	4053
   134  0000                     _PLLRDY	set	32407
   135                           
   136                           	psect	mediumconst
   137  00F9B0                     __pmediumconst:
   138                           	opt callstack 0
   139  00F9B0  00                 	db	0
   140  00F9B1                     STR_24:
   141  00F9B1  48                 	db	72	;'H'
   142  00F9B2  61                 	db	97	;'a'
   143  00F9B3  6E                 	db	110	;'n'
   144  00F9B4  64                 	db	100	;'d'
   145  00F9B5  73                 	db	115	;'s'
   146  00F9B6  20                 	db	32
   147  00F9B7  6F                 	db	111	;'o'
   148  00F9B8  66                 	db	102	;'f'
   149  00F9B9  66                 	db	102	;'f'
   150  00F9BA  20                 	db	32
   151  00F9BB  74                 	db	116	;'t'
   152  00F9BC  68                 	db	104	;'h'
   153  00F9BD  65                 	db	101	;'e'
   154  00F9BE  20                 	db	32
   155  00F9BF  70                 	db	112	;'p'
   156  00F9C0  69                 	db	105	;'i'
   157  00F9C1  61                 	db	97	;'a'
   158  00F9C2  6E                 	db	110	;'n'
   159  00F9C3  6F                 	db	111	;'o'
   160  00F9C4  2C                 	db	44
   161  00F9C5  20                 	db	32
   162  00F9C6  70                 	db	112	;'p'
   163  00F9C7  72                 	db	114	;'r'
   164  00F9C8  65                 	db	101	;'e'
   165  00F9C9  73                 	db	115	;'s'
   166  00F9CA  73                 	db	115	;'s'
   167  00F9CB  20                 	db	32
   168  00F9CC  6B                 	db	107	;'k'
   169  00F9CD  65                 	db	101	;'e'
   170  00F9CE  79                 	db	121	;'y'
   171  00F9CF  62                 	db	98	;'b'
   172  00F9D0  6F                 	db	111	;'o'
   173  00F9D1  61                 	db	97	;'a'
   174  00F9D2  72                 	db	114	;'r'
   175  00F9D3  64                 	db	100	;'d'
   176  00F9D4  20                 	db	32
   177  00F9D5  6B                 	db	107	;'k'
   178  00F9D6  65                 	db	101	;'e'
   179  00F9D7  79                 	db	121	;'y'
   180  00F9D8  20                 	db	32
   181  00F9D9  74                 	db	116	;'t'
   182  00F9DA  6F                 	db	111	;'o'
   183  00F9DB  20                 	db	32
   184  00F9DC  63                 	db	99	;'c'
   185  00F9DD  61                 	db	97	;'a'
   186  00F9DE  6C                 	db	108	;'l'
   187  00F9DF  69                 	db	105	;'i'
   188  00F9E0  62                 	db	98	;'b'
   189  00F9E1  72                 	db	114	;'r'
   190  00F9E2  61                 	db	97	;'a'
   191  00F9E3  74                 	db	116	;'t'
   192  00F9E4  65                 	db	101	;'e'
   193  00F9E5  20                 	db	32
   194  00F9E6  6E                 	db	110	;'n'
   195  00F9E7  6F                 	db	111	;'o'
   196  00F9E8  6D                 	db	109	;'m'
   197  00F9E9  69                 	db	105	;'i'
   198  00F9EA  6E                 	db	110	;'n'
   199  00F9EB  61                 	db	97	;'a'
   200  00F9EC  6C                 	db	108	;'l'
   201  00F9ED  48                 	db	72	;'H'
   202  00F9EE  61                 	db	97	;'a'
   203  00F9EF  6C                 	db	108	;'l'
   204  00F9F0  6C                 	db	108	;'l'
   205  00F9F1  55                 	db	85	;'U'
   206  00F9F2  6E                 	db	110	;'n'
   207  00F9F3  50                 	db	80	;'P'
   208  00F9F4  72                 	db	114	;'r'
   209  00F9F5  65                 	db	101	;'e'
   210  00F9F6  73                 	db	115	;'s'
   211  00F9F7  73                 	db	115	;'s'
   212  00F9F8  65                 	db	101	;'e'
   213  00F9F9  64                 	db	100	;'d'
   214  00F9FA  00                 	db	0
   215  00F9FB                     STR_26:
   216  00F9FB  50                 	db	80	;'P'
   217  00F9FC  72                 	db	114	;'r'
   218  00F9FD  65                 	db	101	;'e'
   219  00F9FE  73                 	db	115	;'s'
   220  00F9FF  73                 	db	115	;'s'
   221  00FA00  20                 	db	32
   222  00FA01  74                 	db	116	;'t'
   223  00FA02  68                 	db	104	;'h'
   224  00FA03  65                 	db	101	;'e'
   225  00FA04  20                 	db	32
   226  00FA05  70                 	db	112	;'p'
   227  00FA06  69                 	db	105	;'i'
   228  00FA07  61                 	db	97	;'a'
   229  00FA08  6E                 	db	110	;'n'
   230  00FA09  6F                 	db	111	;'o'
   231  00FA0A  20                 	db	32
   232  00FA0B  6B                 	db	107	;'k'
   233  00FA0C  65                 	db	101	;'e'
   234  00FA0D  79                 	db	121	;'y'
   235  00FA0E  2C                 	db	44
   236  00FA0F  20                 	db	32
   237  00FA10  70                 	db	112	;'p'
   238  00FA11  72                 	db	114	;'r'
   239  00FA12  65                 	db	101	;'e'
   240  00FA13  73                 	db	115	;'s'
   241  00FA14  73                 	db	115	;'s'
   242  00FA15  20                 	db	32
   243  00FA16  6B                 	db	107	;'k'
   244  00FA17  65                 	db	101	;'e'
   245  00FA18  79                 	db	121	;'y'
   246  00FA19  62                 	db	98	;'b'
   247  00FA1A  6F                 	db	111	;'o'
   248  00FA1B  61                 	db	97	;'a'
   249  00FA1C  72                 	db	114	;'r'
   250  00FA1D  64                 	db	100	;'d'
   251  00FA1E  20                 	db	32
   252  00FA1F  6B                 	db	107	;'k'
   253  00FA20  65                 	db	101	;'e'
   254  00FA21  79                 	db	121	;'y'
   255  00FA22  20                 	db	32
   256  00FA23  74                 	db	116	;'t'
   257  00FA24  6F                 	db	111	;'o'
   258  00FA25  20                 	db	32
   259  00FA26  63                 	db	99	;'c'
   260  00FA27  61                 	db	97	;'a'
   261  00FA28  6C                 	db	108	;'l'
   262  00FA29  69                 	db	105	;'i'
   263  00FA2A  62                 	db	98	;'b'
   264  00FA2B  72                 	db	114	;'r'
   265  00FA2C  61                 	db	97	;'a'
   266  00FA2D  74                 	db	116	;'t'
   267  00FA2E  65                 	db	101	;'e'
   268  00FA2F  20                 	db	32
   269  00FA30  6E                 	db	110	;'n'
   270  00FA31  6F                 	db	111	;'o'
   271  00FA32  6D                 	db	109	;'m'
   272  00FA33  69                 	db	105	;'i'
   273  00FA34  6E                 	db	110	;'n'
   274  00FA35  61                 	db	97	;'a'
   275  00FA36  6C                 	db	108	;'l'
   276  00FA37  48                 	db	72	;'H'
   277  00FA38  61                 	db	97	;'a'
   278  00FA39  6C                 	db	108	;'l'
   279  00FA3A  6C                 	db	108	;'l'
   280  00FA3B  50                 	db	80	;'P'
   281  00FA3C  72                 	db	114	;'r'
   282  00FA3D  65                 	db	101	;'e'
   283  00FA3E  73                 	db	115	;'s'
   284  00FA3F  73                 	db	115	;'s'
   285  00FA40  65                 	db	101	;'e'
   286  00FA41  64                 	db	100	;'d'
   287  00FA42  00                 	db	0
   288  00FA43                     STR_18:
   289  00FA43  74                 	db	116	;'t'
   290  00FA44  3A                 	db	58	;':'
   291  00FA45  20                 	db	32
   292  00FA46  77                 	db	119	;'w'
   293  00FA47  61                 	db	97	;'a'
   294  00FA48  69                 	db	105	;'i'
   295  00FA49  74                 	db	116	;'t'
   296  00FA4A  20                 	db	32
   297  00FA4B  66                 	db	102	;'f'
   298  00FA4C  6F                 	db	111	;'o'
   299  00FA4D  72                 	db	114	;'r'
   300  00FA4E  20                 	db	32
   301  00FA4F  70                 	db	112	;'p'
   302  00FA50  69                 	db	105	;'i'
   303  00FA51  61                 	db	97	;'a'
   304  00FA52  6E                 	db	110	;'n'
   305  00FA53  6F                 	db	111	;'o'
   306  00FA54  20                 	db	32
   307  00FA55  6B                 	db	107	;'k'
   308  00FA56  65                 	db	101	;'e'
   309  00FA57  79                 	db	121	;'y'
   310  00FA58  70                 	db	112	;'p'
   311  00FA59  72                 	db	114	;'r'
   312  00FA5A  65                 	db	101	;'e'
   313  00FA5B  73                 	db	115	;'s'
   314  00FA5C  73                 	db	115	;'s'
   315  00FA5D  20                 	db	32
   316  00FA5E  61                 	db	97	;'a'
   317  00FA5F  6E                 	db	110	;'n'
   318  00FA60  64                 	db	100	;'d'
   319  00FA61  20                 	db	32
   320  00FA62  72                 	db	114	;'r'
   321  00FA63  65                 	db	101	;'e'
   322  00FA64  70                 	db	112	;'p'
   323  00FA65  6F                 	db	111	;'o'
   324  00FA66  72                 	db	114	;'r'
   325  00FA67  74                 	db	116	;'t'
   326  00FA68  20                 	db	32
   327  00FA69  25                 	db	37
   328  00FA6A  64                 	db	100	;'d'
   329  00FA6B  20                 	db	32
   330  00FA6C  73                 	db	115	;'s'
   331  00FA6D  61                 	db	97	;'a'
   332  00FA6E  6D                 	db	109	;'m'
   333  00FA6F  70                 	db	112	;'p'
   334  00FA70  6C                 	db	108	;'l'
   335  00FA71  65                 	db	101	;'e'
   336  00FA72  73                 	db	115	;'s'
   337  00FA73  2C                 	db	44
   338  00FA74  20                 	db	32
   339  00FA75  6F                 	db	111	;'o'
   340  00FA76  6E                 	db	110	;'n'
   341  00FA77  65                 	db	101	;'e'
   342  00FA78  20                 	db	32
   343  00FA79  65                 	db	101	;'e'
   344  00FA7A  76                 	db	118	;'v'
   345  00FA7B  65                 	db	101	;'e'
   346  00FA7C  72                 	db	114	;'r'
   347  00FA7D  79                 	db	121	;'y'
   348  00FA7E  20                 	db	32
   349  00FA7F  25                 	db	37
   350  00FA80  64                 	db	100	;'d'
   351  00FA81  75                 	db	117	;'u'
   352  00FA82  73                 	db	115	;'s'
   353  00FA83  2E                 	db	46
   354  00FA84  0D                 	db	13
   355  00FA85  0A                 	db	10
   356  00FA86  00                 	db	0
   357  00FA87                     STR_51:
   358  00FA87  20                 	db	32
   359  00FA88  20                 	db	32
   360  00FA89  20                 	db	32
   361  00FA8A  20                 	db	32
   362  00FA8B  50                 	db	80	;'P'
   363  00FA8C  72                 	db	114	;'r'
   364  00FA8D  65                 	db	101	;'e'
   365  00FA8E  73                 	db	115	;'s'
   366  00FA8F  73                 	db	115	;'s'
   367  00FA90  20                 	db	32
   368  00FA91  75                 	db	117	;'u'
   369  00FA92  70                 	db	112	;'p'
   370  00FA93  70                 	db	112	;'p'
   371  00FA94  65                 	db	101	;'e'
   372  00FA95  72                 	db	114	;'r'
   373  00FA96  20                 	db	32
   374  00FA97  70                 	db	112	;'p'
   375  00FA98  75                 	db	117	;'u'
   376  00FA99  73                 	db	115	;'s'
   377  00FA9A  68                 	db	104	;'h'
   378  00FA9B  20                 	db	32
   379  00FA9C  62                 	db	98	;'b'
   380  00FA9D  75                 	db	117	;'u'
   381  00FA9E  74                 	db	116	;'t'
   382  00FA9F  74                 	db	116	;'t'
   383  00FAA0  6F                 	db	111	;'o'
   384  00FAA1  6E                 	db	110	;'n'
   385  00FAA2  20                 	db	32
   386  00FAA3  6F                 	db	111	;'o'
   387  00FAA4  6E                 	db	110	;'n'
   388  00FAA5  20                 	db	32
   389  00FAA6  44                 	db	68	;'D'
   390  00FAA7  65                 	db	101	;'e'
   391  00FAA8  76                 	db	118	;'v'
   392  00FAA9  27                 	db	39
   393  00FAAA  31                 	db	49	;'1'
   394  00FAAB  38                 	db	56	;'8'
   395  00FAAC  20                 	db	32
   396  00FAAD  74                 	db	116	;'t'
   397  00FAAE  6F                 	db	111	;'o'
   398  00FAAF  20                 	db	32
   399  00FAB0  73                 	db	115	;'s'
   400  00FAB1  74                 	db	116	;'t'
   401  00FAB2  61                 	db	97	;'a'
   402  00FAB3  72                 	db	114	;'r'
   403  00FAB4  74                 	db	116	;'t'
   404  00FAB5  20                 	db	32
   405  00FAB6  4D                 	db	77	;'M'
   406  00FAB7  49                 	db	73	;'I'
   407  00FAB8  44                 	db	68	;'D'
   408  00FAB9  49                 	db	73	;'I'
   409  00FABA  20                 	db	32
   410  00FABB  70                 	db	112	;'p'
   411  00FABC  6C                 	db	108	;'l'
   412  00FABD  61                 	db	97	;'a'
   413  00FABE  79                 	db	121	;'y'
   414  00FABF  20                 	db	32
   415  00FAC0  73                 	db	115	;'s'
   416  00FAC1  65                 	db	101	;'e'
   417  00FAC2  71                 	db	113	;'q'
   418  00FAC3  75                 	db	117	;'u'
   419  00FAC4  65                 	db	101	;'e'
   420  00FAC5  6E                 	db	110	;'n'
   421  00FAC6  63                 	db	99	;'c'
   422  00FAC7  65                 	db	101	;'e'
   423  00FAC8  0D                 	db	13
   424  00FAC9  0A                 	db	10
   425  00FACA  00                 	db	0
   426  00FACB                     STR_52:
   427  00FACB  20                 	db	32
   428  00FACC  20                 	db	32
   429  00FACD  20                 	db	32
   430  00FACE  20                 	db	32
   431  00FACF  50                 	db	80	;'P'
   432  00FAD0  72                 	db	114	;'r'
   433  00FAD1  65                 	db	101	;'e'
   434  00FAD2  73                 	db	115	;'s'
   435  00FAD3  73                 	db	115	;'s'
   436  00FAD4  20                 	db	32
   437  00FAD5  6C                 	db	108	;'l'
   438  00FAD6  6F                 	db	111	;'o'
   439  00FAD7  77                 	db	119	;'w'
   440  00FAD8  65                 	db	101	;'e'
   441  00FAD9  72                 	db	114	;'r'
   442  00FADA  20                 	db	32
   443  00FADB  70                 	db	112	;'p'
   444  00FADC  75                 	db	117	;'u'
   445  00FADD  73                 	db	115	;'s'
   446  00FADE  68                 	db	104	;'h'
   447  00FADF  20                 	db	32
   448  00FAE0  62                 	db	98	;'b'
   449  00FAE1  75                 	db	117	;'u'
   450  00FAE2  74                 	db	116	;'t'
   451  00FAE3  74                 	db	116	;'t'
   452  00FAE4  6F                 	db	111	;'o'
   453  00FAE5  6E                 	db	110	;'n'
   454  00FAE6  20                 	db	32
   455  00FAE7  6F                 	db	111	;'o'
   456  00FAE8  6E                 	db	110	;'n'
   457  00FAE9  20                 	db	32
   458  00FAEA  44                 	db	68	;'D'
   459  00FAEB  65                 	db	101	;'e'
   460  00FAEC  76                 	db	118	;'v'
   461  00FAED  27                 	db	39
   462  00FAEE  31                 	db	49	;'1'
   463  00FAEF  38                 	db	56	;'8'
   464  00FAF0  20                 	db	32
   465  00FAF1  74                 	db	116	;'t'
   466  00FAF2  6F                 	db	111	;'o'
   467  00FAF3  20                 	db	32
   468  00FAF4  65                 	db	101	;'e'
   469  00FAF5  78                 	db	120	;'x'
   470  00FAF6  69                 	db	105	;'i'
   471  00FAF7  74                 	db	116	;'t'
   472  00FAF8  20                 	db	32
   473  00FAF9  4D                 	db	77	;'M'
   474  00FAFA  49                 	db	73	;'I'
   475  00FAFB  44                 	db	68	;'D'
   476  00FAFC  49                 	db	73	;'I'
   477  00FAFD  20                 	db	32
   478  00FAFE  70                 	db	112	;'p'
   479  00FAFF  6C                 	db	108	;'l'
   480  00FB00  61                 	db	97	;'a'
   481  00FB01  79                 	db	121	;'y'
   482  00FB02  20                 	db	32
   483  00FB03  73                 	db	115	;'s'
   484  00FB04  65                 	db	101	;'e'
   485  00FB05  71                 	db	113	;'q'
   486  00FB06  75                 	db	117	;'u'
   487  00FB07  65                 	db	101	;'e'
   488  00FB08  6E                 	db	110	;'n'
   489  00FB09  63                 	db	99	;'c'
   490  00FB0A  65                 	db	101	;'e'
   491  00FB0B  0D                 	db	13
   492  00FB0C  0A                 	db	10
   493  00FB0D  00                 	db	0
   494  00FB0E                     STR_50:
   495  00FB0E  20                 	db	32
   496  00FB0F  20                 	db	32
   497  00FB10  20                 	db	32
   498  00FB11  20                 	db	32
   499  00FB12  20                 	db	32
   500  00FB13  20                 	db	32
   501  00FB14  20                 	db	32
   502  00FB15  20                 	db	32
   503  00FB16  4D                 	db	77	;'M'
   504  00FB17  49                 	db	73	;'I'
   505  00FB18  44                 	db	68	;'D'
   506  00FB19  49                 	db	73	;'I'
   507  00FB1A  20                 	db	32
   508  00FB1B  4F                 	db	79	;'O'
   509  00FB1C  75                 	db	117	;'u'
   510  00FB1D  74                 	db	116	;'t'
   511  00FB1E  20                 	db	32
   512  00FB1F  2D                 	db	45
   513  00FB20  3E                 	db	62	;'>'
   514  00FB21  20                 	db	32
   515  00FB22  4D                 	db	77	;'M'
   516  00FB23  69                 	db	105	;'i'
   517  00FB24  63                 	db	99	;'c'
   518  00FB25  72                 	db	114	;'r'
   519  00FB26  6F                 	db	111	;'o'
   520  00FB27  73                 	db	115	;'s'
   521  00FB28  6F                 	db	111	;'o'
   522  00FB29  66                 	db	102	;'f'
   523  00FB2A  74                 	db	116	;'t'
   524  00FB2B  20                 	db	32
   525  00FB2C  47                 	db	71	;'G'
   526  00FB2D  53                 	db	83	;'S'
   527  00FB2E  20                 	db	32
   528  00FB2F  57                 	db	87	;'W'
   529  00FB30  61                 	db	97	;'a'
   530  00FB31  76                 	db	118	;'v'
   531  00FB32  65                 	db	101	;'e'
   532  00FB33  74                 	db	116	;'t'
   533  00FB34  61                 	db	97	;'a'
   534  00FB35  62                 	db	98	;'b'
   535  00FB36  6C                 	db	108	;'l'
   536  00FB37  65                 	db	101	;'e'
   537  00FB38  20                 	db	32
   538  00FB39  53                 	db	83	;'S'
   539  00FB3A  79                 	db	121	;'y'
   540  00FB3B  6E                 	db	110	;'n'
   541  00FB3C  74                 	db	116	;'t'
   542  00FB3D  68                 	db	104	;'h'
   543  00FB3E  20                 	db	32
   544  00FB3F  0D                 	db	13
   545  00FB40  0A                 	db	10
   546  00FB41  00                 	db	0
   547  00FB42                     STR_5:
   548  00FB42  2D                 	db	45
   549  00FB43  2D                 	db	45
   550  00FB44  2D                 	db	45
   551  00FB45  2D                 	db	45
   552  00FB46  2D                 	db	45
   553  00FB47  2D                 	db	45
   554  00FB48  2D                 	db	45
   555  00FB49  2D                 	db	45
   556  00FB4A  2D                 	db	45
   557  00FB4B  2D                 	db	45
   558  00FB4C  2D                 	db	45
   559  00FB4D  2D                 	db	45
   560  00FB4E  2D                 	db	45
   561  00FB4F  2D                 	db	45
   562  00FB50  2D                 	db	45
   563  00FB51  2D                 	db	45
   564  00FB52  2D                 	db	45
   565  00FB53  2D                 	db	45
   566  00FB54  2D                 	db	45
   567  00FB55  2D                 	db	45
   568  00FB56  2D                 	db	45
   569  00FB57  2D                 	db	45
   570  00FB58  2D                 	db	45
   571  00FB59  2D                 	db	45
   572  00FB5A  2D                 	db	45
   573  00FB5B  2D                 	db	45
   574  00FB5C  2D                 	db	45
   575  00FB5D  2D                 	db	45
   576  00FB5E  2D                 	db	45
   577  00FB5F  2D                 	db	45
   578  00FB60  2D                 	db	45
   579  00FB61  2D                 	db	45
   580  00FB62  2D                 	db	45
   581  00FB63  2D                 	db	45
   582  00FB64  2D                 	db	45
   583  00FB65  2D                 	db	45
   584  00FB66  2D                 	db	45
   585  00FB67  2D                 	db	45
   586  00FB68  2D                 	db	45
   587  00FB69  2D                 	db	45
   588  00FB6A  2D                 	db	45
   589  00FB6B  2D                 	db	45
   590  00FB6C  2D                 	db	45
   591  00FB6D  2D                 	db	45
   592  00FB6E  2D                 	db	45
   593  00FB6F  2D                 	db	45
   594  00FB70  2D                 	db	45
   595  00FB71  2D                 	db	45
   596  00FB72  2D                 	db	45
   597  00FB73  0D                 	db	13
   598  00FB74  0A                 	db	10
   599  00FB75  00                 	db	0
   600  00FB76                     STR_57:
   601  00FB76  20                 	db	32
   602  00FB77  20                 	db	32
   603  00FB78  20                 	db	32
   604  00FB79  20                 	db	32
   605  00FB7A  4C                 	db	76	;'L'
   606  00FB7B  61                 	db	97	;'a'
   607  00FB7C  75                 	db	117	;'u'
   608  00FB7D  6E                 	db	110	;'n'
   609  00FB7E  63                 	db	99	;'c'
   610  00FB7F  68                 	db	104	;'h'
   611  00FB80  20                 	db	32
   612  00FB81  50                 	db	80	;'P'
   613  00FB82  75                 	db	117	;'u'
   614  00FB83  54                 	db	84	;'T'
   615  00FB84  54                 	db	84	;'T'
   616  00FB85  59                 	db	89	;'Y'
   617  00FB86  20                 	db	32
   618  00FB87  61                 	db	97	;'a'
   619  00FB88  6E                 	db	110	;'n'
   620  00FB89  64                 	db	100	;'d'
   621  00FB8A  20                 	db	32
   622  00FB8B  72                 	db	114	;'r'
   623  00FB8C  65                 	db	101	;'e'
   624  00FB8D  63                 	db	99	;'c'
   625  00FB8E  6F                 	db	111	;'o'
   626  00FB8F  6E                 	db	110	;'n'
   627  00FB90  6E                 	db	110	;'n'
   628  00FB91  65                 	db	101	;'e'
   629  00FB92  63                 	db	99	;'c'
   630  00FB93  74                 	db	116	;'t'
   631  00FB94  20                 	db	32
   632  00FB95  74                 	db	116	;'t'
   633  00FB96  6F                 	db	111	;'o'
   634  00FB97  20                 	db	32
   635  00FB98  74                 	db	116	;'t'
   636  00FB99  68                 	db	104	;'h'
   637  00FB9A  65                 	db	101	;'e'
   638  00FB9B  20                 	db	32
   639  00FB9C  56                 	db	86	;'V'
   640  00FB9D  43                 	db	67	;'C'
   641  00FB9E  4F                 	db	79	;'O'
   642  00FB9F  4D                 	db	77	;'M'
   643  00FBA0  20                 	db	32
   644  00FBA1  70                 	db	112	;'p'
   645  00FBA2  6F                 	db	111	;'o'
   646  00FBA3  72                 	db	114	;'r'
   647  00FBA4  74                 	db	116	;'t'
   648  00FBA5  0D                 	db	13
   649  00FBA6  0A                 	db	10
   650  00FBA7  00                 	db	0
   651  00FBA8                     STR_17:
   652  00FBA8  31                 	db	49	;'1'
   653  00FBA9  3A                 	db	58	;':'
   654  00FBAA  20                 	db	32
   655  00FBAB  72                 	db	114	;'r'
   656  00FBAC  65                 	db	101	;'e'
   657  00FBAD  70                 	db	112	;'p'
   658  00FBAE  6F                 	db	111	;'o'
   659  00FBAF  72                 	db	114	;'r'
   660  00FBB0  74                 	db	116	;'t'
   661  00FBB1  20                 	db	32
   662  00FBB2  61                 	db	97	;'a'
   663  00FBB3  20                 	db	32
   664  00FBB4  73                 	db	115	;'s'
   665  00FBB5  69                 	db	105	;'i'
   666  00FBB6  6E                 	db	110	;'n'
   667  00FBB7  67                 	db	103	;'g'
   668  00FBB8  6C                 	db	108	;'l'
   669  00FBB9  65                 	db	101	;'e'
   670  00FBBA  20                 	db	32
   671  00FBBB  48                 	db	72	;'H'
   672  00FBBC  61                 	db	97	;'a'
   673  00FBBD  6C                 	db	108	;'l'
   674  00FBBE  6C                 	db	108	;'l'
   675  00FBBF  20                 	db	32
   676  00FBC0  65                 	db	101	;'e'
   677  00FBC1  66                 	db	102	;'f'
   678  00FBC2  66                 	db	102	;'f'
   679  00FBC3  65                 	db	101	;'e'
   680  00FBC4  63                 	db	99	;'c'
   681  00FBC5  74                 	db	116	;'t'
   682  00FBC6  20                 	db	32
   683  00FBC7  73                 	db	115	;'s'
   684  00FBC8  65                 	db	101	;'e'
   685  00FBC9  6E                 	db	110	;'n'
   686  00FBCA  73                 	db	115	;'s'
   687  00FBCB  6F                 	db	111	;'o'
   688  00FBCC  72                 	db	114	;'r'
   689  00FBCD  20                 	db	32
   690  00FBCE  72                 	db	114	;'r'
   691  00FBCF  65                 	db	101	;'e'
   692  00FBD0  61                 	db	97	;'a'
   693  00FBD1  64                 	db	100	;'d'
   694  00FBD2  69                 	db	105	;'i'
   695  00FBD3  6E                 	db	110	;'n'
   696  00FBD4  67                 	db	103	;'g'
   697  00FBD5  2E                 	db	46
   698  00FBD6  0D                 	db	13
   699  00FBD7  0A                 	db	10
   700  00FBD8  00                 	db	0
   701  00FBD9                     STR_49:
   702  00FBD9  20                 	db	32
   703  00FBDA  20                 	db	32
   704  00FBDB  20                 	db	32
   705  00FBDC  20                 	db	32
   706  00FBDD  20                 	db	32
   707  00FBDE  20                 	db	32
   708  00FBDF  20                 	db	32
   709  00FBE0  20                 	db	32
   710  00FBE1  53                 	db	83	;'S'
   711  00FBE2  65                 	db	101	;'e'
   712  00FBE3  72                 	db	114	;'r'
   713  00FBE4  69                 	db	105	;'i'
   714  00FBE5  61                 	db	97	;'a'
   715  00FBE6  6C                 	db	108	;'l'
   716  00FBE7  20                 	db	32
   717  00FBE8  50                 	db	80	;'P'
   718  00FBE9  6F                 	db	111	;'o'
   719  00FBEA  72                 	db	114	;'r'
   720  00FBEB  74                 	db	116	;'t'
   721  00FBEC  20                 	db	32
   722  00FBED  2D                 	db	45
   723  00FBEE  3E                 	db	62	;'>'
   724  00FBEF  20                 	db	32
   725  00FBF0  55                 	db	85	;'U'
   726  00FBF1  53                 	db	83	;'S'
   727  00FBF2  42                 	db	66	;'B'
   728  00FBF3  20                 	db	32
   729  00FBF4  53                 	db	83	;'S'
   730  00FBF5  65                 	db	101	;'e'
   731  00FBF6  72                 	db	114	;'r'
   732  00FBF7  69                 	db	105	;'i'
   733  00FBF8  61                 	db	97	;'a'
   734  00FBF9  6C                 	db	108	;'l'
   735  00FBFA  20                 	db	32
   736  00FBFB  50                 	db	80	;'P'
   737  00FBFC  6F                 	db	111	;'o'
   738  00FBFD  72                 	db	114	;'r'
   739  00FBFE  74                 	db	116	;'t'
   740  00FBFF  20                 	db	32
   741  00FC00  28                 	db	40
   742  00FC01  43                 	db	67	;'C'
   743  00FC02  4F                 	db	79	;'O'
   744  00FC03  4D                 	db	77	;'M'
   745  00FC04  78                 	db	120	;'x'
   746  00FC05  29                 	db	41
   747  00FC06  0D                 	db	13
   748  00FC07  0A                 	db	10
   749  00FC08  00                 	db	0
   750  00FC09                     STR_16:
   751  00FC09  63                 	db	99	;'c'
   752  00FC0A  2F                 	db	47
   753  00FC0B  43                 	db	67	;'C'
   754  00FC0C  3A                 	db	58	;':'
   755  00FC0D  20                 	db	32
   756  00FC0E  63                 	db	99	;'c'
   757  00FC0F  61                 	db	97	;'a'
   758  00FC10  6C                 	db	108	;'l'
   759  00FC11  69                 	db	105	;'i'
   760  00FC12  62                 	db	98	;'b'
   761  00FC13  72                 	db	114	;'r'
   762  00FC14  61                 	db	97	;'a'
   763  00FC15  74                 	db	116	;'t'
   764  00FC16  65                 	db	101	;'e'
   765  00FC17  20                 	db	32
   766  00FC18  75                 	db	117	;'u'
   767  00FC19  6E                 	db	110	;'n'
   768  00FC1A  70                 	db	112	;'p'
   769  00FC1B  72                 	db	114	;'r'
   770  00FC1C  65                 	db	101	;'e'
   771  00FC1D  73                 	db	115	;'s'
   772  00FC1E  73                 	db	115	;'s'
   773  00FC1F  65                 	db	101	;'e'
   774  00FC20  64                 	db	100	;'d'
   775  00FC21  2F                 	db	47
   776  00FC22  70                 	db	112	;'p'
   777  00FC23  72                 	db	114	;'r'
   778  00FC24  65                 	db	101	;'e'
   779  00FC25  73                 	db	115	;'s'
   780  00FC26  73                 	db	115	;'s'
   781  00FC27  65                 	db	101	;'e'
   782  00FC28  64                 	db	100	;'d'
   783  00FC29  20                 	db	32
   784  00FC2A  68                 	db	104	;'h'
   785  00FC2B  61                 	db	97	;'a'
   786  00FC2C  6C                 	db	108	;'l'
   787  00FC2D  6C                 	db	108	;'l'
   788  00FC2E  20                 	db	32
   789  00FC2F  73                 	db	115	;'s'
   790  00FC30  65                 	db	101	;'e'
   791  00FC31  6E                 	db	110	;'n'
   792  00FC32  73                 	db	115	;'s'
   793  00FC33  6F                 	db	111	;'o'
   794  00FC34  72                 	db	114	;'r'
   795  00FC35  2E                 	db	46
   796  00FC36  0D                 	db	13
   797  00FC37  0A                 	db	10
   798  00FC38  00                 	db	0
   799  00FC39                     STR_48:
   800  00FC39  20                 	db	32
   801  00FC3A  20                 	db	32
   802  00FC3B  20                 	db	32
   803  00FC3C  20                 	db	32
   804  00FC3D  49                 	db	73	;'I'
   805  00FC3E  6E                 	db	110	;'n'
   806  00FC3F  20                 	db	32
   807  00FC40  74                 	db	116	;'t'
   808  00FC41  68                 	db	104	;'h'
   809  00FC42  65                 	db	101	;'e'
   810  00FC43  20                 	db	32
   811  00FC44  68                 	db	104	;'h'
   812  00FC45  61                 	db	97	;'a'
   813  00FC46  69                 	db	105	;'i'
   814  00FC47  72                 	db	114	;'r'
   815  00FC48  6C                 	db	108	;'l'
   816  00FC49  65                 	db	101	;'e'
   817  00FC4A  73                 	db	115	;'s'
   818  00FC4B  73                 	db	115	;'s'
   819  00FC4C  2D                 	db	45
   820  00FC4D  6D                 	db	109	;'m'
   821  00FC4E  69                 	db	105	;'i'
   822  00FC4F  64                 	db	100	;'d'
   823  00FC50  69                 	db	105	;'i'
   824  00FC51  73                 	db	115	;'s'
   825  00FC52  65                 	db	101	;'e'
   826  00FC53  72                 	db	114	;'r'
   827  00FC54  69                 	db	105	;'i'
   828  00FC55  61                 	db	97	;'a'
   829  00FC56  6C                 	db	108	;'l'
   830  00FC57  20                 	db	32
   831  00FC58  70                 	db	112	;'p'
   832  00FC59  72                 	db	114	;'r'
   833  00FC5A  6F                 	db	111	;'o'
   834  00FC5B  67                 	db	103	;'g'
   835  00FC5C  72                 	db	114	;'r'
   836  00FC5D  61                 	db	97	;'a'
   837  00FC5E  6D                 	db	109	;'m'
   838  00FC5F  3A                 	db	58	;':'
   839  00FC60  0D                 	db	13
   840  00FC61  0A                 	db	10
   841  00FC62  00                 	db	0
   842  00FC63                     STR_54:
   843  00FC63  20                 	db	32
   844  00FC64  20                 	db	32
   845  00FC65  20                 	db	32
   846  00FC66  20                 	db	32
   847  00FC67  20                 	db	32
   848  00FC68  20                 	db	32
   849  00FC69  20                 	db	32
   850  00FC6A  20                 	db	32
   851  00FC6B  53                 	db	83	;'S'
   852  00FC6C  65                 	db	101	;'e'
   853  00FC6D  72                 	db	114	;'r'
   854  00FC6E  69                 	db	105	;'i'
   855  00FC6F  61                 	db	97	;'a'
   856  00FC70  6C                 	db	108	;'l'
   857  00FC71  20                 	db	32
   858  00FC72  50                 	db	80	;'P'
   859  00FC73  6F                 	db	111	;'o'
   860  00FC74  72                 	db	114	;'r'
   861  00FC75  74                 	db	116	;'t'
   862  00FC76  20                 	db	32
   863  00FC77  2D                 	db	45
   864  00FC78  3E                 	db	62	;'>'
   865  00FC79  20                 	db	32
   866  00FC7A  28                 	db	40
   867  00FC7B  4E                 	db	78	;'N'
   868  00FC7C  6F                 	db	111	;'o'
   869  00FC7D  74                 	db	116	;'t'
   870  00FC7E  20                 	db	32
   871  00FC7F  43                 	db	67	;'C'
   872  00FC80  6F                 	db	111	;'o'
   873  00FC81  6E                 	db	110	;'n'
   874  00FC82  6E                 	db	110	;'n'
   875  00FC83  65                 	db	101	;'e'
   876  00FC84  63                 	db	99	;'c'
   877  00FC85  74                 	db	116	;'t'
   878  00FC86  65                 	db	101	;'e'
   879  00FC87  64                 	db	100	;'d'
   880  00FC88  29                 	db	41
   881  00FC89  0D                 	db	13
   882  00FC8A  0A                 	db	10
   883  00FC8B  00                 	db	0
   884  00FC8C                     STR_8:
   885  00FC8C  20                 	db	32
   886  00FC8D  20                 	db	32
   887  00FC8E  20                 	db	32
   888  00FC8F  20                 	db	32
   889  00FC90  73                 	db	115	;'s'
   890  00FC91  61                 	db	97	;'a'
   891  00FC92  6D                 	db	109	;'m'
   892  00FC93  70                 	db	112	;'p'
   893  00FC94  6C                 	db	108	;'l'
   894  00FC95  65                 	db	101	;'e'
   895  00FC96  52                 	db	82	;'R'
   896  00FC97  61                 	db	97	;'a'
   897  00FC98  74                 	db	116	;'t'
   898  00FC99  65                 	db	101	;'e'
   899  00FC9A  20                 	db	32
   900  00FC9B  3D                 	db	61	;'='
   901  00FC9C  20                 	db	32
   902  00FC9D  25                 	db	37
   903  00FC9E  64                 	db	100	;'d'
   904  00FC9F  20                 	db	32
   905  00FCA0  54                 	db	84	;'T'
   906  00FCA1  4D                 	db	77	;'M'
   907  00FCA2  52                 	db	82	;'R'
   908  00FCA3  30                 	db	48	;'0'
   909  00FCA4  20                 	db	32
   910  00FCA5  63                 	db	99	;'c'
   911  00FCA6  6F                 	db	111	;'o'
   912  00FCA7  75                 	db	117	;'u'
   913  00FCA8  6E                 	db	110	;'n'
   914  00FCA9  74                 	db	116	;'t'
   915  00FCAA  73                 	db	115	;'s'
   916  00FCAB  20                 	db	32
   917  00FCAC  3D                 	db	61	;'='
   918  00FCAD  20                 	db	32
   919  00FCAE  25                 	db	37
   920  00FCAF  64                 	db	100	;'d'
   921  00FCB0  75                 	db	117	;'u'
   922  00FCB1  53                 	db	83	;'S'
   923  00FCB2  0D                 	db	13
   924  00FCB3  0A                 	db	10
   925  00FCB4  00                 	db	0
   926  00FCB5                     STR_29:
   927  00FCB5  6E                 	db	110	;'n'
   928  00FCB6  65                 	db	101	;'e'
   929  00FCB7  77                 	db	119	;'w'
   930  00FCB8  20                 	db	32
   931  00FCB9  73                 	db	115	;'s'
   932  00FCBA  61                 	db	97	;'a'
   933  00FCBB  6D                 	db	109	;'m'
   934  00FCBC  70                 	db	112	;'p'
   935  00FCBD  6C                 	db	108	;'l'
   936  00FCBE  65                 	db	101	;'e'
   937  00FCBF  52                 	db	82	;'R'
   938  00FCC0  61                 	db	97	;'a'
   939  00FCC1  74                 	db	116	;'t'
   940  00FCC2  65                 	db	101	;'e'
   941  00FCC3  20                 	db	32
   942  00FCC4  3D                 	db	61	;'='
   943  00FCC5  20                 	db	32
   944  00FCC6  25                 	db	37
   945  00FCC7  64                 	db	100	;'d'
   946  00FCC8  20                 	db	32
   947  00FCC9  54                 	db	84	;'T'
   948  00FCCA  4D                 	db	77	;'M'
   949  00FCCB  52                 	db	82	;'R'
   950  00FCCC  30                 	db	48	;'0'
   951  00FCCD  20                 	db	32
   952  00FCCE  63                 	db	99	;'c'
   953  00FCCF  6F                 	db	111	;'o'
   954  00FCD0  75                 	db	117	;'u'
   955  00FCD1  6E                 	db	110	;'n'
   956  00FCD2  74                 	db	116	;'t'
   957  00FCD3  73                 	db	115	;'s'
   958  00FCD4  20                 	db	32
   959  00FCD5  3D                 	db	61	;'='
   960  00FCD6  20                 	db	32
   961  00FCD7  25                 	db	37
   962  00FCD8  64                 	db	100	;'d'
   963  00FCD9  75                 	db	117	;'u'
   964  00FCDA  53                 	db	83	;'S'
   965  00FCDB  0D                 	db	13
   966  00FCDC  0A                 	db	10
   967  00FCDD  00                 	db	0
   968  00FCDE                     STR_55:
   969  00FCDE  20                 	db	32
   970  00FCDF  20                 	db	32
   971  00FCE0  20                 	db	32
   972  00FCE1  20                 	db	32
   973  00FCE2  20                 	db	32
   974  00FCE3  20                 	db	32
   975  00FCE4  20                 	db	32
   976  00FCE5  20                 	db	32
   977  00FCE6  4D                 	db	77	;'M'
   978  00FCE7  49                 	db	73	;'I'
   979  00FCE8  44                 	db	68	;'D'
   980  00FCE9  49                 	db	73	;'I'
   981  00FCEA  20                 	db	32
   982  00FCEB  4F                 	db	79	;'O'
   983  00FCEC  75                 	db	117	;'u'
   984  00FCED  74                 	db	116	;'t'
   985  00FCEE  20                 	db	32
   986  00FCEF  2D                 	db	45
   987  00FCF0  3E                 	db	62	;'>'
   988  00FCF1  20                 	db	32
   989  00FCF2  28                 	db	40
   990  00FCF3  4E                 	db	78	;'N'
   991  00FCF4  6F                 	db	111	;'o'
   992  00FCF5  74                 	db	116	;'t'
   993  00FCF6  20                 	db	32
   994  00FCF7  43                 	db	67	;'C'
   995  00FCF8  6F                 	db	111	;'o'
   996  00FCF9  6E                 	db	110	;'n'
   997  00FCFA  6E                 	db	110	;'n'
   998  00FCFB  65                 	db	101	;'e'
   999  00FCFC  63                 	db	99	;'c'
  1000  00FCFD  74                 	db	116	;'t'
  1001  00FCFE  65                 	db	101	;'e'
  1002  00FCFF  64                 	db	100	;'d'
  1003  00FD00  29                 	db	41
  1004  00FD01  0D                 	db	13
  1005  00FD02  0A                 	db	10
  1006  00FD03  00                 	db	0
  1007  00FD04                     STR_25:
  1008  00FD04  4E                 	db	78	;'N'
  1009  00FD05  65                 	db	101	;'e'
  1010  00FD06  77                 	db	119	;'w'
  1011  00FD07  20                 	db	32
  1012  00FD08  6E                 	db	110	;'n'
  1013  00FD09  6F                 	db	111	;'o'
  1014  00FD0A  6D                 	db	109	;'m'
  1015  00FD0B  69                 	db	105	;'i'
  1016  00FD0C  6E                 	db	110	;'n'
  1017  00FD0D  61                 	db	97	;'a'
  1018  00FD0E  6C                 	db	108	;'l'
  1019  00FD0F  48                 	db	72	;'H'
  1020  00FD10  61                 	db	97	;'a'
  1021  00FD11  6C                 	db	108	;'l'
  1022  00FD12  6C                 	db	108	;'l'
  1023  00FD13  55                 	db	85	;'U'
  1024  00FD14  6E                 	db	110	;'n'
  1025  00FD15  50                 	db	80	;'P'
  1026  00FD16  72                 	db	114	;'r'
  1027  00FD17  65                 	db	101	;'e'
  1028  00FD18  73                 	db	115	;'s'
  1029  00FD19  73                 	db	115	;'s'
  1030  00FD1A  65                 	db	101	;'e'
  1031  00FD1B  64                 	db	100	;'d'
  1032  00FD1C  20                 	db	32
  1033  00FD1D  76                 	db	118	;'v'
  1034  00FD1E  61                 	db	97	;'a'
  1035  00FD1F  6C                 	db	108	;'l'
  1036  00FD20  75                 	db	117	;'u'
  1037  00FD21  65                 	db	101	;'e'
  1038  00FD22  20                 	db	32
  1039  00FD23  3D                 	db	61	;'='
  1040  00FD24  20                 	db	32
  1041  00FD25  25                 	db	37
  1042  00FD26  64                 	db	100	;'d'
  1043  00FD27  0D                 	db	13
  1044  00FD28  0A                 	db	10
  1045  00FD29  00                 	db	0
  1046  00FD2A                     STR_15:
  1047  00FD2A  73                 	db	115	;'s'
  1048  00FD2B  2F                 	db	47
  1049  00FD2C  53                 	db	83	;'S'
  1050  00FD2D  3A                 	db	58	;':'
  1051  00FD2E  20                 	db	32
  1052  00FD2F  64                 	db	100	;'d'
  1053  00FD30  65                 	db	101	;'e'
  1054  00FD31  63                 	db	99	;'c'
  1055  00FD32  72                 	db	114	;'r'
  1056  00FD33  65                 	db	101	;'e'
  1057  00FD34  6D                 	db	109	;'m'
  1058  00FD35  65                 	db	101	;'e'
  1059  00FD36  6E                 	db	110	;'n'
  1060  00FD37  74                 	db	116	;'t'
  1061  00FD38  2F                 	db	47
  1062  00FD39  69                 	db	105	;'i'
  1063  00FD3A  6E                 	db	110	;'n'
  1064  00FD3B  63                 	db	99	;'c'
  1065  00FD3C  72                 	db	114	;'r'
  1066  00FD3D  65                 	db	101	;'e'
  1067  00FD3E  6D                 	db	109	;'m'
  1068  00FD3F  65                 	db	101	;'e'
  1069  00FD40  6E                 	db	110	;'n'
  1070  00FD41  74                 	db	116	;'t'
  1071  00FD42  20                 	db	32
  1072  00FD43  73                 	db	115	;'s'
  1073  00FD44  61                 	db	97	;'a'
  1074  00FD45  6D                 	db	109	;'m'
  1075  00FD46  70                 	db	112	;'p'
  1076  00FD47  6C                 	db	108	;'l'
  1077  00FD48  65                 	db	101	;'e'
  1078  00FD49  52                 	db	82	;'R'
  1079  00FD4A  61                 	db	97	;'a'
  1080  00FD4B  74                 	db	116	;'t'
  1081  00FD4C  65                 	db	101	;'e'
  1082  00FD4D  0D                 	db	13
  1083  00FD4E  0A                 	db	10
  1084  00FD4F  00                 	db	0
  1085  00FD50                     STR_27:
  1086  00FD50  4E                 	db	78	;'N'
  1087  00FD51  65                 	db	101	;'e'
  1088  00FD52  77                 	db	119	;'w'
  1089  00FD53  20                 	db	32
  1090  00FD54  6E                 	db	110	;'n'
  1091  00FD55  6F                 	db	111	;'o'
  1092  00FD56  6D                 	db	109	;'m'
  1093  00FD57  69                 	db	105	;'i'
  1094  00FD58  6E                 	db	110	;'n'
  1095  00FD59  61                 	db	97	;'a'
  1096  00FD5A  6C                 	db	108	;'l'
  1097  00FD5B  48                 	db	72	;'H'
  1098  00FD5C  61                 	db	97	;'a'
  1099  00FD5D  6C                 	db	108	;'l'
  1100  00FD5E  6C                 	db	108	;'l'
  1101  00FD5F  50                 	db	80	;'P'
  1102  00FD60  72                 	db	114	;'r'
  1103  00FD61  65                 	db	101	;'e'
  1104  00FD62  73                 	db	115	;'s'
  1105  00FD63  73                 	db	115	;'s'
  1106  00FD64  65                 	db	101	;'e'
  1107  00FD65  64                 	db	100	;'d'
  1108  00FD66  20                 	db	32
  1109  00FD67  76                 	db	118	;'v'
  1110  00FD68  61                 	db	97	;'a'
  1111  00FD69  6C                 	db	108	;'l'
  1112  00FD6A  75                 	db	117	;'u'
  1113  00FD6B  65                 	db	101	;'e'
  1114  00FD6C  20                 	db	32
  1115  00FD6D  3D                 	db	61	;'='
  1116  00FD6E  20                 	db	32
  1117  00FD6F  25                 	db	37
  1118  00FD70  64                 	db	100	;'d'
  1119  00FD71  0D                 	db	13
  1120  00FD72  0A                 	db	10
  1121  00FD73  00                 	db	0
  1122  00FD74                     STR_45:
  1123  00FD74  20                 	db	32
  1124  00FD75  20                 	db	32
  1125  00FD76  20                 	db	32
  1126  00FD77  20                 	db	32
  1127  00FD78  4D                 	db	77	;'M'
  1128  00FD79  49                 	db	73	;'I'
  1129  00FD7A  44                 	db	68	;'D'
  1130  00FD7B  49                 	db	73	;'I'
  1131  00FD7C  20                 	db	32
  1132  00FD7D  4F                 	db	79	;'O'
  1133  00FD7E  75                 	db	117	;'u'
  1134  00FD7F  74                 	db	116	;'t'
  1135  00FD80  20                 	db	32
  1136  00FD81  2D                 	db	45
  1137  00FD82  3E                 	db	62	;'>'
  1138  00FD83  20                 	db	32
  1139  00FD84  28                 	db	40
  1140  00FD85  4E                 	db	78	;'N'
  1141  00FD86  6F                 	db	111	;'o'
  1142  00FD87  74                 	db	116	;'t'
  1143  00FD88  20                 	db	32
  1144  00FD89  43                 	db	67	;'C'
  1145  00FD8A  6F                 	db	111	;'o'
  1146  00FD8B  6E                 	db	110	;'n'
  1147  00FD8C  6E                 	db	110	;'n'
  1148  00FD8D  65                 	db	101	;'e'
  1149  00FD8E  63                 	db	99	;'c'
  1150  00FD8F  74                 	db	116	;'t'
  1151  00FD90  65                 	db	101	;'e'
  1152  00FD91  64                 	db	100	;'d'
  1153  00FD92  29                 	db	41
  1154  00FD93  0D                 	db	13
  1155  00FD94  0A                 	db	10
  1156  00FD95  0A                 	db	10
  1157  00FD96  00                 	db	0
  1158  00FD97                     STR_14:
  1159  00FD97  64                 	db	100	;'d'
  1160  00FD98  2F                 	db	47
  1161  00FD99  44                 	db	68	;'D'
  1162  00FD9A  3A                 	db	58	;':'
  1163  00FD9B  20                 	db	32
  1164  00FD9C  64                 	db	100	;'d'
  1165  00FD9D  65                 	db	101	;'e'
  1166  00FD9E  63                 	db	99	;'c'
  1167  00FD9F  72                 	db	114	;'r'
  1168  00FDA0  65                 	db	101	;'e'
  1169  00FDA1  6D                 	db	109	;'m'
  1170  00FDA2  65                 	db	101	;'e'
  1171  00FDA3  6E                 	db	110	;'n'
  1172  00FDA4  74                 	db	116	;'t'
  1173  00FDA5  2F                 	db	47
  1174  00FDA6  69                 	db	105	;'i'
  1175  00FDA7  6E                 	db	110	;'n'
  1176  00FDA8  63                 	db	99	;'c'
  1177  00FDA9  72                 	db	114	;'r'
  1178  00FDAA  65                 	db	101	;'e'
  1179  00FDAB  6D                 	db	109	;'m'
  1180  00FDAC  65                 	db	101	;'e'
  1181  00FDAD  6E                 	db	110	;'n'
  1182  00FDAE  74                 	db	116	;'t'
  1183  00FDAF  20                 	db	32
  1184  00FDB0  64                 	db	100	;'d'
  1185  00FDB1  65                 	db	101	;'e'
  1186  00FDB2  6C                 	db	108	;'l'
  1187  00FDB3  74                 	db	116	;'t'
  1188  00FDB4  61                 	db	97	;'a'
  1189  00FDB5  0D                 	db	13
  1190  00FDB6  0A                 	db	10
  1191  00FDB7  00                 	db	0
  1192  00FDB8                     STR_46:
  1193  00FDB8  57                 	db	87	;'W'
  1194  00FDB9  68                 	db	104	;'h'
  1195  00FDBA  65                 	db	101	;'e'
  1196  00FDBB  6E                 	db	110	;'n'
  1197  00FDBC  20                 	db	32
  1198  00FDBD  79                 	db	121	;'y'
  1199  00FDBE  6F                 	db	111	;'o'
  1200  00FDBF  75                 	db	117	;'u'
  1201  00FDC0  20                 	db	32
  1202  00FDC1  68                 	db	104	;'h'
  1203  00FDC2  61                 	db	97	;'a'
  1204  00FDC3  76                 	db	118	;'v'
  1205  00FDC4  65                 	db	101	;'e'
  1206  00FDC5  20                 	db	32
  1207  00FDC6  63                 	db	99	;'c'
  1208  00FDC7  6F                 	db	111	;'o'
  1209  00FDC8  6D                 	db	109	;'m'
  1210  00FDC9  70                 	db	112	;'p'
  1211  00FDCA  6C                 	db	108	;'l'
  1212  00FDCB  65                 	db	101	;'e'
  1213  00FDCC  74                 	db	116	;'t'
  1214  00FDCD  65                 	db	101	;'e'
  1215  00FDCE  20                 	db	32
  1216  00FDCF  74                 	db	116	;'t'
  1217  00FDD0  68                 	db	104	;'h'
  1218  00FDD1  69                 	db	105	;'i'
  1219  00FDD2  73                 	db	115	;'s'
  1220  00FDD3  3A                 	db	58	;':'
  1221  00FDD4  0D                 	db	13
  1222  00FDD5  0A                 	db	10
  1223  00FDD6  00                 	db	0
  1224  00FDD7                     STR_35:
  1225  00FDD7  4C                 	db	76	;'L'
  1226  00FDD8  61                 	db	97	;'a'
  1227  00FDD9  75                 	db	117	;'u'
  1228  00FDDA  6E                 	db	110	;'n'
  1229  00FDDB  63                 	db	99	;'c'
  1230  00FDDC  68                 	db	104	;'h'
  1231  00FDDD  20                 	db	32
  1232  00FDDE  68                 	db	104	;'h'
  1233  00FDDF  61                 	db	97	;'a'
  1234  00FDE0  69                 	db	105	;'i'
  1235  00FDE1  72                 	db	114	;'r'
  1236  00FDE2  6C                 	db	108	;'l'
  1237  00FDE3  65                 	db	101	;'e'
  1238  00FDE4  73                 	db	115	;'s'
  1239  00FDE5  73                 	db	115	;'s'
  1240  00FDE6  2D                 	db	45
  1241  00FDE7  6D                 	db	109	;'m'
  1242  00FDE8  69                 	db	105	;'i'
  1243  00FDE9  64                 	db	100	;'d'
  1244  00FDEA  69                 	db	105	;'i'
  1245  00FDEB  73                 	db	115	;'s'
  1246  00FDEC  65                 	db	101	;'e'
  1247  00FDED  72                 	db	114	;'r'
  1248  00FDEE  69                 	db	105	;'i'
  1249  00FDEF  61                 	db	97	;'a'
  1250  00FDF0  6C                 	db	108	;'l'
  1251  00FDF1  0D                 	db	13
  1252  00FDF2  0A                 	db	10
  1253  00FDF3  00                 	db	0
  1254  00FDF4                     STR_19:
  1255  00FDF4  4D                 	db	77	;'M'
  1256  00FDF5  3A                 	db	58	;':'
  1257  00FDF6  20                 	db	32
  1258  00FDF7  65                 	db	101	;'e'
  1259  00FDF8  6E                 	db	110	;'n'
  1260  00FDF9  74                 	db	116	;'t'
  1261  00FDFA  65                 	db	101	;'e'
  1262  00FDFB  72                 	db	114	;'r'
  1263  00FDFC  20                 	db	32
  1264  00FDFD  69                 	db	105	;'i'
  1265  00FDFE  6E                 	db	110	;'n'
  1266  00FDFF  74                 	db	116	;'t'
  1267  00FE00  6F                 	db	111	;'o'
  1268  00FE01  20                 	db	32
  1269  00FE02  4D                 	db	77	;'M'
  1270  00FE03  69                 	db	105	;'i'
  1271  00FE04  64                 	db	100	;'d'
  1272  00FE05  69                 	db	105	;'i'
  1273  00FE06  20                 	db	32
  1274  00FE07  6D                 	db	109	;'m'
  1275  00FE08  6F                 	db	111	;'o'
  1276  00FE09  64                 	db	100	;'d'
  1277  00FE0A  65                 	db	101	;'e'
  1278  00FE0B  2E                 	db	46
  1279  00FE0C  0D                 	db	13
  1280  00FE0D  0A                 	db	10
  1281  00FE0E  00                 	db	0
  1282  00FE0F                     STR_42:
  1283  00FE0F  20                 	db	32
  1284  00FE10  20                 	db	32
  1285  00FE11  20                 	db	32
  1286  00FE12  20                 	db	32
  1287  00FE13  46                 	db	70	;'F'
  1288  00FE14  6C                 	db	108	;'l'
  1289  00FE15  6F                 	db	111	;'o'
  1290  00FE16  77                 	db	119	;'w'
  1291  00FE17  20                 	db	32
  1292  00FE18  43                 	db	67	;'C'
  1293  00FE19  6F                 	db	111	;'o'
  1294  00FE1A  6E                 	db	110	;'n'
  1295  00FE1B  74                 	db	116	;'t'
  1296  00FE1C  72                 	db	114	;'r'
  1297  00FE1D  6F                 	db	111	;'o'
  1298  00FE1E  6C                 	db	108	;'l'
  1299  00FE1F  3A                 	db	58	;':'
  1300  00FE20  20                 	db	32
  1301  00FE21  20                 	db	32
  1302  00FE22  20                 	db	32
  1303  00FE23  4E                 	db	78	;'N'
  1304  00FE24  6F                 	db	111	;'o'
  1305  00FE25  6E                 	db	110	;'n'
  1306  00FE26  65                 	db	101	;'e'
  1307  00FE27  0D                 	db	13
  1308  00FE28  0A                 	db	10
  1309  00FE29  00                 	db	0
  1310  00FE2A                     STR_47:
  1311  00FE2A  20                 	db	32
  1312  00FE2B  20                 	db	32
  1313  00FE2C  20                 	db	32
  1314  00FE2D  20                 	db	32
  1315  00FE2E  43                 	db	67	;'C'
  1316  00FE2F  6C                 	db	108	;'l'
  1317  00FE30  6F                 	db	111	;'o'
  1318  00FE31  73                 	db	115	;'s'
  1319  00FE32  65                 	db	101	;'e'
  1320  00FE33  20                 	db	32
  1321  00FE34  6F                 	db	111	;'o'
  1322  00FE35  75                 	db	117	;'u'
  1323  00FE36  74                 	db	116	;'t'
  1324  00FE37  20                 	db	32
  1325  00FE38  6F                 	db	111	;'o'
  1326  00FE39  66                 	db	102	;'f'
  1327  00FE3A  20                 	db	32
  1328  00FE3B  50                 	db	80	;'P'
  1329  00FE3C  75                 	db	117	;'u'
  1330  00FE3D  74                 	db	116	;'t'
  1331  00FE3E  74                 	db	116	;'t'
  1332  00FE3F  79                 	db	121	;'y'
  1333  00FE40  2E                 	db	46
  1334  00FE41  0D                 	db	13
  1335  00FE42  0A                 	db	10
  1336  00FE43  00                 	db	0
  1337  00FE44                     STR_37:
  1338  00FE44  20                 	db	32
  1339  00FE45  20                 	db	32
  1340  00FE46  20                 	db	32
  1341  00FE47  20                 	db	32
  1342  00FE48  46                 	db	70	;'F'
  1343  00FE49  69                 	db	105	;'i'
  1344  00FE4A  6C                 	db	108	;'l'
  1345  00FE4B  65                 	db	101	;'e'
  1346  00FE4C  20                 	db	32
  1347  00FE4D  2D                 	db	45
  1348  00FE4E  3E                 	db	62	;'>'
  1349  00FE4F  20                 	db	32
  1350  00FE50  70                 	db	112	;'p'
  1351  00FE51  72                 	db	114	;'r'
  1352  00FE52  65                 	db	101	;'e'
  1353  00FE53  66                 	db	102	;'f'
  1354  00FE54  65                 	db	101	;'e'
  1355  00FE55  72                 	db	114	;'r'
  1356  00FE56  65                 	db	101	;'e'
  1357  00FE57  6E                 	db	110	;'n'
  1358  00FE58  63                 	db	99	;'c'
  1359  00FE59  65                 	db	101	;'e'
  1360  00FE5A  73                 	db	115	;'s'
  1361  00FE5B  0D                 	db	13
  1362  00FE5C  0A                 	db	10
  1363  00FE5D  00                 	db	0
  1364  00FE5E                     STR_13:
  1365  00FE5E  7A                 	db	122	;'z'
  1366  00FE5F  3A                 	db	58	;':'
  1367  00FE60  20                 	db	32
  1368  00FE61  43                 	db	67	;'C'
  1369  00FE62  6C                 	db	108	;'l'
  1370  00FE63  65                 	db	101	;'e'
  1371  00FE64  61                 	db	97	;'a'
  1372  00FE65  72                 	db	114	;'r'
  1373  00FE66  20                 	db	32
  1374  00FE67  74                 	db	116	;'t'
  1375  00FE68  68                 	db	104	;'h'
  1376  00FE69  65                 	db	101	;'e'
  1377  00FE6A  20                 	db	32
  1378  00FE6B  74                 	db	116	;'t'
  1379  00FE6C  65                 	db	101	;'e'
  1380  00FE6D  72                 	db	114	;'r'
  1381  00FE6E  6D                 	db	109	;'m'
  1382  00FE6F  69                 	db	105	;'i'
  1383  00FE70  6E                 	db	110	;'n'
  1384  00FE71  61                 	db	97	;'a'
  1385  00FE72  6C                 	db	108	;'l'
  1386  00FE73  2E                 	db	46
  1387  00FE74  0D                 	db	13
  1388  00FE75  0A                 	db	10
  1389  00FE76  00                 	db	0
  1390  00FE77                     STR_56:
  1391  00FE77  20                 	db	32
  1392  00FE78  20                 	db	32
  1393  00FE79  20                 	db	32
  1394  00FE7A  20                 	db	32
  1395  00FE7B  20                 	db	32
  1396  00FE7C  20                 	db	32
  1397  00FE7D  20                 	db	32
  1398  00FE7E  20                 	db	32
  1399  00FE7F  63                 	db	99	;'c'
  1400  00FE80  6C                 	db	108	;'l'
  1401  00FE81  6F                 	db	111	;'o'
  1402  00FE82  73                 	db	115	;'s'
  1403  00FE83  65                 	db	101	;'e'
  1404  00FE84  20                 	db	32
  1405  00FE85  68                 	db	104	;'h'
  1406  00FE86  61                 	db	97	;'a'
  1407  00FE87  69                 	db	105	;'i'
  1408  00FE88  72                 	db	114	;'r'
  1409  00FE89  6C                 	db	108	;'l'
  1410  00FE8A  65                 	db	101	;'e'
  1411  00FE8B  73                 	db	115	;'s'
  1412  00FE8C  73                 	db	115	;'s'
  1413  00FE8D  0D                 	db	13
  1414  00FE8E  0A                 	db	10
  1415  00FE8F  00                 	db	0
  1416  00FE90                     STR_41:
  1417  00FE90  20                 	db	32
  1418  00FE91  20                 	db	32
  1419  00FE92  20                 	db	32
  1420  00FE93  20                 	db	32
  1421  00FE94  53                 	db	83	;'S'
  1422  00FE95  74                 	db	116	;'t'
  1423  00FE96  6F                 	db	111	;'o'
  1424  00FE97  70                 	db	112	;'p'
  1425  00FE98  20                 	db	32
  1426  00FE99  42                 	db	66	;'B'
  1427  00FE9A  69                 	db	105	;'i'
  1428  00FE9B  74                 	db	116	;'t'
  1429  00FE9C  28                 	db	40
  1430  00FE9D  73                 	db	115	;'s'
  1431  00FE9E  29                 	db	41
  1432  00FE9F  3A                 	db	58	;':'
  1433  00FEA0  20                 	db	32
  1434  00FEA1  20                 	db	32
  1435  00FEA2  20                 	db	32
  1436  00FEA3  20                 	db	32
  1437  00FEA4  31                 	db	49	;'1'
  1438  00FEA5  0D                 	db	13
  1439  00FEA6  0A                 	db	10
  1440  00FEA7  00                 	db	0
  1441  00FEA8                     STR_38:
  1442  00FEA8  20                 	db	32
  1443  00FEA9  20                 	db	32
  1444  00FEAA  20                 	db	32
  1445  00FEAB  20                 	db	32
  1446  00FEAC  42                 	db	66	;'B'
  1447  00FEAD  61                 	db	97	;'a'
  1448  00FEAE  75                 	db	117	;'u'
  1449  00FEAF  64                 	db	100	;'d'
  1450  00FEB0  20                 	db	32
  1451  00FEB1  52                 	db	82	;'R'
  1452  00FEB2  61                 	db	97	;'a'
  1453  00FEB3  74                 	db	116	;'t'
  1454  00FEB4  65                 	db	101	;'e'
  1455  00FEB5  3A                 	db	58	;':'
  1456  00FEB6  20                 	db	32
  1457  00FEB7  20                 	db	32
  1458  00FEB8  39                 	db	57	;'9'
  1459  00FEB9  36                 	db	54	;'6'
  1460  00FEBA  30                 	db	48	;'0'
  1461  00FEBB  30                 	db	48	;'0'
  1462  00FEBC  0D                 	db	13
  1463  00FEBD  0A                 	db	10
  1464  00FEBE  00                 	db	0
  1465  00FEBF                     STR_40:
  1466  00FEBF  20                 	db	32
  1467  00FEC0  20                 	db	32
  1468  00FEC1  20                 	db	32
  1469  00FEC2  20                 	db	32
  1470  00FEC3  50                 	db	80	;'P'
  1471  00FEC4  61                 	db	97	;'a'
  1472  00FEC5  72                 	db	114	;'r'
  1473  00FEC6  69                 	db	105	;'i'
  1474  00FEC7  74                 	db	116	;'t'
  1475  00FEC8  79                 	db	121	;'y'
  1476  00FEC9  3A                 	db	58	;':'
  1477  00FECA  20                 	db	32
  1478  00FECB  20                 	db	32
  1479  00FECC  20                 	db	32
  1480  00FECD  20                 	db	32
  1481  00FECE  20                 	db	32
  1482  00FECF  4E                 	db	78	;'N'
  1483  00FED0  6F                 	db	111	;'o'
  1484  00FED1  6E                 	db	110	;'n'
  1485  00FED2  65                 	db	101	;'e'
  1486  00FED3  0D                 	db	13
  1487  00FED4  0A                 	db	10
  1488  00FED5  00                 	db	0
  1489  00FED6                     STR_6:
  1490  00FED6  20                 	db	32
  1491  00FED7  20                 	db	32
  1492  00FED8  20                 	db	32
  1493  00FED9  20                 	db	32
  1494  00FEDA  4E                 	db	78	;'N'
  1495  00FEDB  6F                 	db	111	;'o'
  1496  00FEDC  6D                 	db	109	;'m'
  1497  00FEDD  69                 	db	105	;'i'
  1498  00FEDE  6E                 	db	110	;'n'
  1499  00FEDF  61                 	db	97	;'a'
  1500  00FEE0  6C                 	db	108	;'l'
  1501  00FEE1  20                 	db	32
  1502  00FEE2  25                 	db	37
  1503  00FEE3  75                 	db	117	;'u'
  1504  00FEE4  20                 	db	32
  1505  00FEE5  74                 	db	116	;'t'
  1506  00FEE6  6F                 	db	111	;'o'
  1507  00FEE7  20                 	db	32
  1508  00FEE8  25                 	db	37
  1509  00FEE9  75                 	db	117	;'u'
  1510  00FEEA  0D                 	db	13
  1511  00FEEB  0A                 	db	10
  1512  00FEEC  00                 	db	0
  1513  00FEED                     STR_3:
  1514  00FEED  4D                 	db	77	;'M'
  1515  00FEEE  49                 	db	73	;'I'
  1516  00FEEF  44                 	db	68	;'D'
  1517  00FEF0  49                 	db	73	;'I'
  1518  00FEF1  20                 	db	32
  1519  00FEF2  2B                 	db	43
  1520  00FEF3  20                 	db	32
  1521  00FEF4  48                 	db	72	;'H'
  1522  00FEF5  61                 	db	97	;'a'
  1523  00FEF6  6C                 	db	108	;'l'
  1524  00FEF7  6C                 	db	108	;'l'
  1525  00FEF8  20                 	db	32
  1526  00FEF9  65                 	db	101	;'e'
  1527  00FEFA  66                 	db	102	;'f'
  1528  00FEFB  66                 	db	102	;'f'
  1529  00FEFC  65                 	db	101	;'e'
  1530  00FEFD  63                 	db	99	;'c'
  1531  00FEFE  74                 	db	116	;'t'
  1532  00FEFF  20                 	db	32
  1533  00FF00  0D                 	db	13
  1534  00FF01  0A                 	db	10
  1535  00FF02  00                 	db	0
  1536  00FF03                     STR_12:
  1537  00FF03  5A                 	db	90	;'Z'
  1538  00FF04  3A                 	db	58	;':'
  1539  00FF05  20                 	db	32
  1540  00FF06  52                 	db	82	;'R'
  1541  00FF07  65                 	db	101	;'e'
  1542  00FF08  73                 	db	115	;'s'
  1543  00FF09  65                 	db	101	;'e'
  1544  00FF0A  74                 	db	116	;'t'
  1545  00FF0B  20                 	db	32
  1546  00FF0C  70                 	db	112	;'p'
  1547  00FF0D  72                 	db	114	;'r'
  1548  00FF0E  6F                 	db	111	;'o'
  1549  00FF0F  63                 	db	99	;'c'
  1550  00FF10  65                 	db	101	;'e'
  1551  00FF11  73                 	db	115	;'s'
  1552  00FF12  73                 	db	115	;'s'
  1553  00FF13  6F                 	db	111	;'o'
  1554  00FF14  72                 	db	114	;'r'
  1555  00FF15  2E                 	db	46
  1556  00FF16  0D                 	db	13
  1557  00FF17  0A                 	db	10
  1558  00FF18  00                 	db	0
  1559  00FF19                     STR_2:
  1560  00FF19  69                 	db	105	;'i'
  1561  00FF1A  6E                 	db	110	;'n'
  1562  00FF1B  4C                 	db	76	;'L'
  1563  00FF1C  61                 	db	97	;'a'
  1564  00FF1D  62                 	db	98	;'b'
  1565  00FF1E  20                 	db	32
  1566  00FF1F  31                 	db	49	;'1'
  1567  00FF20  31                 	db	49	;'1'
  1568  00FF21  20                 	db	32
  1569  00FF22  74                 	db	116	;'t'
  1570  00FF23  65                 	db	101	;'e'
  1571  00FF24  72                 	db	114	;'r'
  1572  00FF25  6D                 	db	109	;'m'
  1573  00FF26  69                 	db	105	;'i'
  1574  00FF27  6E                 	db	110	;'n'
  1575  00FF28  61                 	db	97	;'a'
  1576  00FF29  6C                 	db	108	;'l'
  1577  00FF2A  20                 	db	32
  1578  00FF2B  0D                 	db	13
  1579  00FF2C  0A                 	db	10
  1580  00FF2D  00                 	db	0
  1581  00FF2E                     STR_39:
  1582  00FF2E  20                 	db	32
  1583  00FF2F  20                 	db	32
  1584  00FF30  20                 	db	32
  1585  00FF31  20                 	db	32
  1586  00FF32  44                 	db	68	;'D'
  1587  00FF33  61                 	db	97	;'a'
  1588  00FF34  74                 	db	116	;'t'
  1589  00FF35  61                 	db	97	;'a'
  1590  00FF36  20                 	db	32
  1591  00FF37  42                 	db	66	;'B'
  1592  00FF38  69                 	db	105	;'i'
  1593  00FF39  74                 	db	116	;'t'
  1594  00FF3A  73                 	db	115	;'s'
  1595  00FF3B  3A                 	db	58	;':'
  1596  00FF3C  20                 	db	32
  1597  00FF3D  20                 	db	32
  1598  00FF3E  38                 	db	56	;'8'
  1599  00FF3F  0D                 	db	13
  1600  00FF40  0A                 	db	10
  1601  00FF41  00                 	db	0
  1602  00FF42                     STR_34:
  1603  00FF42  6B                 	db	107	;'k'
  1604  00FF43  65                 	db	101	;'e'
  1605  00FF44  79                 	db	121	;'y'
  1606  00FF45  20                 	db	32
  1607  00FF46  76                 	db	118	;'v'
  1608  00FF47  65                 	db	101	;'e'
  1609  00FF48  6C                 	db	108	;'l'
  1610  00FF49  6F                 	db	111	;'o'
  1611  00FF4A  63                 	db	99	;'c'
  1612  00FF4B  69                 	db	105	;'i'
  1613  00FF4C  74                 	db	116	;'t'
  1614  00FF4D  79                 	db	121	;'y'
  1615  00FF4E  20                 	db	32
  1616  00FF4F  3D                 	db	61	;'='
  1617  00FF50  20                 	db	32
  1618  00FF51  25                 	db	37
  1619  00FF52  64                 	db	100	;'d'
  1620  00FF53  0D                 	db	13
  1621  00FF54  0A                 	db	10
  1622  00FF55  00                 	db	0
  1623  00FF56                     STR_1:
  1624  00FF56  44                 	db	68	;'D'
  1625  00FF57  65                 	db	101	;'e'
  1626  00FF58  76                 	db	118	;'v'
  1627  00FF59  65                 	db	101	;'e'
  1628  00FF5A  6C                 	db	108	;'l'
  1629  00FF5B  6F                 	db	111	;'o'
  1630  00FF5C  70                 	db	112	;'p'
  1631  00FF5D  6D                 	db	109	;'m'
  1632  00FF5E  65                 	db	101	;'e'
  1633  00FF5F  6E                 	db	110	;'n'
  1634  00FF60  74                 	db	116	;'t'
  1635  00FF61  20                 	db	32
  1636  00FF62  42                 	db	66	;'B'
  1637  00FF63  6F                 	db	111	;'o'
  1638  00FF64  61                 	db	97	;'a'
  1639  00FF65  72                 	db	114	;'r'
  1640  00FF66  64                 	db	100	;'d'
  1641  00FF67  0D                 	db	13
  1642  00FF68  0A                 	db	10
  1643  00FF69  00                 	db	0
  1644  00FF6A                     STR_31:
  1645  00FF6A  54                 	db	84	;'T'
  1646  00FF6B  61                 	db	97	;'a'
  1647  00FF6C  70                 	db	112	;'p'
  1648  00FF6D  20                 	db	32
  1649  00FF6E  61                 	db	97	;'a'
  1650  00FF6F  20                 	db	32
  1651  00FF70  70                 	db	112	;'p'
  1652  00FF71  69                 	db	105	;'i'
  1653  00FF72  61                 	db	97	;'a'
  1654  00FF73  6E                 	db	110	;'n'
  1655  00FF74  6F                 	db	111	;'o'
  1656  00FF75  20                 	db	32
  1657  00FF76  6B                 	db	107	;'k'
  1658  00FF77  65                 	db	101	;'e'
  1659  00FF78  79                 	db	121	;'y'
  1660  00FF79  2E                 	db	46
  1661  00FF7A  0D                 	db	13
  1662  00FF7B  0A                 	db	10
  1663  00FF7C  00                 	db	0
  1664  00FF7D                     STR_30:
  1665  00FF7D  48                 	db	72	;'H'
  1666  00FF7E  61                 	db	97	;'a'
  1667  00FF7F  6C                 	db	108	;'l'
  1668  00FF80  6C                 	db	108	;'l'
  1669  00FF81  20                 	db	32
  1670  00FF82  73                 	db	115	;'s'
  1671  00FF83  65                 	db	101	;'e'
  1672  00FF84  6E                 	db	110	;'n'
  1673  00FF85  73                 	db	115	;'s'
  1674  00FF86  6F                 	db	111	;'o'
  1675  00FF87  72                 	db	114	;'r'
  1676  00FF88  20                 	db	32
  1677  00FF89  3D                 	db	61	;'='
  1678  00FF8A  20                 	db	32
  1679  00FF8B  25                 	db	37
  1680  00FF8C  64                 	db	100	;'d'
  1681  00FF8D  0D                 	db	13
  1682  00FF8E  0A                 	db	10
  1683  00FF8F  00                 	db	0
  1684  00FF90                     STR_58:
  1685  00FF90  55                 	db	85	;'U'
  1686  00FF91  6E                 	db	110	;'n'
  1687  00FF92  6B                 	db	107	;'k'
  1688  00FF93  6E                 	db	110	;'n'
  1689  00FF94  6F                 	db	111	;'o'
  1690  00FF95  77                 	db	119	;'w'
  1691  00FF96  6E                 	db	110	;'n'
  1692  00FF97  20                 	db	32
  1693  00FF98  6B                 	db	107	;'k'
  1694  00FF99  65                 	db	101	;'e'
  1695  00FF9A  79                 	db	121	;'y'
  1696  00FF9B  20                 	db	32
  1697  00FF9C  25                 	db	37
  1698  00FF9D  63                 	db	99	;'c'
  1699  00FF9E  0D                 	db	13
  1700  00FF9F  0A                 	db	10
  1701  00FFA0  00                 	db	0
  1702  00FFA1                     STR_7:
  1703  00FFA1  20                 	db	32
  1704  00FFA2  20                 	db	32
  1705  00FFA3  20                 	db	32
  1706  00FFA4  20                 	db	32
  1707  00FFA5  64                 	db	100	;'d'
  1708  00FFA6  65                 	db	101	;'e'
  1709  00FFA7  6C                 	db	108	;'l'
  1710  00FFA8  74                 	db	116	;'t'
  1711  00FFA9  61                 	db	97	;'a'
  1712  00FFAA  20                 	db	32
  1713  00FFAB  3D                 	db	61	;'='
  1714  00FFAC  20                 	db	32
  1715  00FFAD  25                 	db	37
  1716  00FFAE  64                 	db	100	;'d'
  1717  00FFAF  0D                 	db	13
  1718  00FFB0  0A                 	db	10
  1719  00FFB1  00                 	db	0
  1720  00FFB2                     STR_28:
  1721  00FFB2  6E                 	db	110	;'n'
  1722  00FFB3  65                 	db	101	;'e'
  1723  00FFB4  77                 	db	119	;'w'
  1724  00FFB5  20                 	db	32
  1725  00FFB6  64                 	db	100	;'d'
  1726  00FFB7  65                 	db	101	;'e'
  1727  00FFB8  6C                 	db	108	;'l'
  1728  00FFB9  74                 	db	116	;'t'
  1729  00FFBA  61                 	db	97	;'a'
  1730  00FFBB  20                 	db	32
  1731  00FFBC  3D                 	db	61	;'='
  1732  00FFBD  20                 	db	32
  1733  00FFBE  25                 	db	37
  1734  00FFBF  64                 	db	100	;'d'
  1735  00FFC0  0D                 	db	13
  1736  00FFC1  0A                 	db	10
  1737  00FFC2  00                 	db	0
  1738  00FFC3                     STR_43:
  1739  00FFC3  20                 	db	32
  1740  00FFC4  20                 	db	32
  1741  00FFC5  20                 	db	32
  1742  00FFC6  20                 	db	32
  1743  00FFC7  43                 	db	67	;'C'
  1744  00FFC8  6C                 	db	108	;'l'
  1745  00FFC9  69                 	db	105	;'i'
  1746  00FFCA  63                 	db	99	;'c'
  1747  00FFCB  6B                 	db	107	;'k'
  1748  00FFCC  20                 	db	32
  1749  00FFCD  4F                 	db	79	;'O'
  1750  00FFCE  4B                 	db	75	;'K'
  1751  00FFCF  0D                 	db	13
  1752  00FFD0  0A                 	db	10
  1753  00FFD1  00                 	db	0
  1754  00FFD2                     STR_10:
  1755  00FFD2  3F                 	db	63	;'?'
  1756  00FFD3  3A                 	db	58	;':'
  1757  00FFD4  20                 	db	32
  1758  00FFD5  68                 	db	104	;'h'
  1759  00FFD6  65                 	db	101	;'e'
  1760  00FFD7  6C                 	db	108	;'l'
  1761  00FFD8  70                 	db	112	;'p'
  1762  00FFD9  20                 	db	32
  1763  00FFDA  6D                 	db	109	;'m'
  1764  00FFDB  65                 	db	101	;'e'
  1765  00FFDC  6E                 	db	110	;'n'
  1766  00FFDD  75                 	db	117	;'u'
  1767  00FFDE  0D                 	db	13
  1768  00FFDF  0A                 	db	10
  1769  00FFE0  00                 	db	0
  1770  00FFE1                     STR_21:
  1771  00FFE1  6F                 	db	111	;'o'
  1772  00FFE2  3A                 	db	58	;':'
  1773  00FFE3  20                 	db	32
  1774  00FFE4  20                 	db	32
  1775  00FFE5  20                 	db	32
  1776  00FFE6  20                 	db	32
  1777  00FFE7  20                 	db	32
  1778  00FFE8  20                 	db	32
  1779  00FFE9  6F                 	db	111	;'o'
  1780  00FFEA  6B                 	db	107	;'k'
  1781  00FFEB  0D                 	db	13
  1782  00FFEC  0A                 	db	10
  1783  00FFED  00                 	db	0
  1784  00FFEE                     STR_11:
  1785  00FFEE  6F                 	db	111	;'o'
  1786  00FFEF  3A                 	db	58	;':'
  1787  00FFF0  20                 	db	32
  1788  00FFF1  6B                 	db	107	;'k'
  1789  00FFF2  0D                 	db	13
  1790  00FFF3  0A                 	db	10
  1791  00FFF4  00                 	db	0
  1792  00FFF5                     STR_4:
  1793  00FFF5  0D                 	db	13
  1794  00FFF6  0A                 	db	10
  1795  00FFF7  3E                 	db	62	;'>'
  1796  00FFF8  20                 	db	32
  1797  00FFF9  00                 	db	0
  1798  00FFFA                     STR_32:
  1799  00FFFA  25                 	db	37
  1800  00FFFB  34                 	db	52	;'4'
  1801  00FFFC  64                 	db	100	;'d'
  1802  00FFFD  20                 	db	32
  1803  00FFFE  00                 	db	0
  1804  0000                     
  1805                           ; #config settings
  1806  00FFFF  00                 	db	0	; dummy byte at the end
  1807  0000                     
  1808                           	psect	cinit
  1809  00DDC6                     __pcinit:
  1810                           	opt callstack 0
  1811  00DDC6                     start_initialization:
  1812                           	opt callstack 0
  1813  00DDC6                     __initialization:
  1814                           	opt callstack 0
  1815                           
  1816                           ; Clear objects allocated to BANK0 (50 bytes)
  1817  00DDC6  EE00  F0C0         	lfsr	0,__pbssBANK0
  1818  00DDCA  0E32               	movlw	50
  1819  00DDCC                     clear_0:
  1820  00DDCC  6AEE               	clrf	postinc0,c
  1821  00DDCE  06E8               	decf	wreg,f,c
  1822  00DDD0  E1FD               	bnz	clear_0
  1823                           
  1824                           ; Clear objects allocated to COMRAM (1 bytes)
  1825  00DDD2  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1826  00DDD4                     end_of_initialization:
  1827                           	opt callstack 0
  1828  00DDD4                     __end_of__initialization:
  1829                           	opt callstack 0
  1830  00DDD4  0100               	movlb	0
  1831  00DDD6  EF03  F079         	goto	_main	;jump to C main() function
  1832                           
  1833                           	psect	bssCOMRAM
  1834  00005F                     __pbssCOMRAM:
  1835                           	opt callstack 0
  1836  00005F                     _eusart1RxLastError:
  1837                           	opt callstack 0
  1838  00005F                     	ds	1
  1839                           
  1840                           	psect	bssBANK0
  1841  0000C0                     __pbssBANK0:
  1842                           	opt callstack 0
  1843  0000C0                     _nout:
  1844                           	opt callstack 0
  1845  0000C0                     	ds	2
  1846  0000C2                     _width:
  1847                           	opt callstack 0
  1848  0000C2                     	ds	2
  1849  0000C4                     _prec:
  1850                           	opt callstack 0
  1851  0000C4                     	ds	2
  1852  0000C6                     _flags:
  1853                           	opt callstack 0
  1854  0000C6                     	ds	2
  1855  0000C8                     _EUSART1_ErrorHandler:
  1856                           	opt callstack 0
  1857  0000C8                     	ds	2
  1858  0000CA                     _EUSART1_OverrunErrorHandler:
  1859                           	opt callstack 0
  1860  0000CA                     	ds	2
  1861  0000CC                     _EUSART1_FramingErrorHandler:
  1862                           	opt callstack 0
  1863  0000CC                     	ds	2
  1864  0000CE                     _ADC_InterruptHandler:
  1865                           	opt callstack 0
  1866  0000CE                     	ds	2
  1867  0000D0                     _timer0ReloadVal:
  1868                           	opt callstack 0
  1869  0000D0                     	ds	2
  1870  0000D2                     _dbuf:
  1871                           	opt callstack 0
  1872  0000D2                     	ds	32
  1873                           
  1874                           	psect	cstackBANK0
  1875  000060                     __pcstackBANK0:
  1876                           	opt callstack 0
  1877  000060                     ?_vfprintf:
  1878                           	opt callstack 0
  1879  000060                     vfprintf@fp:
  1880                           	opt callstack 0
  1881                           
  1882                           ; 2 bytes @ 0x0
  1883  000060                     	ds	2
  1884  000062                     vfprintf@fmt:
  1885                           	opt callstack 0
  1886                           
  1887                           ; 2 bytes @ 0x2
  1888  000062                     	ds	2
  1889  000064                     vfprintf@ap:
  1890                           	opt callstack 0
  1891                           
  1892                           ; 2 bytes @ 0x4
  1893  000064                     	ds	2
  1894  000066                     vfprintf@cfmt:
  1895                           	opt callstack 0
  1896                           
  1897                           ; 2 bytes @ 0x6
  1898  000066                     	ds	2
  1899  000068                     ?_printf:
  1900                           	opt callstack 0
  1901  000068                     printf@fmt:
  1902                           	opt callstack 0
  1903                           
  1904                           ; 2 bytes @ 0x8
  1905  000068                     	ds	8
  1906  000070                     printf@ap:
  1907                           	opt callstack 0
  1908                           
  1909                           ; 2 bytes @ 0x10
  1910  000070                     	ds	2
  1911  000072                     ??_main:
  1912                           
  1913                           ; 1 bytes @ 0x12
  1914  000072                     	ds	5
  1915  000077                     main@sample:
  1916                           	opt callstack 0
  1917                           
  1918                           ; 64 bytes @ 0x17
  1919  000077                     	ds	64
  1920  0000B7                     main@instrument:
  1921                           	opt callstack 0
  1922                           
  1923                           ; 1 bytes @ 0x57
  1924  0000B7                     	ds	1
  1925  0000B8                     main@nominalHallPressed:
  1926                           	opt callstack 0
  1927                           
  1928                           ; 1 bytes @ 0x58
  1929  0000B8                     	ds	1
  1930  0000B9                     main@nominalHallUnPressed:
  1931                           	opt callstack 0
  1932                           
  1933                           ; 1 bytes @ 0x59
  1934  0000B9                     	ds	1
  1935  0000BA                     main@cmd:
  1936                           	opt callstack 0
  1937                           
  1938                           ; 1 bytes @ 0x5A
  1939  0000BA                     	ds	1
  1940  0000BB                     main@delta:
  1941                           	opt callstack 0
  1942                           
  1943                           ; 1 bytes @ 0x5B
  1944  0000BB                     	ds	1
  1945  0000BC                     main@pitch:
  1946                           	opt callstack 0
  1947                           
  1948                           ; 1 bytes @ 0x5C
  1949  0000BC                     	ds	1
  1950  0000BD                     main@sampleRate:
  1951                           	opt callstack 0
  1952                           
  1953                           ; 2 bytes @ 0x5D
  1954  0000BD                     	ds	2
  1955  0000BF                     main@i:
  1956                           	opt callstack 0
  1957                           
  1958                           ; 1 bytes @ 0x5F
  1959  0000BF                     	ds	1
  1960                           
  1961                           	psect	cstackCOMRAM
  1962  000001                     __pcstackCOMRAM:
  1963                           	opt callstack 0
  1964  000001                     ??_ADC_SelectChannel:
  1965  000001                     ??_TMR0_Initialize:
  1966  000001                     ?_ADC_GetConversionResult:
  1967                           	opt callstack 0
  1968  000001                     ?_strlen:
  1969                           	opt callstack 0
  1970  000001                     ?_isdigit:
  1971                           	opt callstack 0
  1972  000001                     ?_isspace:
  1973                           	opt callstack 0
  1974  000001                     ?_TMR0_ReadTimer:
  1975                           	opt callstack 0
  1976  000001                     ?___wmul:
  1977                           	opt callstack 0
  1978  000001                     ?___aodiv:
  1979                           	opt callstack 0
  1980  000001                     ?___aomod:
  1981                           	opt callstack 0
  1982  000001                     ?___lodiv:
  1983                           	opt callstack 0
  1984  000001                     ?___lomod:
  1985                           	opt callstack 0
  1986  000001                     putByteSCI@writeByte:
  1987                           	opt callstack 0
  1988  000001                     EUSART1_Write@txData:
  1989                           	opt callstack 0
  1990  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1991                           	opt callstack 0
  1992  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1993                           	opt callstack 0
  1994  000001                     EUSART1_SetErrorHandler@interruptHandler:
  1995                           	opt callstack 0
  1996  000001                     ___wmul@multiplier:
  1997                           	opt callstack 0
  1998  000001                     isdigit@c:
  1999                           	opt callstack 0
  2000  000001                     isspace@c:
  2001                           	opt callstack 0
  2002  000001                     strlen@s:
  2003                           	opt callstack 0
  2004  000001                     ___aodiv@dividend:
  2005                           	opt callstack 0
  2006  000001                     ___aomod@dividend:
  2007                           	opt callstack 0
  2008  000001                     ___lodiv@dividend:
  2009                           	opt callstack 0
  2010  000001                     ___lomod@dividend:
  2011                           	opt callstack 0
  2012                           
  2013                           ; 8 bytes @ 0x0
  2014  000001                     	ds	1
  2015  000002                     noteOn@pitch:
  2016                           	opt callstack 0
  2017  000002                     ADC_SelectChannel@channel:
  2018                           	opt callstack 0
  2019  000002                     putch@txData:
  2020                           	opt callstack 0
  2021                           
  2022                           ; 1 bytes @ 0x1
  2023  000002                     	ds	1
  2024  000003                     ??_ADC_GetConversionResult:
  2025  000003                     ??_isdigit:
  2026  000003                     ??_isspace:
  2027  000003                     ??_TMR0_ReadTimer:
  2028  000003                     noteOn@velocity:
  2029                           	opt callstack 0
  2030  000003                     ___wmul@multiplicand:
  2031                           	opt callstack 0
  2032  000003                     fputc@c:
  2033                           	opt callstack 0
  2034  000003                     strlen@a:
  2035                           	opt callstack 0
  2036                           
  2037                           ; 2 bytes @ 0x2
  2038  000003                     	ds	1
  2039  000004                     noteOn@cmd:
  2040                           	opt callstack 0
  2041                           
  2042                           ; 1 bytes @ 0x3
  2043  000004                     	ds	1
  2044  000005                     TMR0_ReadTimer@readVal:
  2045                           	opt callstack 0
  2046  000005                     ___wmul@product:
  2047                           	opt callstack 0
  2048  000005                     fputc@fp:
  2049                           	opt callstack 0
  2050                           
  2051                           ; 2 bytes @ 0x4
  2052  000005                     	ds	2
  2053  000007                     ??_fputc:
  2054  000007                     TMR0_ReadTimer@readValLow:
  2055                           	opt callstack 0
  2056  000007                     _isspace$1534:
  2057                           	opt callstack 0
  2058                           
  2059                           ; 1 bytes @ 0x6
  2060  000007                     	ds	1
  2061  000008                     ?_atoi:
  2062                           	opt callstack 0
  2063  000008                     TMR0_ReadTimer@readValHigh:
  2064                           	opt callstack 0
  2065  000008                     atoi@s:
  2066                           	opt callstack 0
  2067                           
  2068                           ; 2 bytes @ 0x7
  2069  000008                     	ds	1
  2070  000009                     TMR0_WriteTimer@timerVal:
  2071                           	opt callstack 0
  2072  000009                     ___aodiv@divisor:
  2073                           	opt callstack 0
  2074  000009                     ___aomod@divisor:
  2075                           	opt callstack 0
  2076  000009                     ___lodiv@divisor:
  2077                           	opt callstack 0
  2078  000009                     ___lomod@divisor:
  2079                           	opt callstack 0
  2080                           
  2081                           ; 8 bytes @ 0x8
  2082  000009                     	ds	1
  2083  00000A                     ??_atoi:
  2084                           
  2085                           ; 1 bytes @ 0x9
  2086  00000A                     	ds	1
  2087  00000B                     
  2088                           ; 1 bytes @ 0xA
  2089  00000B                     	ds	1
  2090  00000C                     fputs@s:
  2091                           	opt callstack 0
  2092                           
  2093                           ; 2 bytes @ 0xB
  2094  00000C                     	ds	2
  2095  00000E                     atoi@neg:
  2096                           	opt callstack 0
  2097  00000E                     fputs@fp:
  2098                           	opt callstack 0
  2099                           
  2100                           ; 2 bytes @ 0xD
  2101  00000E                     	ds	2
  2102  000010                     fputs@c:
  2103                           	opt callstack 0
  2104  000010                     _atoi$1516:
  2105                           	opt callstack 0
  2106                           
  2107                           ; 2 bytes @ 0xF
  2108  000010                     	ds	1
  2109  000011                     ___aodiv@counter:
  2110                           	opt callstack 0
  2111  000011                     ___aomod@counter:
  2112                           	opt callstack 0
  2113  000011                     ___lomod@counter:
  2114                           	opt callstack 0
  2115  000011                     fputs@i:
  2116                           	opt callstack 0
  2117  000011                     ___lodiv@quotient:
  2118                           	opt callstack 0
  2119                           
  2120                           ; 8 bytes @ 0x10
  2121  000011                     	ds	1
  2122  000012                     ___aodiv@sign:
  2123                           	opt callstack 0
  2124  000012                     ___aomod@sign:
  2125                           	opt callstack 0
  2126  000012                     _atoi$1518:
  2127                           	opt callstack 0
  2128                           
  2129                           ; 2 bytes @ 0x11
  2130  000012                     	ds	1
  2131  000013                     ?_abs:
  2132                           	opt callstack 0
  2133  000013                     ?_pad:
  2134                           	opt callstack 0
  2135  000013                     pad@fp:
  2136                           	opt callstack 0
  2137  000013                     abs@a:
  2138                           	opt callstack 0
  2139  000013                     ___aodiv@quotient:
  2140                           	opt callstack 0
  2141                           
  2142                           ; 8 bytes @ 0x12
  2143  000013                     	ds	1
  2144  000014                     _atoi$1517:
  2145                           	opt callstack 0
  2146                           
  2147                           ; 1 bytes @ 0x13
  2148  000014                     	ds	1
  2149  000015                     ??_abs:
  2150  000015                     pad@buf:
  2151                           	opt callstack 0
  2152  000015                     atoi@n:
  2153                           	opt callstack 0
  2154                           
  2155                           ; 2 bytes @ 0x14
  2156  000015                     	ds	2
  2157  000017                     pad@p:
  2158                           	opt callstack 0
  2159                           
  2160                           ; 2 bytes @ 0x16
  2161  000017                     	ds	2
  2162  000019                     ??_pad:
  2163  000019                     ___lodiv@counter:
  2164                           	opt callstack 0
  2165                           
  2166                           ; 1 bytes @ 0x18
  2167  000019                     	ds	1
  2168  00001A                     pad@i:
  2169                           	opt callstack 0
  2170                           
  2171                           ; 2 bytes @ 0x19
  2172  00001A                     	ds	2
  2173  00001C                     pad@w:
  2174                           	opt callstack 0
  2175                           
  2176                           ; 2 bytes @ 0x1B
  2177  00001C                     	ds	2
  2178  00001E                     ?_ctoa:
  2179                           	opt callstack 0
  2180  00001E                     ?_dtoa:
  2181                           	opt callstack 0
  2182  00001E                     ?_utoa:
  2183                           	opt callstack 0
  2184  00001E                     ctoa@fp:
  2185                           	opt callstack 0
  2186  00001E                     dtoa@fp:
  2187                           	opt callstack 0
  2188  00001E                     utoa@fp:
  2189                           	opt callstack 0
  2190                           
  2191                           ; 2 bytes @ 0x1D
  2192  00001E                     	ds	2
  2193  000020                     ctoa@c:
  2194                           	opt callstack 0
  2195  000020                     dtoa@d:
  2196                           	opt callstack 0
  2197  000020                     utoa@d:
  2198                           	opt callstack 0
  2199                           
  2200                           ; 8 bytes @ 0x1F
  2201  000020                     	ds	1
  2202  000021                     ctoa@w:
  2203                           	opt callstack 0
  2204                           
  2205                           ; 2 bytes @ 0x20
  2206  000021                     	ds	7
  2207  000028                     ??_dtoa:
  2208  000028                     ??_utoa:
  2209                           
  2210                           ; 1 bytes @ 0x27
  2211  000028                     	ds	8
  2212  000030                     _dtoa$1036:
  2213                           	opt callstack 0
  2214  000030                     utoa@p:
  2215                           	opt callstack 0
  2216                           
  2217                           ; 2 bytes @ 0x2F
  2218  000030                     	ds	2
  2219  000032                     dtoa@p:
  2220                           	opt callstack 0
  2221  000032                     utoa@w:
  2222                           	opt callstack 0
  2223                           
  2224                           ; 2 bytes @ 0x31
  2225  000032                     	ds	2
  2226  000034                     dtoa@w:
  2227                           	opt callstack 0
  2228  000034                     utoa@n:
  2229                           	opt callstack 0
  2230                           
  2231                           ; 8 bytes @ 0x33
  2232  000034                     	ds	2
  2233  000036                     dtoa@s:
  2234                           	opt callstack 0
  2235                           
  2236                           ; 2 bytes @ 0x35
  2237  000036                     	ds	2
  2238  000038                     dtoa@n:
  2239                           	opt callstack 0
  2240                           
  2241                           ; 8 bytes @ 0x37
  2242  000038                     	ds	4
  2243  00003C                     utoa@i:
  2244                           	opt callstack 0
  2245                           
  2246                           ; 2 bytes @ 0x3B
  2247  00003C                     	ds	4
  2248  000040                     dtoa@i:
  2249                           	opt callstack 0
  2250                           
  2251                           ; 2 bytes @ 0x3F
  2252  000040                     	ds	2
  2253  000042                     ?_vfpfcnvrt:
  2254                           	opt callstack 0
  2255  000042                     vfpfcnvrt@fp:
  2256                           	opt callstack 0
  2257                           
  2258                           ; 2 bytes @ 0x41
  2259  000042                     	ds	2
  2260  000044                     vfpfcnvrt@fmt:
  2261                           	opt callstack 0
  2262                           
  2263                           ; 2 bytes @ 0x43
  2264  000044                     	ds	2
  2265  000046                     vfpfcnvrt@ap:
  2266                           	opt callstack 0
  2267                           
  2268                           ; 2 bytes @ 0x45
  2269  000046                     	ds	2
  2270  000048                     ??_vfpfcnvrt:
  2271                           
  2272                           ; 1 bytes @ 0x47
  2273  000048                     	ds	4
  2274  00004C                     vfpfcnvrt@ll:
  2275                           	opt callstack 0
  2276                           
  2277                           ; 8 bytes @ 0x4B
  2278  00004C                     	ds	8
  2279  000054                     vfpfcnvrt@llu:
  2280                           	opt callstack 0
  2281                           
  2282                           ; 8 bytes @ 0x53
  2283  000054                     	ds	8
  2284  00005C                     _vfpfcnvrt$1057:
  2285                           	opt callstack 0
  2286                           
  2287                           ; 2 bytes @ 0x5B
  2288  00005C                     	ds	2
  2289  00005E                     vfpfcnvrt@c:
  2290                           	opt callstack 0
  2291                           
  2292                           ; 1 bytes @ 0x5D
  2293  00005E                     	ds	1
  2294  00005F                     
  2295                           ; 1 bytes @ 0x5E
  2296 ;;
  2297 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  2298 ;;
  2299 ;; *************** function _main *****************
  2300 ;; Defined at:
  2301 ;;		line 37 in file "main.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  sample         64   23[BANK0 ] unsigned char [64]
  2306 ;;  sampleRate      2   93[BANK0 ] unsigned short 
  2307 ;;  i               1   95[BANK0 ] unsigned char 
  2308 ;;  pitch           1   92[BANK0 ] unsigned char 
  2309 ;;  delta           1   91[BANK0 ] unsigned char 
  2310 ;;  cmd             1   90[BANK0 ] unsigned char 
  2311 ;;  nominalHallU    1   89[BANK0 ] unsigned char 
  2312 ;;  nominalHallP    1   88[BANK0 ] unsigned char 
  2313 ;;  instrument      1   87[BANK0 ] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Locals:         0      73       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Totals:         0      78       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;Total ram usage:       78 bytes
  2328 ;; Hardware stack levels required when called:    9
  2329 ;; This function calls:
  2330 ;;		_ADC_GetConversionResult
  2331 ;;		_ADC_IsConversionDone
  2332 ;;		_ADC_SelectChannel
  2333 ;;		_ADC_StartConversion
  2334 ;;		_EUSART1_Read
  2335 ;;		_EUSART1_is_rx_ready
  2336 ;;		_SYSTEM_Initialize
  2337 ;;		_TMR0_HasOverflowOccured
  2338 ;;		_TMR0_ReadTimer
  2339 ;;		_TMR0_WriteTimer
  2340 ;;		_noteOn
  2341 ;;		_printf
  2342 ;;		_putByteSCI
  2343 ;; This function is called by:
  2344 ;;		Startup code after reset
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text0
  2349  00F206                     __ptext0:
  2350                           	opt callstack 0
  2351  00F206                     _main:
  2352                           	opt callstack 22
  2353  00F206                     
  2354                           ;main.c: 41:     uint8_t instrument=0;
  2355  00F206  0E00               	movlw	0
  2356  00F208  0100               	movlb	0	; () banked
  2357  00F20A  6FB7               	movwf	main@instrument& (0+255),b
  2358                           
  2359                           ;main.c: 42:     char cmd;;main.c: 43:     uint8_t sample[64];;main.c: 44:     uint8_t n
      +                          ominalHallUnPressed = 63;
  2360  00F20C  0E3F               	movlw	63
  2361  00F20E  6FB9               	movwf	main@nominalHallUnPressed& (0+255),b
  2362                           
  2363                           ;main.c: 45:     uint8_t nominalHallPressed = 29;
  2364  00F210  0E1D               	movlw	29
  2365  00F212  6FB8               	movwf	main@nominalHallPressed& (0+255),b
  2366                           
  2367                           ;main.c: 46:     uint8_t delta = 5;
  2368  00F214  0E05               	movlw	5
  2369  00F216  6FBB               	movwf	main@delta& (0+255),b
  2370                           
  2371                           ;main.c: 47:     uint16_t sampleRate = 1000;
  2372  00F218  0E03               	movlw	3
  2373  00F21A  6FBE               	movwf	(main@sampleRate+1)& (0+255),b
  2374  00F21C  0EE8               	movlw	232
  2375  00F21E  6FBD               	movwf	main@sampleRate& (0+255),b
  2376  00F220                     
  2377                           ; BSR set to: 0
  2378                           ;main.c: 50:     SYSTEM_Initialize();
  2379  00F220  ECF8  F06E         	call	_SYSTEM_Initialize	;wreg free
  2380  00F224                     
  2381                           ;main.c: 51:     ADC_SelectChannel(HALL_SENSOR);
  2382  00F224  0E01               	movlw	1
  2383  00F226  EC19  F06F         	call	_ADC_SelectChannel
  2384  00F22A                     
  2385                           ;main.c: 53:     printf("Development Board\r\n");
  2386  00F22A  0E56               	movlw	low STR_1
  2387  00F22C  0100               	movlb	0	; () banked
  2388  00F22E  6F68               	movwf	printf@fmt& (0+255),b
  2389  00F230  0EFF               	movlw	high STR_1
  2390  00F232  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2391  00F234  EC75  F06F         	call	_printf	;wreg free
  2392  00F238                     
  2393                           ;main.c: 54:     printf("inLab 11 terminal \r\n");
  2394  00F238  0E19               	movlw	low STR_2
  2395  00F23A  0100               	movlb	0	; () banked
  2396  00F23C  6F68               	movwf	printf@fmt& (0+255),b
  2397  00F23E  0EFF               	movlw	high STR_2
  2398  00F240  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2399  00F242  EC75  F06F         	call	_printf	;wreg free
  2400  00F246                     
  2401                           ;main.c: 55:     printf("MIDI + Hall effect \r\n");
  2402  00F246  0EED               	movlw	low STR_3
  2403  00F248  0100               	movlb	0	; () banked
  2404  00F24A  6F68               	movwf	printf@fmt& (0+255),b
  2405  00F24C  0EFE               	movlw	high STR_3
  2406  00F24E  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2407  00F250  EC75  F06F         	call	_printf	;wreg free
  2408  00F254                     
  2409                           ;main.c: 56:     printf("\r\n> ");
  2410  00F254  0EF5               	movlw	low STR_4
  2411  00F256  0100               	movlb	0	; () banked
  2412  00F258  6F68               	movwf	printf@fmt& (0+255),b
  2413  00F25A  0EFF               	movlw	high STR_4
  2414  00F25C  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2415  00F25E  EC75  F06F         	call	_printf	;wreg free
  2416  00F262                     
  2417                           ;main.c: 58:     ADC_StartConversion();
  2418  00F262  ECA0  F06E         	call	_ADC_StartConversion	;wreg free
  2419  00F266                     l2636:
  2420  00F266  ECC5  F06E         	call	_ADC_IsConversionDone	;wreg free
  2421  00F26A  0900               	iorlw	0
  2422  00F26C  B4D8               	btfsc	status,2,c
  2423  00F26E  EF3B  F079         	goto	u1981
  2424  00F272  EF3D  F079         	goto	u1980
  2425  00F276                     u1981:
  2426  00F276  EF33  F079         	goto	l2636
  2427  00F27A                     u1980:
  2428  00F27A                     
  2429                           ;main.c: 60:     nominalHallUnPressed = (ADC_GetConversionResult() >> 8);
  2430  00F27A  ECBB  F06E         	call	_ADC_GetConversionResult	;wreg free
  2431  00F27E  C002  F001         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2432  00F282  6A02               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2433  00F284  5001               	movf	?_ADC_GetConversionResult^0,w,c
  2434  00F286  0100               	movlb	0	; () banked
  2435  00F288  6FB9               	movwf	main@nominalHallUnPressed& (0+255),b
  2436  00F28A                     l2640:
  2437                           
  2438                           ;main.c: 63:   if ((EUSART1_is_rx_ready())) {
  2439  00F28A  ECCF  F06E         	call	_EUSART1_is_rx_ready	;wreg free
  2440  00F28E  0900               	iorlw	0
  2441  00F290  B4D8               	btfsc	status,2,c
  2442  00F292  EF4D  F079         	goto	u1991
  2443  00F296  EF4F  F079         	goto	u1990
  2444  00F29A                     u1991:
  2445  00F29A  EF45  F079         	goto	l2640
  2446  00F29E                     u1990:
  2447  00F29E                     
  2448                           ;main.c: 64:             cmd = EUSART1_Read();
  2449  00F29E  EC61  F06F         	call	_EUSART1_Read	;wreg free
  2450  00F2A2  0100               	movlb	0	; () banked
  2451  00F2A4  6FBA               	movwf	main@cmd& (0+255),b
  2452                           
  2453                           ;main.c: 65:    switch (cmd) {
  2454  00F2A6  EF95  F07C         	goto	l2826
  2455  00F2AA                     l2644:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;main.c: 71:     printf("-------------------------------------------------\r\n");
  2459  00F2AA  0E42               	movlw	low STR_5
  2460  00F2AC  6F68               	movwf	printf@fmt& (0+255),b
  2461  00F2AE  0EFB               	movlw	high STR_5
  2462  00F2B0  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2463  00F2B2  EC75  F06F         	call	_printf	;wreg free
  2464                           
  2465                           ;main.c: 72:                 printf("    Nominal %u to %u\r\n",nominalHallUnPressed, nom
      +                          inalHallPressed);
  2466  00F2B6  0ED6               	movlw	low STR_6
  2467  00F2B8  0100               	movlb	0	; () banked
  2468  00F2BA  6F68               	movwf	printf@fmt& (0+255),b
  2469  00F2BC  0EFE               	movlw	high STR_6
  2470  00F2BE  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2471  00F2C0  C0B9  F06A         	movff	main@nominalHallUnPressed,?_printf+2
  2472  00F2C4  6B6B               	clrf	(?_printf+3)& (0+255),b
  2473  00F2C6  C0B8  F06C         	movff	main@nominalHallPressed,?_printf+4
  2474  00F2CA  6B6D               	clrf	(?_printf+5)& (0+255),b
  2475  00F2CC  EC75  F06F         	call	_printf	;wreg free
  2476                           
  2477                           ;main.c: 73:                 printf("    delta = %d\r\n",delta);
  2478  00F2D0  0EA1               	movlw	low STR_7
  2479  00F2D2  0100               	movlb	0	; () banked
  2480  00F2D4  6F68               	movwf	printf@fmt& (0+255),b
  2481  00F2D6  0EFF               	movlw	high STR_7
  2482  00F2D8  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2483  00F2DA  C0BB  F06A         	movff	main@delta,?_printf+2
  2484  00F2DE  6B6B               	clrf	(?_printf+3)& (0+255),b
  2485  00F2E0  EC75  F06F         	call	_printf	;wreg free
  2486                           
  2487                           ;main.c: 74:                 printf("    sampleRate = %d TMR0 counts = %duS\r\n",sampleR
      +                          ate,sampleRate);
  2488  00F2E4  0E8C               	movlw	low STR_8
  2489  00F2E6  0100               	movlb	0	; () banked
  2490  00F2E8  6F68               	movwf	printf@fmt& (0+255),b
  2491  00F2EA  0EFC               	movlw	high STR_8
  2492  00F2EC  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2493  00F2EE  C0BD  F06A         	movff	main@sampleRate,?_printf+2
  2494  00F2F2  C0BE  F06B         	movff	main@sampleRate+1,?_printf+3
  2495  00F2F6  C0BD  F06C         	movff	main@sampleRate,?_printf+4
  2496  00F2FA  C0BE  F06D         	movff	main@sampleRate+1,?_printf+5
  2497  00F2FE  EC75  F06F         	call	_printf	;wreg free
  2498                           
  2499                           ;main.c: 75:     printf("-------------------------------------------------\r\n");
  2500  00F302  0E42               	movlw	low STR_5
  2501  00F304  0100               	movlb	0	; () banked
  2502  00F306  6F68               	movwf	printf@fmt& (0+255),b
  2503  00F308  0EFB               	movlw	high STR_5
  2504  00F30A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2505  00F30C  EC75  F06F         	call	_printf	;wreg free
  2506                           
  2507                           ;main.c: 76:                 printf("?: help menu\r\n");
  2508  00F310  0ED2               	movlw	low STR_10
  2509  00F312  0100               	movlb	0	; () banked
  2510  00F314  6F68               	movwf	printf@fmt& (0+255),b
  2511  00F316  0EFF               	movlw	high STR_10
  2512  00F318  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2513  00F31A  EC75  F06F         	call	_printf	;wreg free
  2514                           
  2515                           ;main.c: 77:                 printf("o: k\r\n");
  2516  00F31E  0EEE               	movlw	low STR_11
  2517  00F320  0100               	movlb	0	; () banked
  2518  00F322  6F68               	movwf	printf@fmt& (0+255),b
  2519  00F324  0EFF               	movlw	high STR_11
  2520  00F326  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2521  00F328  EC75  F06F         	call	_printf	;wreg free
  2522                           
  2523                           ;main.c: 78:                 printf("Z: Reset processor.\r\n");
  2524  00F32C  0E03               	movlw	low STR_12
  2525  00F32E  0100               	movlb	0	; () banked
  2526  00F330  6F68               	movwf	printf@fmt& (0+255),b
  2527  00F332  0EFF               	movlw	high STR_12
  2528  00F334  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2529  00F336  EC75  F06F         	call	_printf	;wreg free
  2530                           
  2531                           ;main.c: 79:                 printf("z: Clear the terminal.\r\n");
  2532  00F33A  0E5E               	movlw	low STR_13
  2533  00F33C  0100               	movlb	0	; () banked
  2534  00F33E  6F68               	movwf	printf@fmt& (0+255),b
  2535  00F340  0EFE               	movlw	high STR_13
  2536  00F342  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2537  00F344  EC75  F06F         	call	_printf	;wreg free
  2538                           
  2539                           ;main.c: 80:                 printf("d/D: decrement/increment delta\r\n");
  2540  00F348  0E97               	movlw	low STR_14
  2541  00F34A  0100               	movlb	0	; () banked
  2542  00F34C  6F68               	movwf	printf@fmt& (0+255),b
  2543  00F34E  0EFD               	movlw	high STR_14
  2544  00F350  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2545  00F352  EC75  F06F         	call	_printf	;wreg free
  2546                           
  2547                           ;main.c: 81:                 printf("s/S: decrement/increment sampleRate\r\n");
  2548  00F356  0E2A               	movlw	low STR_15
  2549  00F358  0100               	movlb	0	; () banked
  2550  00F35A  6F68               	movwf	printf@fmt& (0+255),b
  2551  00F35C  0EFD               	movlw	high STR_15
  2552  00F35E  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2553  00F360  EC75  F06F         	call	_printf	;wreg free
  2554                           
  2555                           ;main.c: 82:                 printf("c/C: calibrate unpressed/pressed hall sensor.\r\n")
      +                          ;
  2556  00F364  0E09               	movlw	low STR_16
  2557  00F366  0100               	movlb	0	; () banked
  2558  00F368  6F68               	movwf	printf@fmt& (0+255),b
  2559  00F36A  0EFC               	movlw	high STR_16
  2560  00F36C  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2561  00F36E  EC75  F06F         	call	_printf	;wreg free
  2562                           
  2563                           ;main.c: 83:                 printf("1: report a single Hall effect sensor reading.\r\n"
      +                          );
  2564  00F372  0EA8               	movlw	low STR_17
  2565  00F374  0100               	movlb	0	; () banked
  2566  00F376  6F68               	movwf	printf@fmt& (0+255),b
  2567  00F378  0EFB               	movlw	high STR_17
  2568  00F37A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2569  00F37C  EC75  F06F         	call	_printf	;wreg free
  2570                           
  2571                           ;main.c: 84:                 printf("t: wait for piano keypress and report %d samples, o
      +                          ne every %dus.\r\n",64, sampleRate);
  2572  00F380  0E43               	movlw	low STR_18
  2573  00F382  0100               	movlb	0	; () banked
  2574  00F384  6F68               	movwf	printf@fmt& (0+255),b
  2575  00F386  0EFA               	movlw	high STR_18
  2576  00F388  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2577  00F38A  0E00               	movlw	0
  2578  00F38C  6F6B               	movwf	(?_printf+3)& (0+255),b
  2579  00F38E  0E40               	movlw	64
  2580  00F390  6F6A               	movwf	(?_printf+2)& (0+255),b
  2581  00F392  C0BD  F06C         	movff	main@sampleRate,?_printf+4
  2582  00F396  C0BE  F06D         	movff	main@sampleRate+1,?_printf+5
  2583  00F39A  EC75  F06F         	call	_printf	;wreg free
  2584                           
  2585                           ;main.c: 85:                 printf("M: enter into Midi mode.\r\n");
  2586  00F39E  0EF4               	movlw	low STR_19
  2587  00F3A0  0100               	movlb	0	; () banked
  2588  00F3A2  6F68               	movwf	printf@fmt& (0+255),b
  2589  00F3A4  0EFD               	movlw	high STR_19
  2590  00F3A6  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2591  00F3A8  EC75  F06F         	call	_printf	;wreg free
  2592                           
  2593                           ;main.c: 86:                 printf("-------------------------------------------------\r
      +                          \n");
  2594  00F3AC  0E42               	movlw	low STR_5
  2595  00F3AE  0100               	movlb	0	; () banked
  2596  00F3B0  6F68               	movwf	printf@fmt& (0+255),b
  2597  00F3B2  0EFB               	movlw	high STR_5
  2598  00F3B4  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2599  00F3B6  EC75  F06F         	call	_printf	;wreg free
  2600                           
  2601                           ;main.c: 87:     break;
  2602  00F3BA  EF45  F079         	goto	l2640
  2603  00F3BE                     l2646:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;main.c: 93:                 printf("o:      ok\r\n");
  2607  00F3BE  0EE1               	movlw	low STR_21
  2608  00F3C0  6F68               	movwf	printf@fmt& (0+255),b
  2609  00F3C2  0EFF               	movlw	high STR_21
  2610  00F3C4  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2611  00F3C6  EC75  F06F         	call	_printf	;wreg free
  2612                           
  2613                           ;main.c: 94:                 break;
  2614  00F3CA  EF45  F079         	goto	l2640
  2615  00F3CE                     l2648:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;main.c: 100:                 for (i=0; i<40; i++) printf("\n");
  2619  00F3CE  0E00               	movlw	0
  2620  00F3D0  6FBF               	movwf	main@i& (0+255),b
  2621  00F3D2                     l2654:
  2622                           
  2623                           ; BSR set to: 0
  2624  00F3D2  0E95               	movlw	low (STR_45+33)
  2625  00F3D4  6F68               	movwf	printf@fmt& (0+255),b
  2626  00F3D6  0EFD               	movlw	high (STR_45+33)
  2627  00F3D8  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2628  00F3DA  EC75  F06F         	call	_printf	;wreg free
  2629  00F3DE  0100               	movlb	0	; () banked
  2630  00F3E0  2BBF               	incf	main@i& (0+255),f,b
  2631  00F3E2                     
  2632                           ; BSR set to: 0
  2633  00F3E2  0E27               	movlw	39
  2634  00F3E4  65BF               	cpfsgt	main@i& (0+255),b
  2635  00F3E6  EFF7  F079         	goto	u2001
  2636  00F3EA  EFF9  F079         	goto	u2000
  2637  00F3EE                     u2001:
  2638  00F3EE  EFE9  F079         	goto	l2654
  2639  00F3F2                     u2000:
  2640  00F3F2                     
  2641                           ; BSR set to: 0
  2642  00F3F2  00FF               	reset		;# 
  2643                           
  2644                           ;main.c: 102:                 break;
  2645  00F3F4  EF45  F079         	goto	l2640
  2646  00F3F8                     l2660:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;main.c: 108:                 for (i=0; i<40; i++) printf("\n");
  2650  00F3F8  0E00               	movlw	0
  2651  00F3FA  6FBF               	movwf	main@i& (0+255),b
  2652  00F3FC                     l2666:
  2653                           
  2654                           ; BSR set to: 0
  2655  00F3FC  0E95               	movlw	low (STR_45+33)
  2656  00F3FE  6F68               	movwf	printf@fmt& (0+255),b
  2657  00F400  0EFD               	movlw	high (STR_45+33)
  2658  00F402  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2659  00F404  EC75  F06F         	call	_printf	;wreg free
  2660  00F408  0100               	movlb	0	; () banked
  2661  00F40A  2BBF               	incf	main@i& (0+255),f,b
  2662  00F40C                     
  2663                           ; BSR set to: 0
  2664  00F40C  0E27               	movlw	39
  2665  00F40E  65BF               	cpfsgt	main@i& (0+255),b
  2666  00F410  EF0C  F07A         	goto	u2011
  2667  00F414  EF0E  F07A         	goto	u2010
  2668  00F418                     u2011:
  2669  00F418  EFFE  F079         	goto	l2666
  2670  00F41C                     u2010:
  2671  00F41C  EF45  F079         	goto	l2640
  2672  00F420                     l2672:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;main.c: 115:                 printf("Hands off the piano, press keyboard key to calibra
      +                          te nominalHallUnPressed");
  2676  00F420  0EB1               	movlw	low STR_24
  2677  00F422  6F68               	movwf	printf@fmt& (0+255),b
  2678  00F424  0EF9               	movlw	high STR_24
  2679  00F426  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2680  00F428  EC75  F06F         	call	_printf	;wreg free
  2681  00F42C                     l2674:
  2682  00F42C  ECCF  F06E         	call	_EUSART1_is_rx_ready	;wreg free
  2683  00F430  0900               	iorlw	0
  2684  00F432  B4D8               	btfsc	status,2,c
  2685  00F434  EF1E  F07A         	goto	u2021
  2686  00F438  EF20  F07A         	goto	u2020
  2687  00F43C                     u2021:
  2688  00F43C  EF16  F07A         	goto	l2674
  2689  00F440                     u2020:
  2690  00F440                     
  2691                           ;main.c: 117:                 (void) EUSART1_Read();
  2692  00F440  EC61  F06F         	call	_EUSART1_Read	;wreg free
  2693  00F444                     
  2694                           ;main.c: 118:                 ADC_StartConversion();
  2695  00F444  ECA0  F06E         	call	_ADC_StartConversion	;wreg free
  2696  00F448                     l2680:
  2697  00F448  ECC5  F06E         	call	_ADC_IsConversionDone	;wreg free
  2698  00F44C  0900               	iorlw	0
  2699  00F44E  B4D8               	btfsc	status,2,c
  2700  00F450  EF2C  F07A         	goto	u2031
  2701  00F454  EF2E  F07A         	goto	u2030
  2702  00F458                     u2031:
  2703  00F458  EF24  F07A         	goto	l2680
  2704  00F45C                     u2030:
  2705  00F45C                     
  2706                           ;main.c: 120:                 nominalHallUnPressed = ADC_GetConversionResult()>>8;
  2707  00F45C  ECBB  F06E         	call	_ADC_GetConversionResult	;wreg free
  2708  00F460  C002  F001         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2709  00F464  6A02               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2710  00F466  5001               	movf	?_ADC_GetConversionResult^0,w,c
  2711  00F468  0100               	movlb	0	; () banked
  2712  00F46A  6FB9               	movwf	main@nominalHallUnPressed& (0+255),b
  2713  00F46C                     
  2714                           ; BSR set to: 0
  2715                           ;main.c: 121:                 printf("New nominalHallUnPressed value = %d\r\n",nominalHa
      +                          llUnPressed);
  2716  00F46C  0E04               	movlw	low STR_25
  2717  00F46E  6F68               	movwf	printf@fmt& (0+255),b
  2718  00F470  0EFD               	movlw	high STR_25
  2719  00F472  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2720  00F474  C0B9  F06A         	movff	main@nominalHallUnPressed,?_printf+2
  2721  00F478  6B6B               	clrf	(?_printf+3)& (0+255),b
  2722  00F47A  EC75  F06F         	call	_printf	;wreg free
  2723                           
  2724                           ;main.c: 122:                 break;
  2725  00F47E  EF45  F079         	goto	l2640
  2726  00F482                     l2686:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;main.c: 128:                 printf("Press the piano key, press keyboard key to calibra
      +                          te nominalHallPressed");
  2730  00F482  0EFB               	movlw	low STR_26
  2731  00F484  6F68               	movwf	printf@fmt& (0+255),b
  2732  00F486  0EF9               	movlw	high STR_26
  2733  00F488  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2734  00F48A  EC75  F06F         	call	_printf	;wreg free
  2735  00F48E                     l2688:
  2736  00F48E  ECCF  F06E         	call	_EUSART1_is_rx_ready	;wreg free
  2737  00F492  0900               	iorlw	0
  2738  00F494  B4D8               	btfsc	status,2,c
  2739  00F496  EF4F  F07A         	goto	u2041
  2740  00F49A  EF51  F07A         	goto	u2040
  2741  00F49E                     u2041:
  2742  00F49E  EF47  F07A         	goto	l2688
  2743  00F4A2                     u2040:
  2744  00F4A2                     
  2745                           ;main.c: 130:                 (void) EUSART1_Read();
  2746  00F4A2  EC61  F06F         	call	_EUSART1_Read	;wreg free
  2747  00F4A6                     
  2748                           ;main.c: 131:                 ADC_StartConversion();
  2749  00F4A6  ECA0  F06E         	call	_ADC_StartConversion	;wreg free
  2750  00F4AA                     l2694:
  2751  00F4AA  ECC5  F06E         	call	_ADC_IsConversionDone	;wreg free
  2752  00F4AE  0900               	iorlw	0
  2753  00F4B0  B4D8               	btfsc	status,2,c
  2754  00F4B2  EF5D  F07A         	goto	u2051
  2755  00F4B6  EF5F  F07A         	goto	u2050
  2756  00F4BA                     u2051:
  2757  00F4BA  EF55  F07A         	goto	l2694
  2758  00F4BE                     u2050:
  2759  00F4BE                     
  2760                           ;main.c: 133:                 nominalHallPressed = ADC_GetConversionResult()>>8;
  2761  00F4BE  ECBB  F06E         	call	_ADC_GetConversionResult	;wreg free
  2762  00F4C2  C002  F001         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2763  00F4C6  6A02               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2764  00F4C8  5001               	movf	?_ADC_GetConversionResult^0,w,c
  2765  00F4CA  0100               	movlb	0	; () banked
  2766  00F4CC  6FB8               	movwf	main@nominalHallPressed& (0+255),b
  2767  00F4CE                     
  2768                           ; BSR set to: 0
  2769                           ;main.c: 134:                 printf("New nominalHallPressed value = %d\r\n",nominalHall
      +                          Pressed);
  2770  00F4CE  0E50               	movlw	low STR_27
  2771  00F4D0  6F68               	movwf	printf@fmt& (0+255),b
  2772  00F4D2  0EFD               	movlw	high STR_27
  2773  00F4D4  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2774  00F4D6  C0B8  F06A         	movff	main@nominalHallPressed,?_printf+2
  2775  00F4DA  6B6B               	clrf	(?_printf+3)& (0+255),b
  2776  00F4DC  EC75  F06F         	call	_printf	;wreg free
  2777                           
  2778                           ;main.c: 135:                 break;
  2779  00F4E0  EF45  F079         	goto	l2640
  2780  00F4E4                     l2700:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;main.c: 142:                 if (cmd == 'd') delta -= 1;
  2784  00F4E4  0E64               	movlw	100
  2785  00F4E6  19BA               	xorwf	main@cmd& (0+255),w,b
  2786  00F4E8  A4D8               	btfss	status,2,c
  2787  00F4EA  EF79  F07A         	goto	u2061
  2788  00F4EE  EF7B  F07A         	goto	u2060
  2789  00F4F2                     u2061:
  2790  00F4F2  EF7E  F07A         	goto	l2704
  2791  00F4F6                     u2060:
  2792  00F4F6                     
  2793                           ; BSR set to: 0
  2794  00F4F6  07BB               	decf	main@delta& (0+255),f,b
  2795  00F4F8  EF7F  F07A         	goto	l2706
  2796  00F4FC                     l2704:
  2797                           
  2798                           ; BSR set to: 0
  2799  00F4FC  2BBB               	incf	main@delta& (0+255),f,b
  2800  00F4FE                     l2706:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;main.c: 144:                 printf("new delta = %d\r\n",delta);
  2804  00F4FE  0EB2               	movlw	low STR_28
  2805  00F500  6F68               	movwf	printf@fmt& (0+255),b
  2806  00F502  0EFF               	movlw	high STR_28
  2807  00F504  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2808  00F506  C0BB  F06A         	movff	main@delta,?_printf+2
  2809  00F50A  6B6B               	clrf	(?_printf+3)& (0+255),b
  2810  00F50C  EC75  F06F         	call	_printf	;wreg free
  2811                           
  2812                           ;main.c: 145:                 break;
  2813  00F510  EF45  F079         	goto	l2640
  2814  00F514                     l2708:
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;main.c: 152:                 if (cmd == 's') sampleRate -= 100;
  2818  00F514  0E73               	movlw	115
  2819  00F516  19BA               	xorwf	main@cmd& (0+255),w,b
  2820  00F518  A4D8               	btfss	status,2,c
  2821  00F51A  EF91  F07A         	goto	u2071
  2822  00F51E  EF93  F07A         	goto	u2070
  2823  00F522                     u2071:
  2824  00F522  EF99  F07A         	goto	l2712
  2825  00F526                     u2070:
  2826  00F526                     
  2827                           ; BSR set to: 0
  2828  00F526  0E64               	movlw	100
  2829  00F528  5FBD               	subwf	main@sampleRate& (0+255),f,b
  2830  00F52A  0E00               	movlw	0
  2831  00F52C  5BBE               	subwfb	(main@sampleRate+1)& (0+255),f,b
  2832  00F52E  EF9D  F07A         	goto	l2714
  2833  00F532                     l2712:
  2834                           
  2835                           ; BSR set to: 0
  2836  00F532  0E64               	movlw	100
  2837  00F534  27BD               	addwf	main@sampleRate& (0+255),f,b
  2838  00F536  0E00               	movlw	0
  2839  00F538  23BE               	addwfc	(main@sampleRate+1)& (0+255),f,b
  2840  00F53A                     l2714:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;main.c: 154:                 printf("new sampleRate = %d TMR0 counts = %duS\r\n",sample
      +                          Rate, sampleRate);
  2844  00F53A  0EB5               	movlw	low STR_29
  2845  00F53C  6F68               	movwf	printf@fmt& (0+255),b
  2846  00F53E  0EFC               	movlw	high STR_29
  2847  00F540  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2848  00F542  C0BD  F06A         	movff	main@sampleRate,?_printf+2
  2849  00F546  C0BE  F06B         	movff	main@sampleRate+1,?_printf+3
  2850  00F54A  C0BD  F06C         	movff	main@sampleRate,?_printf+4
  2851  00F54E  C0BE  F06D         	movff	main@sampleRate+1,?_printf+5
  2852  00F552  EC75  F06F         	call	_printf	;wreg free
  2853                           
  2854                           ;main.c: 155:                 break;
  2855  00F556  EF45  F079         	goto	l2640
  2856  00F55A                     l112:
  2857                           
  2858                           ; BSR set to: 0
  2859  00F55A  848B               	bsf	139,2,c	;volatile
  2860  00F55C                     
  2861                           ; BSR set to: 0
  2862                           ;main.c: 163:                 ADC_StartConversion();
  2863  00F55C  ECA0  F06E         	call	_ADC_StartConversion	;wreg free
  2864  00F560  948B               	bcf	139,2,c	;volatile
  2865  00F562                     l2720:
  2866  00F562  ECC5  F06E         	call	_ADC_IsConversionDone	;wreg free
  2867  00F566  0900               	iorlw	0
  2868  00F568  B4D8               	btfsc	status,2,c
  2869  00F56A  EFB9  F07A         	goto	u2081
  2870  00F56E  EFBB  F07A         	goto	u2080
  2871  00F572                     u2081:
  2872  00F572  EFB1  F07A         	goto	l2720
  2873  00F576                     u2080:
  2874  00F576                     
  2875                           ;main.c: 166:                 printf("Hall sensor = %d\r\n",ADC_GetConversionResult()>>8
      +                          );
  2876  00F576  0E7D               	movlw	low STR_30
  2877  00F578  0100               	movlb	0	; () banked
  2878  00F57A  6F68               	movwf	printf@fmt& (0+255),b
  2879  00F57C  0EFF               	movlw	high STR_30
  2880  00F57E  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2881  00F580  ECBB  F06E         	call	_ADC_GetConversionResult	;wreg free
  2882  00F584  5002               	movf	(?_ADC_GetConversionResult+1)^0,w,c
  2883  00F586  0100               	movlb	0	; () banked
  2884  00F588  6F6A               	movwf	(?_printf+2)& (0+255),b
  2885  00F58A  6B6B               	clrf	(?_printf+3)& (0+255),b
  2886  00F58C  EC75  F06F         	call	_printf	;wreg free
  2887                           
  2888                           ;main.c: 167:                 break;
  2889  00F590  EF45  F079         	goto	l2640
  2890  00F594                     l2724:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;main.c: 173:                 printf("Tap a piano key.\r\n");
  2894  00F594  0E6A               	movlw	low STR_31
  2895  00F596  6F68               	movwf	printf@fmt& (0+255),b
  2896  00F598  0EFF               	movlw	high STR_31
  2897  00F59A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2898  00F59C  EC75  F06F         	call	_printf	;wreg free
  2899                           
  2900                           ;main.c: 177:                 while ( (ADC_GetConversionResult()>>8) > nominalHallUnPres
      +                          sed - delta){
  2901  00F5A0  EFEE  F07A         	goto	l2734
  2902  00F5A4                     l2726:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;main.c: 178:                     TMR0_WriteTimer(TMR0_ReadTimer() + 0xFFFF - sampleRate
      +                          );
  2906  00F5A4  EC3F  F06F         	call	_TMR0_ReadTimer	;wreg free
  2907  00F5A8  0100               	movlb	0	; () banked
  2908  00F5AA  51BD               	movf	main@sampleRate& (0+255),w,b
  2909  00F5AC  5E01               	subwf	?_TMR0_ReadTimer^0,f,c
  2910  00F5AE  51BE               	movf	(main@sampleRate+1)& (0+255),w,b
  2911  00F5B0  5A02               	subwfb	(?_TMR0_ReadTimer+1)^0,f,c
  2912  00F5B2  0EFF               	movlw	255
  2913  00F5B4  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  2914  00F5B6  6E09               	movwf	TMR0_WriteTimer@timerVal^0,c
  2915  00F5B8  0EFF               	movlw	255
  2916  00F5BA  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  2917  00F5BC  6E0A               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  2918  00F5BE  ECB1  F06E         	call	_TMR0_WriteTimer	;wreg free
  2919  00F5C2                     
  2920                           ;main.c: 179:                     INTCONbits.TMR0IF = 0;
  2921  00F5C2  94F2               	bcf	242,2,c	;volatile
  2922  00F5C4                     
  2923                           ;main.c: 180:                     ADC_StartConversion();
  2924  00F5C4  ECA0  F06E         	call	_ADC_StartConversion	;wreg free
  2925  00F5C8                     l2732:
  2926  00F5C8  ECD9  F06E         	call	_TMR0_HasOverflowOccured	;wreg free
  2927  00F5CC  0900               	iorlw	0
  2928  00F5CE  B4D8               	btfsc	status,2,c
  2929  00F5D0  EFEC  F07A         	goto	u2091
  2930  00F5D4  EFEE  F07A         	goto	u2090
  2931  00F5D8                     u2091:
  2932  00F5D8  EFE4  F07A         	goto	l2732
  2933  00F5DC                     u2090:
  2934  00F5DC                     l2734:
  2935                           
  2936                           ;main.c: 177:                 while ( (ADC_GetConversionResult()>>8) > nominalHallUnPres
      +                          sed - delta){
  2937  00F5DC  ECBB  F06E         	call	_ADC_GetConversionResult	;wreg free
  2938  00F5E0  C002  F001         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2939  00F5E4  6A02               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2940  00F5E6  0100               	movlb	0	; () banked
  2941  00F5E8  51BB               	movf	main@delta& (0+255),w,b
  2942  00F5EA  C0B9  F072         	movff	main@nominalHallUnPressed,??_main
  2943  00F5EE  6B73               	clrf	(??_main+1)& (0+255),b
  2944  00F5F0  5F72               	subwf	??_main& (0+255),f,b
  2945  00F5F2  0E00               	movlw	0
  2946  00F5F4  5B73               	subwfb	(??_main+1)& (0+255),f,b
  2947  00F5F6  5001               	movf	?_ADC_GetConversionResult^0,w,c
  2948  00F5F8  5D72               	subwf	??_main& (0+255),w,b
  2949  00F5FA  5002               	movf	(?_ADC_GetConversionResult+1)^0,w,c
  2950  00F5FC  5973               	subwfb	(??_main+1)& (0+255),w,b
  2951  00F5FE  A0D8               	btfss	status,0,c
  2952  00F600  EF04  F07B         	goto	u2101
  2953  00F604  EF06  F07B         	goto	u2100
  2954  00F608                     u2101:
  2955  00F608  EFD2  F07A         	goto	l2726
  2956  00F60C                     u2100:
  2957  00F60C                     
  2958                           ; BSR set to: 0
  2959                           ;main.c: 185:                 for (i=0; i<64; i++) {
  2960  00F60C  0E00               	movlw	0
  2961  00F60E  6FBF               	movwf	main@i& (0+255),b
  2962  00F610                     l2742:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;main.c: 186:                     sample[i] = (ADC_GetConversionResult()>>8);
  2966  00F610  0E77               	movlw	low main@sample
  2967  00F612  25BF               	addwf	main@i& (0+255),w,b
  2968  00F614  6ED9               	movwf	fsr2l,c
  2969  00F616  6ADA               	clrf	fsr2h,c
  2970  00F618  0E00               	movlw	high main@sample
  2971  00F61A  22DA               	addwfc	fsr2h,f,c
  2972  00F61C  ECBB  F06E         	call	_ADC_GetConversionResult	;wreg free
  2973  00F620  C002  F001         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2974  00F624  6A02               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2975  00F626  5001               	movf	?_ADC_GetConversionResult^0,w,c
  2976  00F628  6EDF               	movwf	indf2,c
  2977  00F62A                     
  2978                           ;main.c: 187:                     TMR0_WriteTimer(TMR0_ReadTimer() + 0xFFFF - sampleRate
      +                          );
  2979  00F62A  EC3F  F06F         	call	_TMR0_ReadTimer	;wreg free
  2980  00F62E  0100               	movlb	0	; () banked
  2981  00F630  51BD               	movf	main@sampleRate& (0+255),w,b
  2982  00F632  5E01               	subwf	?_TMR0_ReadTimer^0,f,c
  2983  00F634  51BE               	movf	(main@sampleRate+1)& (0+255),w,b
  2984  00F636  5A02               	subwfb	(?_TMR0_ReadTimer+1)^0,f,c
  2985  00F638  0EFF               	movlw	255
  2986  00F63A  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  2987  00F63C  6E09               	movwf	TMR0_WriteTimer@timerVal^0,c
  2988  00F63E  0EFF               	movlw	255
  2989  00F640  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  2990  00F642  6E0A               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  2991  00F644  ECB1  F06E         	call	_TMR0_WriteTimer	;wreg free
  2992  00F648                     
  2993                           ;main.c: 188:                     INTCONbits.TMR0IF = 0;
  2994  00F648  94F2               	bcf	242,2,c	;volatile
  2995  00F64A  848B               	bsf	139,2,c	;volatile
  2996  00F64C                     
  2997                           ;main.c: 190:                     ADC_StartConversion();
  2998  00F64C  ECA0  F06E         	call	_ADC_StartConversion	;wreg free
  2999  00F650  948B               	bcf	139,2,c	;volatile
  3000  00F652                     l2754:
  3001  00F652  ECD9  F06E         	call	_TMR0_HasOverflowOccured	;wreg free
  3002  00F656  0900               	iorlw	0
  3003  00F658  B4D8               	btfsc	status,2,c
  3004  00F65A  EF31  F07B         	goto	u2111
  3005  00F65E  EF33  F07B         	goto	u2110
  3006  00F662                     u2111:
  3007  00F662  EF29  F07B         	goto	l2754
  3008  00F666                     u2110:
  3009  00F666                     
  3010                           ;main.c: 193:                 }
  3011  00F666  0100               	movlb	0	; () banked
  3012  00F668  2BBF               	incf	main@i& (0+255),f,b
  3013  00F66A                     
  3014                           ; BSR set to: 0
  3015  00F66A  0E3F               	movlw	63
  3016  00F66C  65BF               	cpfsgt	main@i& (0+255),b
  3017  00F66E  EF3B  F07B         	goto	u2121
  3018  00F672  EF3D  F07B         	goto	u2120
  3019  00F676                     u2121:
  3020  00F676  EF08  F07B         	goto	l2742
  3021  00F67A                     u2120:
  3022  00F67A                     
  3023                           ; BSR set to: 0
  3024                           ;main.c: 196:                 for (i=0; i<64; i++) {
  3025  00F67A  0E00               	movlw	0
  3026  00F67C  6FBF               	movwf	main@i& (0+255),b
  3027  00F67E                     l2766:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;main.c: 197:                     printf("%4d ",sample[i]);
  3031  00F67E  0EFA               	movlw	low STR_32
  3032  00F680  6F68               	movwf	printf@fmt& (0+255),b
  3033  00F682  0EFF               	movlw	high STR_32
  3034  00F684  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3035  00F686  0E77               	movlw	low main@sample
  3036  00F688  25BF               	addwf	main@i& (0+255),w,b
  3037  00F68A  6ED9               	movwf	fsr2l,c
  3038  00F68C  6ADA               	clrf	fsr2h,c
  3039  00F68E  0E00               	movlw	high main@sample
  3040  00F690  22DA               	addwfc	fsr2h,f,c
  3041  00F692  50DF               	movf	indf2,w,c
  3042  00F694  6F72               	movwf	??_main& (0+255),b
  3043  00F696  5172               	movf	??_main& (0+255),w,b
  3044  00F698  6F6A               	movwf	(?_printf+2)& (0+255),b
  3045  00F69A  6B6B               	clrf	(?_printf+3)& (0+255),b
  3046  00F69C  EC75  F06F         	call	_printf	;wreg free
  3047  00F6A0                     
  3048                           ;main.c: 198:                 }
  3049  00F6A0  0100               	movlb	0	; () banked
  3050  00F6A2  2BBF               	incf	main@i& (0+255),f,b
  3051  00F6A4                     
  3052                           ; BSR set to: 0
  3053  00F6A4  0E3F               	movlw	63
  3054  00F6A6  65BF               	cpfsgt	main@i& (0+255),b
  3055  00F6A8  EF58  F07B         	goto	u2131
  3056  00F6AC  EF5A  F07B         	goto	u2130
  3057  00F6B0                     u2131:
  3058  00F6B0  EF3F  F07B         	goto	l2766
  3059  00F6B4                     u2130:
  3060  00F6B4                     
  3061                           ; BSR set to: 0
  3062                           ;main.c: 199:                 printf("\r\n");
  3063  00F6B4  0E3F               	movlw	low (STR_50+49)
  3064  00F6B6  6F68               	movwf	printf@fmt& (0+255),b
  3065  00F6B8  0EFB               	movlw	high (STR_50+49)
  3066  00F6BA  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3067  00F6BC  EC75  F06F         	call	_printf	;wreg free
  3068  00F6C0                     
  3069                           ;main.c: 210:                 for (i = 0; i < 64; i++) {
  3070  00F6C0  0E00               	movlw	0
  3071  00F6C2  0100               	movlb	0	; () banked
  3072  00F6C4  6FBF               	movwf	main@i& (0+255),b
  3073  00F6C6                     l2782:
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;main.c: 211:                     if (sample[i] < (nominalHallPressed + delta)) {
  3077  00F6C6  51BB               	movf	main@delta& (0+255),w,b
  3078  00F6C8  C0B8  F072         	movff	main@nominalHallPressed,??_main
  3079  00F6CC  6B73               	clrf	(??_main+1)& (0+255),b
  3080  00F6CE  2772               	addwf	??_main& (0+255),f,b
  3081  00F6D0  0E00               	movlw	0
  3082  00F6D2  2373               	addwfc	(??_main+1)& (0+255),f,b
  3083  00F6D4  0E77               	movlw	low main@sample
  3084  00F6D6  25BF               	addwf	main@i& (0+255),w,b
  3085  00F6D8  6ED9               	movwf	fsr2l,c
  3086  00F6DA  6ADA               	clrf	fsr2h,c
  3087  00F6DC  0E00               	movlw	high main@sample
  3088  00F6DE  22DA               	addwfc	fsr2h,f,c
  3089  00F6E0  50DF               	movf	indf2,w,c
  3090  00F6E2  6F74               	movwf	(??_main+2)& (0+255),b
  3091  00F6E4  6B75               	clrf	(??_main+3)& (0+255),b
  3092  00F6E6  5172               	movf	??_main& (0+255),w,b
  3093  00F6E8  5D74               	subwf	(??_main+2)& (0+255),w,b
  3094  00F6EA  5175               	movf	(??_main+3)& (0+255),w,b
  3095  00F6EC  0A80               	xorlw	128
  3096  00F6EE  6F76               	movwf	(??_main+4)& (0+255),b
  3097  00F6F0  5173               	movf	(??_main+1)& (0+255),w,b
  3098  00F6F2  0A80               	xorlw	128
  3099  00F6F4  5976               	subwfb	(??_main+4)& (0+255),w,b
  3100  00F6F6  B0D8               	btfsc	status,0,c
  3101  00F6F8  EF80  F07B         	goto	u2141
  3102  00F6FC  EF82  F07B         	goto	u2140
  3103  00F700                     u2141:
  3104  00F700  EF84  F07B         	goto	l2786
  3105  00F704                     u2140:
  3106  00F704  EF8D  F07B         	goto	l2790
  3107  00F708                     l2786:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;main.c: 214:                 }
  3111  00F708  2BBF               	incf	main@i& (0+255),f,b
  3112  00F70A                     
  3113                           ; BSR set to: 0
  3114  00F70A  0E3F               	movlw	63
  3115  00F70C  65BF               	cpfsgt	main@i& (0+255),b
  3116  00F70E  EF8B  F07B         	goto	u2151
  3117  00F712  EF8D  F07B         	goto	u2150
  3118  00F716                     u2151:
  3119  00F716  EF63  F07B         	goto	l2782
  3120  00F71A                     u2150:
  3121  00F71A                     l2790:
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;main.c: 216:                 printf("key velocity = %d\r\n",i);
  3125  00F71A  0E42               	movlw	low STR_34
  3126  00F71C  6F68               	movwf	printf@fmt& (0+255),b
  3127  00F71E  0EFF               	movlw	high STR_34
  3128  00F720  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3129  00F722  C0BF  F06A         	movff	main@i,?_printf+2
  3130  00F726  6B6B               	clrf	(?_printf+3)& (0+255),b
  3131  00F728  EC75  F06F         	call	_printf	;wreg free
  3132                           
  3133                           ;main.c: 217:                 break;
  3134  00F72C  EF45  F079         	goto	l2640
  3135  00F730                     l2792:
  3136                           
  3137                           ; BSR set to: 0
  3138                           ;main.c: 223:                 printf("Launch hairless-midiserial\r\n");
  3139  00F730  0ED7               	movlw	low STR_35
  3140  00F732  6F68               	movwf	printf@fmt& (0+255),b
  3141  00F734  0EFD               	movlw	high STR_35
  3142  00F736  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3143  00F738  EC75  F06F         	call	_printf	;wreg free
  3144                           
  3145                           ;main.c: 224:                 printf("In the hairless-midiserial program:\r\n");
  3146  00F73C  0E3D               	movlw	low (STR_48+4)
  3147  00F73E  0100               	movlb	0	; () banked
  3148  00F740  6F68               	movwf	printf@fmt& (0+255),b
  3149  00F742  0EFC               	movlw	high (STR_48+4)
  3150  00F744  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3151  00F746  EC75  F06F         	call	_printf	;wreg free
  3152                           
  3153                           ;main.c: 225:                 printf("    File -> preferences\r\n");
  3154  00F74A  0E44               	movlw	low STR_37
  3155  00F74C  0100               	movlb	0	; () banked
  3156  00F74E  6F68               	movwf	printf@fmt& (0+255),b
  3157  00F750  0EFE               	movlw	high STR_37
  3158  00F752  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3159  00F754  EC75  F06F         	call	_printf	;wreg free
  3160                           
  3161                           ;main.c: 226:                 printf("    Baud Rate:  9600\r\n");
  3162  00F758  0EA8               	movlw	low STR_38
  3163  00F75A  0100               	movlb	0	; () banked
  3164  00F75C  6F68               	movwf	printf@fmt& (0+255),b
  3165  00F75E  0EFE               	movlw	high STR_38
  3166  00F760  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3167  00F762  EC75  F06F         	call	_printf	;wreg free
  3168                           
  3169                           ;main.c: 227:                 printf("    Data Bits:  8\r\n");
  3170  00F766  0E2E               	movlw	low STR_39
  3171  00F768  0100               	movlb	0	; () banked
  3172  00F76A  6F68               	movwf	printf@fmt& (0+255),b
  3173  00F76C  0EFF               	movlw	high STR_39
  3174  00F76E  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3175  00F770  EC75  F06F         	call	_printf	;wreg free
  3176                           
  3177                           ;main.c: 228:                 printf("    Parity:     None\r\n");
  3178  00F774  0EBF               	movlw	low STR_40
  3179  00F776  0100               	movlb	0	; () banked
  3180  00F778  6F68               	movwf	printf@fmt& (0+255),b
  3181  00F77A  0EFE               	movlw	high STR_40
  3182  00F77C  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3183  00F77E  EC75  F06F         	call	_printf	;wreg free
  3184                           
  3185                           ;main.c: 229:                 printf("    Stop Bit(s):    1\r\n");
  3186  00F782  0E90               	movlw	low STR_41
  3187  00F784  0100               	movlb	0	; () banked
  3188  00F786  6F68               	movwf	printf@fmt& (0+255),b
  3189  00F788  0EFE               	movlw	high STR_41
  3190  00F78A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3191  00F78C  EC75  F06F         	call	_printf	;wreg free
  3192                           
  3193                           ;main.c: 230:                 printf("    Flow Control:   None\r\n");
  3194  00F790  0E0F               	movlw	low STR_42
  3195  00F792  0100               	movlb	0	; () banked
  3196  00F794  6F68               	movwf	printf@fmt& (0+255),b
  3197  00F796  0EFE               	movlw	high STR_42
  3198  00F798  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3199  00F79A  EC75  F06F         	call	_printf	;wreg free
  3200                           
  3201                           ;main.c: 231:                 printf("    Click ""OK""\r\n");
  3202  00F79E  0EC3               	movlw	low STR_43
  3203  00F7A0  0100               	movlb	0	; () banked
  3204  00F7A2  6F68               	movwf	printf@fmt& (0+255),b
  3205  00F7A4  0EFF               	movlw	high STR_43
  3206  00F7A6  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3207  00F7A8  EC75  F06F         	call	_printf	;wreg free
  3208                           
  3209                           ;main.c: 232:                 printf("    Serial Port -> (Not Connected)\r\n");
  3210  00F7AC  0E67               	movlw	low (STR_54+4)
  3211  00F7AE  0100               	movlb	0	; () banked
  3212  00F7B0  6F68               	movwf	printf@fmt& (0+255),b
  3213  00F7B2  0EFC               	movlw	high (STR_54+4)
  3214  00F7B4  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3215  00F7B6  EC75  F06F         	call	_printf	;wreg free
  3216                           
  3217                           ;main.c: 233:                 printf("    MIDI Out -> (Not Connected)\r\n\n");
  3218  00F7BA  0E74               	movlw	low STR_45
  3219  00F7BC  0100               	movlb	0	; () banked
  3220  00F7BE  6F68               	movwf	printf@fmt& (0+255),b
  3221  00F7C0  0EFD               	movlw	high STR_45
  3222  00F7C2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3223  00F7C4  EC75  F06F         	call	_printf	;wreg free
  3224                           
  3225                           ;main.c: 234:                 printf("When you have complete this:\r\n");
  3226  00F7C8  0EB8               	movlw	low STR_46
  3227  00F7CA  0100               	movlb	0	; () banked
  3228  00F7CC  6F68               	movwf	printf@fmt& (0+255),b
  3229  00F7CE  0EFD               	movlw	high STR_46
  3230  00F7D0  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3231  00F7D2  EC75  F06F         	call	_printf	;wreg free
  3232                           
  3233                           ;main.c: 235:                 printf("    Close out of Putty.\r\n");
  3234  00F7D6  0E2A               	movlw	low STR_47
  3235  00F7D8  0100               	movlb	0	; () banked
  3236  00F7DA  6F68               	movwf	printf@fmt& (0+255),b
  3237  00F7DC  0EFE               	movlw	high STR_47
  3238  00F7DE  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3239  00F7E0  EC75  F06F         	call	_printf	;wreg free
  3240                           
  3241                           ;main.c: 236:                 printf("    In the hairless-midiserial program:\r\n");
  3242  00F7E4  0E39               	movlw	low STR_48
  3243  00F7E6  0100               	movlb	0	; () banked
  3244  00F7E8  6F68               	movwf	printf@fmt& (0+255),b
  3245  00F7EA  0EFC               	movlw	high STR_48
  3246  00F7EC  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3247  00F7EE  EC75  F06F         	call	_printf	;wreg free
  3248                           
  3249                           ;main.c: 237:                 printf("        Serial Port -> USB Serial Port (COMx)\r\n"
      +                          );
  3250  00F7F2  0ED9               	movlw	low STR_49
  3251  00F7F4  0100               	movlb	0	; () banked
  3252  00F7F6  6F68               	movwf	printf@fmt& (0+255),b
  3253  00F7F8  0EFB               	movlw	high STR_49
  3254  00F7FA  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3255  00F7FC  EC75  F06F         	call	_printf	;wreg free
  3256                           
  3257                           ;main.c: 238:                 printf("        MIDI Out -> Microsoft GS Wavetable Synth \
      +                          r\n");
  3258  00F800  0E0E               	movlw	low STR_50
  3259  00F802  0100               	movlb	0	; () banked
  3260  00F804  6F68               	movwf	printf@fmt& (0+255),b
  3261  00F806  0EFB               	movlw	high STR_50
  3262  00F808  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3263  00F80A  EC75  F06F         	call	_printf	;wreg free
  3264                           
  3265                           ;main.c: 239:                 printf("    Press upper push button on Dev'18 to start MID
      +                          I play sequence\r\n");
  3266  00F80E  0E87               	movlw	low STR_51
  3267  00F810  0100               	movlb	0	; () banked
  3268  00F812  6F68               	movwf	printf@fmt& (0+255),b
  3269  00F814  0EFA               	movlw	high STR_51
  3270  00F816  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3271  00F818  EC75  F06F         	call	_printf	;wreg free
  3272                           
  3273                           ;main.c: 240:                 printf("    Press lower push button on Dev'18 to exit MIDI
      +                           play sequence\r\n");
  3274  00F81C  0ECB               	movlw	low STR_52
  3275  00F81E  0100               	movlb	0	; () banked
  3276  00F820  6F68               	movwf	printf@fmt& (0+255),b
  3277  00F822  0EFA               	movlw	high STR_52
  3278  00F824  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3279  00F826  EC75  F06F         	call	_printf	;wreg free
  3280                           
  3281                           ;main.c: 241:                 printf("    In the hairless-midiserial program:\r\n");
  3282  00F82A  0E39               	movlw	low STR_48
  3283  00F82C  0100               	movlb	0	; () banked
  3284  00F82E  6F68               	movwf	printf@fmt& (0+255),b
  3285  00F830  0EFC               	movlw	high STR_48
  3286  00F832  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3287  00F834  EC75  F06F         	call	_printf	;wreg free
  3288                           
  3289                           ;main.c: 242:                 printf("        Serial Port -> (Not Connected)\r\n");
  3290  00F838  0E63               	movlw	low STR_54
  3291  00F83A  0100               	movlb	0	; () banked
  3292  00F83C  6F68               	movwf	printf@fmt& (0+255),b
  3293  00F83E  0EFC               	movlw	high STR_54
  3294  00F840  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3295  00F842  EC75  F06F         	call	_printf	;wreg free
  3296                           
  3297                           ;main.c: 243:                 printf("        MIDI Out -> (Not Connected)\r\n");
  3298  00F846  0EDE               	movlw	low STR_55
  3299  00F848  0100               	movlb	0	; () banked
  3300  00F84A  6F68               	movwf	printf@fmt& (0+255),b
  3301  00F84C  0EFC               	movlw	high STR_55
  3302  00F84E  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3303  00F850  EC75  F06F         	call	_printf	;wreg free
  3304                           
  3305                           ;main.c: 244:                 printf("        close hairless\r\n");
  3306  00F854  0E77               	movlw	low STR_56
  3307  00F856  0100               	movlb	0	; () banked
  3308  00F858  6F68               	movwf	printf@fmt& (0+255),b
  3309  00F85A  0EFE               	movlw	high STR_56
  3310  00F85C  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3311  00F85E  EC75  F06F         	call	_printf	;wreg free
  3312                           
  3313                           ;main.c: 245:                 printf("    Launch PuTTY and reconnect to the VCOM port\r\
      +                          n");
  3314  00F862  0E76               	movlw	low STR_57
  3315  00F864  0100               	movlb	0	; () banked
  3316  00F866  6F68               	movwf	printf@fmt& (0+255),b
  3317  00F868  0EFB               	movlw	high STR_57
  3318  00F86A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3319  00F86C  EC75  F06F         	call	_printf	;wreg free
  3320  00F870                     
  3321                           ;main.c: 247:                 pitch = 1;
  3322  00F870  0E01               	movlw	1
  3323  00F872  0100               	movlb	0	; () banked
  3324  00F874  6FBC               	movwf	main@pitch& (0+255),b
  3325  00F876                     
  3326                           ; BSR set to: 0
  3327                           ;main.c: 248:                 instrument = 0;
  3328  00F876  0E00               	movlw	0
  3329  00F878  6FB7               	movwf	main@instrument& (0+255),b
  3330  00F87A                     l141:
  3331  00F87A  B480               	btfsc	128,2,c	;volatile
  3332  00F87C  EF42  F07C         	goto	u2161
  3333  00F880  EF44  F07C         	goto	u2160
  3334  00F884                     u2161:
  3335  00F884  EF3D  F07C         	goto	l141
  3336  00F888                     u2160:
  3337  00F888  EF81  F07C         	goto	l2820
  3338  00F88C                     l2798:
  3339                           
  3340                           ;main.c: 252:                     noteOn(0x90, pitch, 105);
  3341  00F88C  C0BC  F002         	movff	main@pitch,noteOn@pitch
  3342  00F890  0E69               	movlw	105
  3343  00F892  6E03               	movwf	noteOn@velocity^0,c
  3344  00F894  0E90               	movlw	144
  3345  00F896  EC03  F06F         	call	_noteOn
  3346  00F89A                     
  3347                           ;main.c: 253:                     TMR0_WriteTimer(TMR0_ReadTimer() + 0xFFFF - 50000);
  3348  00F89A  EC3F  F06F         	call	_TMR0_ReadTimer	;wreg free
  3349  00F89E  0EAF               	movlw	175
  3350  00F8A0  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  3351  00F8A2  6E09               	movwf	TMR0_WriteTimer@timerVal^0,c
  3352  00F8A4  0E3C               	movlw	60
  3353  00F8A6  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  3354  00F8A8  6E0A               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  3355  00F8AA  ECB1  F06E         	call	_TMR0_WriteTimer	;wreg free
  3356  00F8AE                     
  3357                           ;main.c: 254:                     INTCONbits.TMR0IF = 0;
  3358  00F8AE  94F2               	bcf	242,2,c	;volatile
  3359  00F8B0                     l2804:
  3360  00F8B0  ECD9  F06E         	call	_TMR0_HasOverflowOccured	;wreg free
  3361  00F8B4  0900               	iorlw	0
  3362  00F8B6  B4D8               	btfsc	status,2,c
  3363  00F8B8  EF60  F07C         	goto	u2171
  3364  00F8BC  EF62  F07C         	goto	u2170
  3365  00F8C0                     u2171:
  3366  00F8C0  EF58  F07C         	goto	l2804
  3367  00F8C4                     u2170:
  3368  00F8C4                     
  3369                           ;main.c: 256:                     noteOn(0x80, pitch, 105);
  3370  00F8C4  C0BC  F002         	movff	main@pitch,noteOn@pitch
  3371  00F8C8  0E69               	movlw	105
  3372  00F8CA  6E03               	movwf	noteOn@velocity^0,c
  3373  00F8CC  0E80               	movlw	128
  3374  00F8CE  EC03  F06F         	call	_noteOn
  3375  00F8D2                     
  3376                           ;main.c: 258:                     pitch = pitch + 1;
  3377  00F8D2  0100               	movlb	0	; () banked
  3378  00F8D4  29BC               	incf	main@pitch& (0+255),w,b
  3379  00F8D6  6FBC               	movwf	main@pitch& (0+255),b
  3380  00F8D8                     
  3381                           ; BSR set to: 0
  3382                           ;main.c: 259:                     if (pitch > 128) {
  3383  00F8D8  0E80               	movlw	128
  3384  00F8DA  65BC               	cpfsgt	main@pitch& (0+255),b
  3385  00F8DC  EF72  F07C         	goto	u2181
  3386  00F8E0  EF74  F07C         	goto	u2180
  3387  00F8E4                     u2181:
  3388  00F8E4  EF81  F07C         	goto	l2820
  3389  00F8E8                     u2180:
  3390  00F8E8                     
  3391                           ; BSR set to: 0
  3392                           ;main.c: 260:                         pitch = 1;
  3393  00F8E8  0E01               	movlw	1
  3394  00F8EA  6FBC               	movwf	main@pitch& (0+255),b
  3395  00F8EC                     
  3396                           ; BSR set to: 0
  3397                           ;main.c: 261:                         instrument = (instrument + 8) & 0x7F;
  3398  00F8EC  51B7               	movf	main@instrument& (0+255),w,b
  3399  00F8EE  0F08               	addlw	8
  3400  00F8F0  0B7F               	andlw	127
  3401  00F8F2  6FB7               	movwf	main@instrument& (0+255),b
  3402  00F8F4                     
  3403                           ; BSR set to: 0
  3404                           ;main.c: 262:                         putByteSCI(0xC0);
  3405  00F8F4  0EC0               	movlw	192
  3406  00F8F6  EC25  F06F         	call	_putByteSCI
  3407  00F8FA                     
  3408                           ;main.c: 263:                         putByteSCI(instrument);
  3409  00F8FA  0100               	movlb	0	; () banked
  3410  00F8FC  51B7               	movf	main@instrument& (0+255),w,b
  3411  00F8FE  EC25  F06F         	call	_putByteSCI
  3412  00F902                     l2820:
  3413                           
  3414                           ;main.c: 250:                 while(PORTAbits.RA3 != 0) {
  3415  00F902  B680               	btfsc	128,3,c	;volatile
  3416  00F904  EF86  F07C         	goto	u2191
  3417  00F908  EF88  F07C         	goto	u2190
  3418  00F90C                     u2191:
  3419  00F90C  EF46  F07C         	goto	l2798
  3420  00F910                     u2190:
  3421  00F910  EF45  F079         	goto	l2640
  3422  00F914                     l2822:
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;main.c: 272:     printf("Unknown key %c\r\n",cmd);
  3426  00F914  0E90               	movlw	low STR_58
  3427  00F916  6F68               	movwf	printf@fmt& (0+255),b
  3428  00F918  0EFF               	movlw	high STR_58
  3429  00F91A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3430  00F91C  C0BA  F06A         	movff	main@cmd,?_printf+2
  3431  00F920  6B6B               	clrf	(?_printf+3)& (0+255),b
  3432  00F922  EC75  F06F         	call	_printf	;wreg free
  3433                           
  3434                           ;main.c: 273:     break;
  3435  00F926  EF45  F079         	goto	l2640
  3436  00F92A                     l2826:
  3437                           
  3438                           ; BSR set to: 0
  3439  00F92A  51BA               	movf	main@cmd& (0+255),w,b
  3440  00F92C  6F72               	movwf	??_main& (0+255),b
  3441  00F92E  6B73               	clrf	(??_main+1)& (0+255),b
  3442                           
  3443                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3444                           ; Switch size 1, requested type "simple"
  3445                           ; Number of cases is 1, Range of values is 0 to 0
  3446                           ; switch strategies available:
  3447                           ; Name         Instructions Cycles
  3448                           ; simple_byte            4     3 (average)
  3449                           ;	Chosen strategy is simple_byte
  3450  00F930  5173               	movf	(??_main+1)& (0+255),w,b
  3451  00F932  0A00               	xorlw	0	; case 0
  3452  00F934  B4D8               	btfsc	status,2,c
  3453  00F936  EF9F  F07C         	goto	l2888
  3454  00F93A  EF8A  F07C         	goto	l2822
  3455  00F93E                     l2888:
  3456                           
  3457                           ; BSR set to: 0
  3458                           ; Switch size 1, requested type "simple"
  3459                           ; Number of cases is 13, Range of values is 49 to 122
  3460                           ; switch strategies available:
  3461                           ; Name         Instructions Cycles
  3462                           ; simple_byte           40    21 (average)
  3463                           ;	Chosen strategy is simple_byte
  3464  00F93E  5172               	movf	??_main& (0+255),w,b
  3465  00F940  0A31               	xorlw	49	; case 49
  3466  00F942  B4D8               	btfsc	status,2,c
  3467  00F944  EFAD  F07A         	goto	l112
  3468  00F948  0A0E               	xorlw	14	; case 63
  3469  00F94A  B4D8               	btfsc	status,2,c
  3470  00F94C  EF55  F079         	goto	l2644
  3471  00F950  0A7C               	xorlw	124	; case 67
  3472  00F952  B4D8               	btfsc	status,2,c
  3473  00F954  EF41  F07A         	goto	l2686
  3474  00F958  0A07               	xorlw	7	; case 68
  3475  00F95A  B4D8               	btfsc	status,2,c
  3476  00F95C  EF72  F07A         	goto	l2700
  3477  00F960  0A09               	xorlw	9	; case 77
  3478  00F962  B4D8               	btfsc	status,2,c
  3479  00F964  EF98  F07B         	goto	l2792
  3480  00F968  0A1E               	xorlw	30	; case 83
  3481  00F96A  B4D8               	btfsc	status,2,c
  3482  00F96C  EF8A  F07A         	goto	l2708
  3483  00F970  0A09               	xorlw	9	; case 90
  3484  00F972  B4D8               	btfsc	status,2,c
  3485  00F974  EFE7  F079         	goto	l2648
  3486  00F978  0A39               	xorlw	57	; case 99
  3487  00F97A  B4D8               	btfsc	status,2,c
  3488  00F97C  EF10  F07A         	goto	l2672
  3489  00F980  0A07               	xorlw	7	; case 100
  3490  00F982  B4D8               	btfsc	status,2,c
  3491  00F984  EF72  F07A         	goto	l2700
  3492  00F988  0A0B               	xorlw	11	; case 111
  3493  00F98A  B4D8               	btfsc	status,2,c
  3494  00F98C  EFDF  F079         	goto	l2646
  3495  00F990  0A1C               	xorlw	28	; case 115
  3496  00F992  B4D8               	btfsc	status,2,c
  3497  00F994  EF8A  F07A         	goto	l2708
  3498  00F998  0A07               	xorlw	7	; case 116
  3499  00F99A  B4D8               	btfsc	status,2,c
  3500  00F99C  EFCA  F07A         	goto	l2724
  3501  00F9A0  0A0E               	xorlw	14	; case 122
  3502  00F9A2  B4D8               	btfsc	status,2,c
  3503  00F9A4  EFFC  F079         	goto	l2660
  3504  00F9A8  EF8A  F07C         	goto	l2822
  3505  00F9AC  EF00  F000         	goto	start
  3506  00F9B0                     __end_of_main:
  3507                           	opt callstack 0
  3508                           
  3509 ;; *************** function _printf *****************
  3510 ;; Defined at:
  3511 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  3514 ;;		 -> STR_58(17), STR_57(50), STR_56(25), STR_55(38), 
  3515 ;;		 -> STR_54(41), STR_53(42), STR_52(67), STR_51(68), 
  3516 ;;		 -> STR_50(52), STR_49(48), STR_48(42), STR_47(26), 
  3517 ;;		 -> STR_46(31), STR_45(35), STR_44(37), STR_43(15), 
  3518 ;;		 -> STR_42(27), STR_41(24), STR_40(23), STR_39(20), 
  3519 ;;		 -> STR_38(23), STR_37(26), STR_36(38), STR_35(29), 
  3520 ;;		 -> STR_34(20), STR_33(3), STR_32(5), STR_31(19), 
  3521 ;;		 -> STR_30(19), STR_29(41), STR_28(17), STR_27(36), 
  3522 ;;		 -> STR_26(72), STR_25(38), STR_24(74), STR_23(2), 
  3523 ;;		 -> STR_22(2), STR_21(13), STR_20(52), STR_19(27), 
  3524 ;;		 -> STR_18(68), STR_17(49), STR_16(48), STR_15(38), 
  3525 ;;		 -> STR_14(33), STR_13(25), STR_12(22), STR_11(7), 
  3526 ;;		 -> STR_10(15), STR_9(52), STR_8(41), STR_7(17), 
  3527 ;;		 -> STR_6(23), STR_5(52), STR_4(5), STR_3(22), 
  3528 ;;		 -> STR_2(21), STR_1(20), 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;  ap              2   16[BANK0 ] PTR void [1]
  3531 ;;		 -> ?_printf(2), 
  3532 ;;  ret             2    0        int 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  2    8[BANK0 ] int 
  3535 ;; Registers used:
  3536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3542 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;Total ram usage:       10 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    8
  3549 ;; This function calls:
  3550 ;;		_vfprintf
  3551 ;; This function is called by:
  3552 ;;		_main
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text1
  3557  00DEEA                     __ptext1:
  3558                           	opt callstack 0
  3559  00DEEA                     _printf:
  3560                           	opt callstack 22
  3561  00DEEA  0E6A               	movlw	low (?_printf+2)
  3562  00DEEC  0100               	movlb	0	; () banked
  3563  00DEEE  6F70               	movwf	printf@ap& (0+255),b
  3564  00DEF0  0E00               	movlw	high (?_printf+2)
  3565  00DEF2  6F71               	movwf	(printf@ap+1)& (0+255),b
  3566  00DEF4                     
  3567                           ; BSR set to: 0
  3568  00DEF4  0E00               	movlw	0
  3569  00DEF6  6F60               	movwf	vfprintf@fp& (0+255),b
  3570  00DEF8  0E00               	movlw	0
  3571  00DEFA  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  3572  00DEFC  C068  F062         	movff	printf@fmt,vfprintf@fmt
  3573  00DF00  C069  F063         	movff	printf@fmt+1,vfprintf@fmt+1
  3574  00DF04  0E70               	movlw	low printf@ap
  3575  00DF06  6F64               	movwf	vfprintf@ap& (0+255),b
  3576  00DF08  0E00               	movlw	high printf@ap
  3577  00DF0A  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  3578  00DF0C  ECA1  F070         	call	_vfprintf	;wreg free
  3579  00DF10  0012               	return		;funcret
  3580  00DF12                     __end_of_printf:
  3581                           	opt callstack 0
  3582                           
  3583 ;; *************** function _vfprintf *****************
  3584 ;; Defined at:
  3585 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3588 ;;		 -> NULL(0), 
  3589 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3590 ;;		 -> STR_58(17), STR_57(50), STR_56(25), STR_55(38), 
  3591 ;;		 -> STR_54(41), STR_53(42), STR_52(67), STR_51(68), 
  3592 ;;		 -> STR_50(52), STR_49(48), STR_48(42), STR_47(26), 
  3593 ;;		 -> STR_46(31), STR_45(35), STR_44(37), STR_43(15), 
  3594 ;;		 -> STR_42(27), STR_41(24), STR_40(23), STR_39(20), 
  3595 ;;		 -> STR_38(23), STR_37(26), STR_36(38), STR_35(29), 
  3596 ;;		 -> STR_34(20), STR_33(3), STR_32(5), STR_31(19), 
  3597 ;;		 -> STR_30(19), STR_29(41), STR_28(17), STR_27(36), 
  3598 ;;		 -> STR_26(72), STR_25(38), STR_24(74), STR_23(2), 
  3599 ;;		 -> STR_22(2), STR_21(13), STR_20(52), STR_19(27), 
  3600 ;;		 -> STR_18(68), STR_17(49), STR_16(48), STR_15(38), 
  3601 ;;		 -> STR_14(33), STR_13(25), STR_12(22), STR_11(7), 
  3602 ;;		 -> STR_10(15), STR_9(52), STR_8(41), STR_7(17), 
  3603 ;;		 -> STR_6(23), STR_5(52), STR_4(5), STR_3(22), 
  3604 ;;		 -> STR_2(21), STR_1(20), 
  3605 ;;  ap              2    4[BANK0 ] PTR PTR void 
  3606 ;;		 -> printf@ap(2), 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
  3609 ;;		 -> STR_58(17), STR_57(50), STR_56(25), STR_55(38), 
  3610 ;;		 -> STR_54(41), STR_53(42), STR_52(67), STR_51(68), 
  3611 ;;		 -> STR_50(52), STR_49(48), STR_48(42), STR_47(26), 
  3612 ;;		 -> STR_46(31), STR_45(35), STR_44(37), STR_43(15), 
  3613 ;;		 -> STR_42(27), STR_41(24), STR_40(23), STR_39(20), 
  3614 ;;		 -> STR_38(23), STR_37(26), STR_36(38), STR_35(29), 
  3615 ;;		 -> STR_34(20), STR_33(3), STR_32(5), STR_31(19), 
  3616 ;;		 -> STR_30(19), STR_29(41), STR_28(17), STR_27(36), 
  3617 ;;		 -> STR_26(72), STR_25(38), STR_24(74), STR_23(2), 
  3618 ;;		 -> STR_22(2), STR_21(13), STR_20(52), STR_19(27), 
  3619 ;;		 -> STR_18(68), STR_17(49), STR_16(48), STR_15(38), 
  3620 ;;		 -> STR_14(33), STR_13(25), STR_12(22), STR_11(7), 
  3621 ;;		 -> STR_10(15), STR_9(52), STR_8(41), STR_7(17), 
  3622 ;;		 -> STR_6(23), STR_5(52), STR_4(5), STR_3(22), 
  3623 ;;		 -> STR_2(21), STR_1(20), 
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  2    0[BANK0 ] int 
  3626 ;; Registers used:
  3627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:        8 bytes
  3638 ;; Hardware stack levels used:    1
  3639 ;; Hardware stack levels required when called:    7
  3640 ;; This function calls:
  3641 ;;		_vfpfcnvrt
  3642 ;; This function is called by:
  3643 ;;		_printf
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text2
  3648  00E142                     __ptext2:
  3649                           	opt callstack 0
  3650  00E142                     _vfprintf:
  3651                           	opt callstack 22
  3652  00E142                     
  3653                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3654  00E142  C062  F066         	movff	vfprintf@fmt,vfprintf@cfmt
  3655  00E146  C063  F067         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3656  00E14A                     
  3657                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3658  00E14A  0E00               	movlw	0
  3659  00E14C  0100               	movlb	0	; () banked
  3660  00E14E  6FC1               	movwf	(_nout+1)& (0+255),b
  3661  00E150  0E00               	movlw	0
  3662  00E152  6FC0               	movwf	_nout& (0+255),b
  3663                           
  3664                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3665  00E154  EFBF  F070         	goto	l2554
  3666  00E158                     l2552:
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3670  00E158  C060  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  3671  00E15C  C061  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3672  00E160  0E66               	movlw	low vfprintf@cfmt
  3673  00E162  6E44               	movwf	vfpfcnvrt@fmt^0,c
  3674  00E164  0E00               	movlw	high vfprintf@cfmt
  3675  00E166  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3676  00E168  C064  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  3677  00E16C  C065  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3678  00E170  EC16  F077         	call	_vfpfcnvrt	;wreg free
  3679  00E174  5042               	movf	?_vfpfcnvrt^0,w,c
  3680  00E176  0100               	movlb	0	; () banked
  3681  00E178  27C0               	addwf	_nout& (0+255),f,b
  3682  00E17A  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  3683  00E17C  23C1               	addwfc	(_nout+1)& (0+255),f,b
  3684  00E17E                     l2554:
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3688  00E17E  C066  FFF6         	movff	vfprintf@cfmt,tblptrl
  3689  00E182  C067  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3690  00E186                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3691  00E186  6AF8               	clrf	tblptru,c
  3692  00E188                     	endif
  3693  00E188                     	if	0	;tblptru may be non-zero
  3694  00E188                     	endif
  3695  00E188  0008               	tblrd		*
  3696  00E18A  50F5               	movf	tablat,w,c
  3697  00E18C  0900               	iorlw	0
  3698  00E18E  A4D8               	btfss	status,2,c
  3699  00E190  EFCC  F070         	goto	u1911
  3700  00E194  EFCE  F070         	goto	u1910
  3701  00E198                     u1911:
  3702  00E198  EFAC  F070         	goto	l2552
  3703  00E19C                     u1910:
  3704  00E19C                     
  3705                           ; BSR set to: 0
  3706                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3707  00E19C  C0C0  F060         	movff	_nout,?_vfprintf
  3708  00E1A0  C0C1  F061         	movff	_nout+1,?_vfprintf+1
  3709  00E1A4                     
  3710                           ; BSR set to: 0
  3711  00E1A4  0012               	return		;funcret
  3712  00E1A6                     __end_of_vfprintf:
  3713                           	opt callstack 0
  3714                           
  3715 ;; *************** function _vfpfcnvrt *****************
  3716 ;; Defined at:
  3717 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  3720 ;;		 -> NULL(0), 
  3721 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  3722 ;;		 -> vfprintf@cfmt(2), 
  3723 ;;  ap              2   69[COMRAM] PTR PTR void 
  3724 ;;		 -> printf@ap(2), 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  llu             8   83[COMRAM] unsigned long long 
  3727 ;;  ll              8   75[COMRAM] long long 
  3728 ;;  f               4    0        long long 
  3729 ;;  vp              3    0        PTR void 
  3730 ;;  ct              3    0        unsigned char [3]
  3731 ;;  cp              3    0        PTR unsigned char 
  3732 ;;  i               2    0        int 
  3733 ;;  done            2    0        int 
  3734 ;;  c               1   93[COMRAM] unsigned char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  2   65[COMRAM] int 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3744 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;Total ram usage:       29 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    6
  3751 ;; This function calls:
  3752 ;;		_atoi
  3753 ;;		_ctoa
  3754 ;;		_dtoa
  3755 ;;		_fputc
  3756 ;;		_isdigit
  3757 ;;		_utoa
  3758 ;; This function is called by:
  3759 ;;		_vfprintf
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text3
  3764  00EE2C                     __ptext3:
  3765                           	opt callstack 0
  3766  00EE2C                     _vfpfcnvrt:
  3767                           	opt callstack 22
  3768  00EE2C                     
  3769                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3770  00EE2C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3771  00EE30  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3772  00EE34  CFDE FFF6          	movff	postinc2,tblptrl
  3773  00EE38  CFDD FFF7          	movff	postdec2,tblptrh
  3774  00EE3C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3775  00EE3C  6AF8               	clrf	tblptru,c
  3776  00EE3E                     	endif
  3777  00EE3E                     	if	0	;tblptru may be non-zero
  3778  00EE3E                     	endif
  3779  00EE3E  0008               	tblrd		*
  3780  00EE40  50F5               	movf	tablat,w,c
  3781  00EE42  0A25               	xorlw	37
  3782  00EE44  A4D8               	btfss	status,2,c
  3783  00EE46  EF27  F077         	goto	u1781
  3784  00EE4A  EF29  F077         	goto	u1780
  3785  00EE4E                     u1781:
  3786  00EE4E  EFE6  F078         	goto	l2504
  3787  00EE52                     u1780:
  3788  00EE52                     
  3789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3790  00EE52  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3791  00EE56  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3792  00EE5A  2ADE               	incf	postinc2,f,c
  3793  00EE5C  0E00               	movlw	0
  3794  00EE5E  22DD               	addwfc	postdec2,f,c
  3795  00EE60                     
  3796                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3797  00EE60  0E00               	movlw	0
  3798  00EE62  0100               	movlb	0	; () banked
  3799  00EE64  6FC3               	movwf	(_width+1)& (0+255),b
  3800  00EE66  0E00               	movlw	0
  3801  00EE68  6FC2               	movwf	_width& (0+255),b
  3802  00EE6A  C0C2  F0C6         	movff	_width,_flags
  3803  00EE6E  C0C3  F0C7         	movff	_width+1,_flags+1
  3804  00EE72                     
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3807  00EE72  69C4               	setf	_prec& (0+255),b
  3808  00EE74  69C5               	setf	(_prec+1)& (0+255),b
  3809  00EE76                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3812  00EE76  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3813  00EE7A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3814  00EE7E  CFDE FFF6          	movff	postinc2,tblptrl
  3815  00EE82  CFDD FFF7          	movff	postdec2,tblptrh
  3816  00EE86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3817  00EE86  6AF8               	clrf	tblptru,c
  3818  00EE88                     	endif
  3819  00EE88                     	if	0	;tblptru may be non-zero
  3820  00EE88                     	endif
  3821  00EE88  0008               	tblrd		*
  3822  00EE8A  50F5               	movf	tablat,w,c
  3823  00EE8C  0A2A               	xorlw	42
  3824  00EE8E  A4D8               	btfss	status,2,c
  3825  00EE90  EF4C  F077         	goto	u1791
  3826  00EE94  EF4E  F077         	goto	u1790
  3827  00EE98                     u1791:
  3828  00EE98  EF77  F077         	goto	l2452
  3829  00EE9C                     u1790:
  3830  00EE9C                     
  3831                           ; BSR set to: 0
  3832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3833  00EE9C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3834  00EEA0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3835  00EEA4  2ADE               	incf	postinc2,f,c
  3836  00EEA6  0E00               	movlw	0
  3837  00EEA8  22DD               	addwfc	postdec2,f,c
  3838                           
  3839                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3840  00EEAA  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3841  00EEAE  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3842  00EEB2  CFDF F048          	movff	indf2,??_vfpfcnvrt
  3843  00EEB6  0E02               	movlw	2
  3844  00EEB8  26DE               	addwf	postinc2,f,c
  3845  00EEBA  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  3846  00EEBE  0E00               	movlw	0
  3847  00EEC0  22DD               	addwfc	postdec2,f,c
  3848  00EEC2  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3849  00EEC6  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3850  00EECA  CFDE F0C2          	movff	postinc2,_width
  3851  00EECE  CFDD F0C3          	movff	postdec2,_width+1
  3852  00EED2                     
  3853                           ; BSR set to: 0
  3854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3855  00EED2  BFC3               	btfsc	(_width+1)& (0+255),7,b
  3856  00EED4  EF70  F077         	goto	u1800
  3857  00EED8  EF6E  F077         	goto	u1801
  3858  00EEDC                     u1801:
  3859  00EEDC  EFBB  F077         	goto	l2462
  3860  00EEE0                     u1800:
  3861  00EEE0                     
  3862                           ; BSR set to: 0
  3863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3864  00EEE0  81C6               	bsf	_flags& (0+255),0,b
  3865                           
  3866                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3867  00EEE2  6DC2               	negf	_width& (0+255),b
  3868  00EEE4  1FC3               	comf	(_width+1)& (0+255),f,b
  3869  00EEE6  B0D8               	btfsc	status,0,c
  3870  00EEE8  2BC3               	incf	(_width+1)& (0+255),f,b
  3871  00EEEA  EFBB  F077         	goto	l2462
  3872  00EEEE                     l2452:
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3876  00EEEE  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3877  00EEF2  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3878  00EEF6  CFDE F008          	movff	postinc2,atoi@s
  3879  00EEFA  CFDD F009          	movff	postdec2,atoi@s+1
  3880  00EEFE  ECD7  F073         	call	_atoi	;wreg free
  3881  00EF02  C008  F0C2         	movff	?_atoi,_width
  3882  00EF06  C009  F0C3         	movff	?_atoi+1,_width+1
  3883                           
  3884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3885  00EF0A  EF8E  F077         	goto	l2456
  3886  00EF0E                     l2454:
  3887                           
  3888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3889  00EF0E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3890  00EF12  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3891  00EF16  2ADE               	incf	postinc2,f,c
  3892  00EF18  0E00               	movlw	0
  3893  00EF1A  22DD               	addwfc	postdec2,f,c
  3894  00EF1C                     l2456:
  3895  00EF1C  0ED0               	movlw	208
  3896  00EF1E  6E48               	movwf	??_vfpfcnvrt^0,c
  3897  00EF20  0EFF               	movlw	255
  3898  00EF22  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  3899  00EF24  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3900  00EF28  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3901  00EF2C  CFDE FFF6          	movff	postinc2,tblptrl
  3902  00EF30  CFDD FFF7          	movff	postdec2,tblptrh
  3903  00EF34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3904  00EF34  6AF8               	clrf	tblptru,c
  3905  00EF36                     	endif
  3906  00EF36                     	if	0	;tblptru may be non-zero
  3907  00EF36                     	endif
  3908  00EF36  0008               	tblrd		*
  3909  00EF38  50F5               	movf	tablat,w,c
  3910  00EF3A  6E4A               	movwf	(??_vfpfcnvrt+2)^0,c
  3911  00EF3C  6A4B               	clrf	(??_vfpfcnvrt+3)^0,c
  3912  00EF3E  5048               	movf	??_vfpfcnvrt^0,w,c
  3913  00EF40  264A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3914  00EF42  5049               	movf	(??_vfpfcnvrt+1)^0,w,c
  3915  00EF44  224B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3916  00EF46  504B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3917  00EF48  E10A               	bnz	u1810
  3918  00EF4A  0E0A               	movlw	10
  3919  00EF4C  5C4A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3920  00EF4E  A0D8               	btfss	status,0,c
  3921  00EF50  EFAC  F077         	goto	u1811
  3922  00EF54  EFAF  F077         	goto	u1810
  3923  00EF58                     u1811:
  3924  00EF58  0E01               	movlw	1
  3925  00EF5A  EFB0  F077         	goto	u1820
  3926  00EF5E                     u1810:
  3927  00EF5E  0E00               	movlw	0
  3928  00EF60                     u1820:
  3929  00EF60  6E5C               	movwf	_vfpfcnvrt$1057^0,c
  3930  00EF62  6A5D               	clrf	(_vfpfcnvrt$1057+1)^0,c
  3931  00EF64  505C               	movf	_vfpfcnvrt$1057^0,w,c
  3932  00EF66  105D               	iorwf	(_vfpfcnvrt$1057+1)^0,w,c
  3933  00EF68  A4D8               	btfss	status,2,c
  3934  00EF6A  EFB9  F077         	goto	u1831
  3935  00EF6E  EFBB  F077         	goto	u1830
  3936  00EF72                     u1831:
  3937  00EF72  EF87  F077         	goto	l2454
  3938  00EF76                     u1830:
  3939  00EF76                     l2462:
  3940                           
  3941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  3942  00EF76  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3943  00EF7A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3944  00EF7E  CFDE FFF6          	movff	postinc2,tblptrl
  3945  00EF82  CFDD FFF7          	movff	postdec2,tblptrh
  3946  00EF86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3947  00EF86  6AF8               	clrf	tblptru,c
  3948  00EF88                     	endif
  3949  00EF88                     	if	0	;tblptru may be non-zero
  3950  00EF88                     	endif
  3951  00EF88  0008               	tblrd		*
  3952  00EF8A  50F5               	movf	tablat,w,c
  3953  00EF8C  0A63               	xorlw	99
  3954  00EF8E  A4D8               	btfss	status,2,c
  3955  00EF90  EFCC  F077         	goto	u1841
  3956  00EF94  EFCE  F077         	goto	u1840
  3957  00EF98                     u1841:
  3958  00EF98  EFF5  F077         	goto	l2470
  3959  00EF9C                     u1840:
  3960  00EF9C                     
  3961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  3962  00EF9C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3963  00EFA0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3964  00EFA4  2ADE               	incf	postinc2,f,c
  3965  00EFA6  0E00               	movlw	0
  3966  00EFA8  22DD               	addwfc	postdec2,f,c
  3967                           
  3968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3969  00EFAA  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3970  00EFAE  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3971  00EFB2  CFDF F048          	movff	indf2,??_vfpfcnvrt
  3972  00EFB6  0E02               	movlw	2
  3973  00EFB8  26DE               	addwf	postinc2,f,c
  3974  00EFBA  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  3975  00EFBE  0E00               	movlw	0
  3976  00EFC0  22DD               	addwfc	postdec2,f,c
  3977  00EFC2  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3978  00EFC6  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3979  00EFCA  50DF               	movf	indf2,w,c
  3980  00EFCC  6E5E               	movwf	vfpfcnvrt@c^0,c
  3981  00EFCE                     
  3982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  3983  00EFCE  C042  F01E         	movff	vfpfcnvrt@fp,ctoa@fp
  3984  00EFD2  C043  F01F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3985  00EFD6  C05E  F020         	movff	vfpfcnvrt@c,ctoa@c
  3986  00EFDA  EC74  F070         	call	_ctoa	;wreg free
  3987  00EFDE  C01E  F042         	movff	?_ctoa,?_vfpfcnvrt
  3988  00EFE2  C01F  F043         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3989  00EFE6  EF02  F079         	goto	l452
  3990  00EFEA                     l2470:
  3991                           
  3992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3993  00EFEA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3994  00EFEE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3995  00EFF2  CFDE FFF6          	movff	postinc2,tblptrl
  3996  00EFF6  CFDD FFF7          	movff	postdec2,tblptrh
  3997  00EFFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3998  00EFFA  6AF8               	clrf	tblptru,c
  3999  00EFFC                     	endif
  4000  00EFFC                     	if	0	;tblptru may be non-zero
  4001  00EFFC                     	endif
  4002  00EFFC  0008               	tblrd		*
  4003  00EFFE  50F5               	movf	tablat,w,c
  4004  00F000  0A64               	xorlw	100
  4005  00F002  B4D8               	btfsc	status,2,c
  4006  00F004  EF06  F078         	goto	u1851
  4007  00F008  EF08  F078         	goto	u1850
  4008  00F00C                     u1851:
  4009  00F00C  EF1B  F078         	goto	l2474
  4010  00F010                     u1850:
  4011  00F010  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4012  00F014  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4013  00F018  CFDE FFF6          	movff	postinc2,tblptrl
  4014  00F01C  CFDD FFF7          	movff	postdec2,tblptrh
  4015  00F020                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4016  00F020  6AF8               	clrf	tblptru,c
  4017  00F022                     	endif
  4018  00F022                     	if	0	;tblptru may be non-zero
  4019  00F022                     	endif
  4020  00F022  0008               	tblrd		*
  4021  00F024  50F5               	movf	tablat,w,c
  4022  00F026  0A69               	xorlw	105
  4023  00F028  A4D8               	btfss	status,2,c
  4024  00F02A  EF19  F078         	goto	u1861
  4025  00F02E  EF1B  F078         	goto	u1860
  4026  00F032                     u1861:
  4027  00F032  EF5B  F078         	goto	l2480
  4028  00F036                     u1860:
  4029  00F036                     l2474:
  4030                           
  4031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  4032  00F036  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4033  00F03A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4034  00F03E  2ADE               	incf	postinc2,f,c
  4035  00F040  0E00               	movlw	0
  4036  00F042  22DD               	addwfc	postdec2,f,c
  4037                           
  4038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4039  00F044  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4040  00F048  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4041  00F04C  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4042  00F050  0E02               	movlw	2
  4043  00F052  26DE               	addwf	postinc2,f,c
  4044  00F054  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4045  00F058  0E00               	movlw	0
  4046  00F05A  22DD               	addwfc	postdec2,f,c
  4047  00F05C  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4048  00F060  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4049  00F064  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  4050  00F068  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  4051  00F06C  0E00               	movlw	0
  4052  00F06E  BE4D               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4053  00F070  0EFF               	movlw	-1
  4054  00F072  6E4E               	movwf	(vfpfcnvrt@ll+2)^0,c
  4055  00F074  6E4F               	movwf	(vfpfcnvrt@ll+3)^0,c
  4056  00F076  6E50               	movwf	(vfpfcnvrt@ll+4)^0,c
  4057  00F078  6E51               	movwf	(vfpfcnvrt@ll+5)^0,c
  4058  00F07A  6E52               	movwf	(vfpfcnvrt@ll+6)^0,c
  4059  00F07C  6E53               	movwf	(vfpfcnvrt@ll+7)^0,c
  4060  00F07E                     
  4061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4062  00F07E  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  4063  00F082  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4064  00F086  C04C  F020         	movff	vfpfcnvrt@ll,dtoa@d
  4065  00F08A  C04D  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4066  00F08E  C04E  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4067  00F092  C04F  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4068  00F096  C050  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4069  00F09A  C051  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4070  00F09E  C052  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4071  00F0A2  C053  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4072  00F0A6  ECA5  F075         	call	_dtoa	;wreg free
  4073  00F0AA  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  4074  00F0AE  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4075  00F0B2  EF02  F079         	goto	l452
  4076  00F0B6                     l2480:
  4077                           
  4078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  4079  00F0B6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4080  00F0BA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4081  00F0BE  CFDE FFF6          	movff	postinc2,tblptrl
  4082  00F0C2  CFDD FFF7          	movff	postdec2,tblptrh
  4083  00F0C6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4084  00F0C6  6AF8               	clrf	tblptru,c
  4085  00F0C8                     	endif
  4086  00F0C8                     	if	0	;tblptru may be non-zero
  4087  00F0C8                     	endif
  4088  00F0C8  0008               	tblrd		*
  4089  00F0CA  50F5               	movf	tablat,w,c
  4090  00F0CC  0A75               	xorlw	117
  4091  00F0CE  A4D8               	btfss	status,2,c
  4092  00F0D0  EF6C  F078         	goto	u1871
  4093  00F0D4  EF6E  F078         	goto	u1870
  4094  00F0D8                     u1871:
  4095  00F0D8  EFAF  F078         	goto	l2488
  4096  00F0DC                     u1870:
  4097  00F0DC                     
  4098                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  4099  00F0DC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4100  00F0E0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4101  00F0E4  2ADE               	incf	postinc2,f,c
  4102  00F0E6  0E00               	movlw	0
  4103  00F0E8  22DD               	addwfc	postdec2,f,c
  4104                           
  4105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4106  00F0EA  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4107  00F0EE  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4108  00F0F2  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4109  00F0F6  0E02               	movlw	2
  4110  00F0F8  26DE               	addwf	postinc2,f,c
  4111  00F0FA  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4112  00F0FE  0E00               	movlw	0
  4113  00F100  22DD               	addwfc	postdec2,f,c
  4114  00F102  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4115  00F106  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4116  00F10A  CFDE F04A          	movff	postinc2,??_vfpfcnvrt+2
  4117  00F10E  CFDD F04B          	movff	postdec2,??_vfpfcnvrt+3
  4118  00F112  C04A  F054         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4119  00F116  C04B  F055         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4120  00F11A  6A56               	clrf	(vfpfcnvrt@llu+2)^0,c
  4121  00F11C  6A57               	clrf	(vfpfcnvrt@llu+3)^0,c
  4122  00F11E  6A58               	clrf	(vfpfcnvrt@llu+4)^0,c
  4123  00F120  6A59               	clrf	(vfpfcnvrt@llu+5)^0,c
  4124  00F122  6A5A               	clrf	(vfpfcnvrt@llu+6)^0,c
  4125  00F124  6A5B               	clrf	(vfpfcnvrt@llu+7)^0,c
  4126  00F126                     
  4127                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  4128  00F126  C042  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  4129  00F12A  C043  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4130  00F12E  C054  F020         	movff	vfpfcnvrt@llu,utoa@d
  4131  00F132  C055  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4132  00F136  C056  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4133  00F13A  C057  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4134  00F13E  C058  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4135  00F142  C059  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4136  00F146  C05A  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4137  00F14A  C05B  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4138  00F14E  ECA4  F074         	call	_utoa	;wreg free
  4139  00F152  C01E  F042         	movff	?_utoa,?_vfpfcnvrt
  4140  00F156  C01F  F043         	movff	?_utoa+1,?_vfpfcnvrt+1
  4141  00F15A  EF02  F079         	goto	l452
  4142  00F15E                     l2488:
  4143                           
  4144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4145  00F15E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4146  00F162  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4147  00F166  CFDE FFF6          	movff	postinc2,tblptrl
  4148  00F16A  CFDD FFF7          	movff	postdec2,tblptrh
  4149  00F16E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4150  00F16E  6AF8               	clrf	tblptru,c
  4151  00F170                     	endif
  4152  00F170                     	if	0	;tblptru may be non-zero
  4153  00F170                     	endif
  4154  00F170  0008               	tblrd		*
  4155  00F172  50F5               	movf	tablat,w,c
  4156  00F174  0A25               	xorlw	37
  4157  00F176  A4D8               	btfss	status,2,c
  4158  00F178  EFC0  F078         	goto	u1881
  4159  00F17C  EFC2  F078         	goto	u1880
  4160  00F180                     u1881:
  4161  00F180  EFD9  F078         	goto	l2498
  4162  00F184                     u1880:
  4163  00F184                     
  4164                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4165  00F184  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4166  00F188  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4167  00F18C  2ADE               	incf	postinc2,f,c
  4168  00F18E  0E00               	movlw	0
  4169  00F190  22DD               	addwfc	postdec2,f,c
  4170  00F192                     
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4172  00F192  0E00               	movlw	0
  4173  00F194  6E04               	movwf	(fputc@c+1)^0,c
  4174  00F196  0E25               	movlw	37
  4175  00F198  6E03               	movwf	fputc@c^0,c
  4176  00F19A  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4177  00F19E  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4178  00F1A2  ECD3  F070         	call	_fputc	;wreg free
  4179  00F1A6                     l2494:
  4180                           
  4181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4182  00F1A6  0E00               	movlw	0
  4183  00F1A8  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4184  00F1AA  0E01               	movlw	1
  4185  00F1AC  6E42               	movwf	?_vfpfcnvrt^0,c
  4186  00F1AE  EF02  F079         	goto	l452
  4187  00F1B2                     l2498:
  4188                           
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4190  00F1B2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4191  00F1B6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4192  00F1BA  2ADE               	incf	postinc2,f,c
  4193  00F1BC  0E00               	movlw	0
  4194  00F1BE  22DD               	addwfc	postdec2,f,c
  4195  00F1C0                     
  4196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4197  00F1C0  0E00               	movlw	0
  4198  00F1C2  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4199  00F1C4  0E00               	movlw	0
  4200  00F1C6  6E42               	movwf	?_vfpfcnvrt^0,c
  4201  00F1C8  EF02  F079         	goto	l452
  4202  00F1CC                     l2504:
  4203                           
  4204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4205  00F1CC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4206  00F1D0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4207  00F1D4  CFDE FFF6          	movff	postinc2,tblptrl
  4208  00F1D8  CFDD FFF7          	movff	postdec2,tblptrh
  4209  00F1DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4210  00F1DC  6AF8               	clrf	tblptru,c
  4211  00F1DE                     	endif
  4212  00F1DE                     	if	0	;tblptru may be non-zero
  4213  00F1DE                     	endif
  4214  00F1DE  0008               	tblrd		*
  4215  00F1E0  50F5               	movf	tablat,w,c
  4216  00F1E2  6E03               	movwf	fputc@c^0,c
  4217  00F1E4  6A04               	clrf	(fputc@c+1)^0,c
  4218  00F1E6  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4219  00F1EA  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4220  00F1EE  ECD3  F070         	call	_fputc	;wreg free
  4221  00F1F2                     
  4222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4223  00F1F2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4224  00F1F6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4225  00F1FA  2ADE               	incf	postinc2,f,c
  4226  00F1FC  0E00               	movlw	0
  4227  00F1FE  22DD               	addwfc	postdec2,f,c
  4228  00F200  EFD3  F078         	goto	l2494
  4229  00F204                     l452:
  4230  00F204  0012               	return		;funcret
  4231  00F206                     __end_of_vfpfcnvrt:
  4232                           	opt callstack 0
  4233                           
  4234 ;; *************** function _utoa *****************
  4235 ;; Defined at:
  4236 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4239 ;;		 -> NULL(0), 
  4240 ;;  d               8   31[COMRAM] unsigned long long 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  n               8   51[COMRAM] unsigned long long 
  4243 ;;  i               2   59[COMRAM] int 
  4244 ;;  w               2   49[COMRAM] int 
  4245 ;;  p               2   47[COMRAM] int 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  2   29[COMRAM] int 
  4248 ;; Registers used:
  4249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4255 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;Total ram usage:       32 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:    5
  4262 ;; This function calls:
  4263 ;;		___lodiv
  4264 ;;		___lomod
  4265 ;;		_pad
  4266 ;; This function is called by:
  4267 ;;		_vfpfcnvrt
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text4
  4272  00E948                     __ptext4:
  4273                           	opt callstack 0
  4274  00E948                     _utoa:
  4275                           	opt callstack 22
  4276  00E948                     
  4277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  4278  00E948  0100               	movlb	0	; () banked
  4279  00E94A  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  4280  00E94C  EFAA  F074         	goto	u1641
  4281  00E950  EFAC  F074         	goto	u1640
  4282  00E954                     u1641:
  4283  00E954  EFAD  F074         	goto	l2356
  4284  00E958                     u1640:
  4285  00E958                     
  4286                           ; BSR set to: 0
  4287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  4288  00E958  93C6               	bcf	_flags& (0+255),1,b
  4289  00E95A                     l2356:
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  4293  00E95A  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  4294  00E95C  EFBA  F074         	goto	u1650
  4295  00E960  51C5               	movf	(_prec+1)& (0+255),w,b
  4296  00E962  E106               	bnz	u1651
  4297  00E964  05C4               	decf	_prec& (0+255),w,b
  4298  00E966  B0D8               	btfsc	status,0,c
  4299  00E968  EFB8  F074         	goto	u1651
  4300  00E96C  EFBA  F074         	goto	u1650
  4301  00E970                     u1651:
  4302  00E970  EFC0  F074         	goto	l427
  4303  00E974                     u1650:
  4304  00E974                     
  4305                           ; BSR set to: 0
  4306  00E974  0E00               	movlw	0
  4307  00E976  6E31               	movwf	(utoa@p+1)^0,c
  4308  00E978  0E01               	movlw	1
  4309  00E97A  6E30               	movwf	utoa@p^0,c
  4310  00E97C  EFC4  F074         	goto	l429
  4311  00E980                     l427:
  4312                           
  4313                           ; BSR set to: 0
  4314  00E980  C0C4  F030         	movff	_prec,utoa@p
  4315  00E984  C0C5  F031         	movff	_prec+1,utoa@p+1
  4316  00E988                     l429:
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  4320  00E988  C0C2  F032         	movff	_width,utoa@w
  4321  00E98C  C0C3  F033         	movff	_width+1,utoa@w+1
  4322                           
  4323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  4324  00E990  C020  F034         	movff	utoa@d,utoa@n
  4325  00E994  C021  F035         	movff	utoa@d+1,utoa@n+1
  4326  00E998  C022  F036         	movff	utoa@d+2,utoa@n+2
  4327  00E99C  C023  F037         	movff	utoa@d+3,utoa@n+3
  4328  00E9A0  C024  F038         	movff	utoa@d+4,utoa@n+4
  4329  00E9A4  C025  F039         	movff	utoa@d+5,utoa@n+5
  4330  00E9A8  C026  F03A         	movff	utoa@d+6,utoa@n+6
  4331  00E9AC  C027  F03B         	movff	utoa@d+7,utoa@n+7
  4332  00E9B0                     
  4333                           ; BSR set to: 0
  4334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  4335  00E9B0  0E00               	movlw	0
  4336  00E9B2  6E3D               	movwf	(utoa@i+1)^0,c
  4337  00E9B4  0E1F               	movlw	31
  4338  00E9B6  6E3C               	movwf	utoa@i^0,c
  4339  00E9B8                     
  4340                           ; BSR set to: 0
  4341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  4342  00E9B8  0E00               	movlw	0
  4343  00E9BA  6FF1               	movwf	(_dbuf+31)& (0+255),b
  4344                           
  4345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4346  00E9BC  EF56  F075         	goto	l2374
  4347  00E9C0                     l2364:
  4348                           
  4349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  4350  00E9C0  063C               	decf	utoa@i^0,f,c
  4351  00E9C2  A0D8               	btfss	status,0,c
  4352  00E9C4  063D               	decf	(utoa@i+1)^0,f,c
  4353  00E9C6                     
  4354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  4355  00E9C6  0ED2               	movlw	low _dbuf
  4356  00E9C8  243C               	addwf	utoa@i^0,w,c
  4357  00E9CA  6ED9               	movwf	fsr2l,c
  4358  00E9CC  0E00               	movlw	high _dbuf
  4359  00E9CE  203D               	addwfc	(utoa@i+1)^0,w,c
  4360  00E9D0  6EDA               	movwf	fsr2h,c
  4361  00E9D2  C034  F001         	movff	utoa@n,___lomod@dividend
  4362  00E9D6  C035  F002         	movff	utoa@n+1,___lomod@dividend+1
  4363  00E9DA  C036  F003         	movff	utoa@n+2,___lomod@dividend+2
  4364  00E9DE  C037  F004         	movff	utoa@n+3,___lomod@dividend+3
  4365  00E9E2  C038  F005         	movff	utoa@n+4,___lomod@dividend+4
  4366  00E9E6  C039  F006         	movff	utoa@n+5,___lomod@dividend+5
  4367  00E9EA  C03A  F007         	movff	utoa@n+6,___lomod@dividend+6
  4368  00E9EE  C03B  F008         	movff	utoa@n+7,___lomod@dividend+7
  4369  00E9F2  0E0A               	movlw	10
  4370  00E9F4  6E09               	movwf	___lomod@divisor^0,c
  4371  00E9F6  0E00               	movlw	0
  4372  00E9F8  6E0A               	movwf	(___lomod@divisor+1)^0,c
  4373  00E9FA  0E00               	movlw	0
  4374  00E9FC  6E0B               	movwf	(___lomod@divisor+2)^0,c
  4375  00E9FE  0E00               	movlw	0
  4376  00EA00  6E0C               	movwf	(___lomod@divisor+3)^0,c
  4377  00EA02  0E00               	movlw	0
  4378  00EA04  6E0D               	movwf	(___lomod@divisor+4)^0,c
  4379  00EA06  0E00               	movlw	0
  4380  00EA08  6E0E               	movwf	(___lomod@divisor+5)^0,c
  4381  00EA0A  0E00               	movlw	0
  4382  00EA0C  6E0F               	movwf	(___lomod@divisor+6)^0,c
  4383  00EA0E  0E00               	movlw	0
  4384  00EA10  6E10               	movwf	(___lomod@divisor+7)^0,c
  4385  00EA12  EC81  F071         	call	___lomod	;wreg free
  4386  00EA16  C001  F028         	movff	?___lomod,??_utoa
  4387  00EA1A  C002  F029         	movff	?___lomod+1,??_utoa+1
  4388  00EA1E  C003  F02A         	movff	?___lomod+2,??_utoa+2
  4389  00EA22  C004  F02B         	movff	?___lomod+3,??_utoa+3
  4390  00EA26  C005  F02C         	movff	?___lomod+4,??_utoa+4
  4391  00EA2A  C006  F02D         	movff	?___lomod+5,??_utoa+5
  4392  00EA2E  C007  F02E         	movff	?___lomod+6,??_utoa+6
  4393  00EA32  C008  F02F         	movff	?___lomod+7,??_utoa+7
  4394  00EA36  5028               	movf	??_utoa^0,w,c
  4395  00EA38  0F30               	addlw	48
  4396  00EA3A  6EDF               	movwf	indf2,c
  4397  00EA3C                     
  4398                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  4399  00EA3C  0630               	decf	utoa@p^0,f,c
  4400  00EA3E  A0D8               	btfss	status,0,c
  4401  00EA40  0631               	decf	(utoa@p+1)^0,f,c
  4402  00EA42                     
  4403                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  4404  00EA42  0632               	decf	utoa@w^0,f,c
  4405  00EA44  A0D8               	btfss	status,0,c
  4406  00EA46  0633               	decf	(utoa@w+1)^0,f,c
  4407  00EA48                     
  4408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  4409  00EA48  C034  F001         	movff	utoa@n,___lodiv@dividend
  4410  00EA4C  C035  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4411  00EA50  C036  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4412  00EA54  C037  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4413  00EA58  C038  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4414  00EA5C  C039  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4415  00EA60  C03A  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4416  00EA64  C03B  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4417  00EA68  0E0A               	movlw	10
  4418  00EA6A  6E09               	movwf	___lodiv@divisor^0,c
  4419  00EA6C  0E00               	movlw	0
  4420  00EA6E  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  4421  00EA70  0E00               	movlw	0
  4422  00EA72  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  4423  00EA74  0E00               	movlw	0
  4424  00EA76  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  4425  00EA78  0E00               	movlw	0
  4426  00EA7A  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  4427  00EA7C  0E00               	movlw	0
  4428  00EA7E  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  4429  00EA80  0E00               	movlw	0
  4430  00EA82  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  4431  00EA84  0E00               	movlw	0
  4432  00EA86  6E10               	movwf	(___lodiv@divisor+7)^0,c
  4433  00EA88  ECE9  F071         	call	___lodiv	;wreg free
  4434  00EA8C  C001  F034         	movff	?___lodiv,utoa@n
  4435  00EA90  C002  F035         	movff	?___lodiv+1,utoa@n+1
  4436  00EA94  C003  F036         	movff	?___lodiv+2,utoa@n+2
  4437  00EA98  C004  F037         	movff	?___lodiv+3,utoa@n+3
  4438  00EA9C  C005  F038         	movff	?___lodiv+4,utoa@n+4
  4439  00EAA0  C006  F039         	movff	?___lodiv+5,utoa@n+5
  4440  00EAA4  C007  F03A         	movff	?___lodiv+6,utoa@n+6
  4441  00EAA8  C008  F03B         	movff	?___lodiv+7,utoa@n+7
  4442  00EAAC                     l2374:
  4443                           
  4444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4445  00EAAC  503C               	movf	utoa@i^0,w,c
  4446  00EAAE  103D               	iorwf	(utoa@i+1)^0,w,c
  4447  00EAB0  B4D8               	btfsc	status,2,c
  4448  00EAB2  EF5D  F075         	goto	u1661
  4449  00EAB6  EF5F  F075         	goto	u1660
  4450  00EABA                     u1661:
  4451  00EABA  EF90  F075         	goto	l2384
  4452  00EABE                     u1660:
  4453  00EABE  5034               	movf	utoa@n^0,w,c
  4454  00EAC0  1035               	iorwf	(utoa@n+1)^0,w,c
  4455  00EAC2  1036               	iorwf	(utoa@n+2)^0,w,c
  4456  00EAC4  1037               	iorwf	(utoa@n+3)^0,w,c
  4457  00EAC6  1038               	iorwf	(utoa@n+4)^0,w,c
  4458  00EAC8  1039               	iorwf	(utoa@n+5)^0,w,c
  4459  00EACA  103A               	iorwf	(utoa@n+6)^0,w,c
  4460  00EACC  103B               	iorwf	(utoa@n+7)^0,w,c
  4461  00EACE  A4D8               	btfss	status,2,c
  4462  00EAD0  EF6C  F075         	goto	u1671
  4463  00EAD4  EF6E  F075         	goto	u1670
  4464  00EAD8                     u1671:
  4465  00EAD8  EFE0  F074         	goto	l2364
  4466  00EADC                     u1670:
  4467  00EADC  BE31               	btfsc	(utoa@p+1)^0,7,c
  4468  00EADE  EF7B  F075         	goto	u1680
  4469  00EAE2  5031               	movf	(utoa@p+1)^0,w,c
  4470  00EAE4  E106               	bnz	u1681
  4471  00EAE6  0430               	decf	utoa@p^0,w,c
  4472  00EAE8  B0D8               	btfsc	status,0,c
  4473  00EAEA  EF79  F075         	goto	u1681
  4474  00EAEE  EF7B  F075         	goto	u1680
  4475  00EAF2                     u1681:
  4476  00EAF2  EFE0  F074         	goto	l2364
  4477  00EAF6                     u1680:
  4478  00EAF6  BE33               	btfsc	(utoa@w+1)^0,7,c
  4479  00EAF8  EF86  F075         	goto	u1691
  4480  00EAFC  5033               	movf	(utoa@w+1)^0,w,c
  4481  00EAFE  E108               	bnz	u1690
  4482  00EB00  0432               	decf	utoa@w^0,w,c
  4483  00EB02  A0D8               	btfss	status,0,c
  4484  00EB04  EF86  F075         	goto	u1691
  4485  00EB08  EF88  F075         	goto	u1690
  4486  00EB0C                     u1691:
  4487  00EB0C  EF90  F075         	goto	l2384
  4488  00EB10                     u1690:
  4489  00EB10  0100               	movlb	0	; () banked
  4490  00EB12  B3C6               	btfsc	_flags& (0+255),1,b
  4491  00EB14  EF8E  F075         	goto	u1701
  4492  00EB18  EF90  F075         	goto	u1700
  4493  00EB1C                     u1701:
  4494  00EB1C  EFE0  F074         	goto	l2364
  4495  00EB20                     u1700:
  4496  00EB20                     l2384:
  4497                           
  4498                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  4499  00EB20  C01E  F013         	movff	utoa@fp,pad@fp
  4500  00EB24  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  4501  00EB28  0ED2               	movlw	low _dbuf
  4502  00EB2A  243C               	addwf	utoa@i^0,w,c
  4503  00EB2C  6E15               	movwf	pad@buf^0,c
  4504  00EB2E  0E00               	movlw	high _dbuf
  4505  00EB30  203D               	addwfc	(utoa@i+1)^0,w,c
  4506  00EB32  6E16               	movwf	(pad@buf+1)^0,c
  4507  00EB34  C032  F017         	movff	utoa@w,pad@p
  4508  00EB38  C033  F018         	movff	utoa@w+1,pad@p+1
  4509  00EB3C  EC1E  F071         	call	_pad	;wreg free
  4510  00EB40  C013  F01E         	movff	?_pad,?_utoa
  4511  00EB44  C014  F01F         	movff	?_pad+1,?_utoa+1
  4512  00EB48  0012               	return		;funcret
  4513  00EB4A                     __end_of_utoa:
  4514                           	opt callstack 0
  4515                           
  4516 ;; *************** function ___lomod *****************
  4517 ;; Defined at:
  4518 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  dividend        8    0[COMRAM] unsigned long long 
  4521 ;;  divisor         8    8[COMRAM] unsigned long long 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  counter         1   16[COMRAM] unsigned char 
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  8    0[COMRAM] unsigned long long 
  4526 ;; Registers used:
  4527 ;;		wreg, status,2, status,0
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4533 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;Total ram usage:       17 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_utoa
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text5
  4547  00E302                     __ptext5:
  4548                           	opt callstack 0
  4549  00E302                     ___lomod:
  4550                           	opt callstack 26
  4551  00E302  5009               	movf	___lomod@divisor^0,w,c
  4552  00E304  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  4553  00E306  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  4554  00E308  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  4555  00E30A  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  4556  00E30C  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  4557  00E30E  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  4558  00E310  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  4559  00E312  B4D8               	btfsc	status,2,c
  4560  00E314  EF8E  F071         	goto	u1431
  4561  00E318  EF90  F071         	goto	u1430
  4562  00E31C                     u1431:
  4563  00E31C  EFD8  F071         	goto	l914
  4564  00E320                     u1430:
  4565  00E320  0E01               	movlw	1
  4566  00E322  6E11               	movwf	___lomod@counter^0,c
  4567  00E324  EF9E  F071         	goto	l2254
  4568  00E328                     l2252:
  4569  00E328  90D8               	bcf	status,0,c
  4570  00E32A  3609               	rlcf	___lomod@divisor^0,f,c
  4571  00E32C  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  4572  00E32E  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  4573  00E330  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  4574  00E332  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  4575  00E334  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  4576  00E336  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  4577  00E338  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  4578  00E33A  2A11               	incf	___lomod@counter^0,f,c
  4579  00E33C                     l2254:
  4580  00E33C  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  4581  00E33E  EFA3  F071         	goto	u1441
  4582  00E342  EFA5  F071         	goto	u1440
  4583  00E346                     u1441:
  4584  00E346  EF94  F071         	goto	l2252
  4585  00E34A                     u1440:
  4586  00E34A                     l2256:
  4587  00E34A  5009               	movf	___lomod@divisor^0,w,c
  4588  00E34C  5C01               	subwf	___lomod@dividend^0,w,c
  4589  00E34E  500A               	movf	(___lomod@divisor+1)^0,w,c
  4590  00E350  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  4591  00E352  500B               	movf	(___lomod@divisor+2)^0,w,c
  4592  00E354  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  4593  00E356  500C               	movf	(___lomod@divisor+3)^0,w,c
  4594  00E358  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  4595  00E35A  500D               	movf	(___lomod@divisor+4)^0,w,c
  4596  00E35C  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  4597  00E35E  500E               	movf	(___lomod@divisor+5)^0,w,c
  4598  00E360  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  4599  00E362  500F               	movf	(___lomod@divisor+6)^0,w,c
  4600  00E364  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  4601  00E366  5010               	movf	(___lomod@divisor+7)^0,w,c
  4602  00E368  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  4603  00E36A  A0D8               	btfss	status,0,c
  4604  00E36C  EFBA  F071         	goto	u1451
  4605  00E370  EFBC  F071         	goto	u1450
  4606  00E374                     u1451:
  4607  00E374  EFCC  F071         	goto	l2260
  4608  00E378                     u1450:
  4609  00E378  5009               	movf	___lomod@divisor^0,w,c
  4610  00E37A  5E01               	subwf	___lomod@dividend^0,f,c
  4611  00E37C  500A               	movf	(___lomod@divisor+1)^0,w,c
  4612  00E37E  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  4613  00E380  500B               	movf	(___lomod@divisor+2)^0,w,c
  4614  00E382  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  4615  00E384  500C               	movf	(___lomod@divisor+3)^0,w,c
  4616  00E386  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  4617  00E388  500D               	movf	(___lomod@divisor+4)^0,w,c
  4618  00E38A  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  4619  00E38C  500E               	movf	(___lomod@divisor+5)^0,w,c
  4620  00E38E  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  4621  00E390  500F               	movf	(___lomod@divisor+6)^0,w,c
  4622  00E392  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  4623  00E394  5010               	movf	(___lomod@divisor+7)^0,w,c
  4624  00E396  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  4625  00E398                     l2260:
  4626  00E398  90D8               	bcf	status,0,c
  4627  00E39A  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  4628  00E39C  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  4629  00E39E  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  4630  00E3A0  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  4631  00E3A2  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  4632  00E3A4  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  4633  00E3A6  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  4634  00E3A8  3209               	rrcf	___lomod@divisor^0,f,c
  4635  00E3AA  2E11               	decfsz	___lomod@counter^0,f,c
  4636  00E3AC  EFA5  F071         	goto	l2256
  4637  00E3B0                     l914:
  4638  00E3B0  C001  F001         	movff	___lomod@dividend,?___lomod
  4639  00E3B4  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4640  00E3B8  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4641  00E3BC  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4642  00E3C0  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4643  00E3C4  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4644  00E3C8  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4645  00E3CC  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4646  00E3D0  0012               	return		;funcret
  4647  00E3D2                     __end_of___lomod:
  4648                           	opt callstack 0
  4649                           
  4650 ;; *************** function ___lodiv *****************
  4651 ;; Defined at:
  4652 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;  dividend        8    0[COMRAM] unsigned long long 
  4655 ;;  divisor         8    8[COMRAM] unsigned long long 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  quotient        8   16[COMRAM] unsigned long long 
  4658 ;;  counter         1   24[COMRAM] unsigned char 
  4659 ;; Return value:  Size  Location     Type
  4660 ;;                  8    0[COMRAM] unsigned long long 
  4661 ;; Registers used:
  4662 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4663 ;; Tracked objects:
  4664 ;;		On entry : 0/0
  4665 ;;		On exit  : 0/0
  4666 ;;		Unchanged: 0/0
  4667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4668 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4669 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4672 ;;Total ram usage:       25 bytes
  4673 ;; Hardware stack levels used:    1
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_utoa
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text6
  4682  00E3D2                     __ptext6:
  4683                           	opt callstack 0
  4684  00E3D2                     ___lodiv:
  4685                           	opt callstack 26
  4686  00E3D2  EE20  F011         	lfsr	2,___lodiv@quotient
  4687  00E3D6  0E07               	movlw	7
  4688  00E3D8                     u1391:
  4689  00E3D8  6ADE               	clrf	postinc2,c
  4690  00E3DA  06E8               	decf	wreg,f,c
  4691  00E3DC  E2FD               	bc	u1391
  4692  00E3DE  5009               	movf	___lodiv@divisor^0,w,c
  4693  00E3E0  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  4694  00E3E2  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  4695  00E3E4  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  4696  00E3E6  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  4697  00E3E8  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  4698  00E3EA  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  4699  00E3EC  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  4700  00E3EE  B4D8               	btfsc	status,2,c
  4701  00E3F0  EFFC  F071         	goto	u1401
  4702  00E3F4  EFFE  F071         	goto	u1400
  4703  00E3F8                     u1401:
  4704  00E3F8  EF50  F072         	goto	l904
  4705  00E3FC                     u1400:
  4706  00E3FC  0E01               	movlw	1
  4707  00E3FE  6E19               	movwf	___lodiv@counter^0,c
  4708  00E400  EF0C  F072         	goto	l2234
  4709  00E404                     l2232:
  4710  00E404  90D8               	bcf	status,0,c
  4711  00E406  3609               	rlcf	___lodiv@divisor^0,f,c
  4712  00E408  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  4713  00E40A  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  4714  00E40C  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  4715  00E40E  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  4716  00E410  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  4717  00E412  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  4718  00E414  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  4719  00E416  2A19               	incf	___lodiv@counter^0,f,c
  4720  00E418                     l2234:
  4721  00E418  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  4722  00E41A  EF11  F072         	goto	u1411
  4723  00E41E  EF13  F072         	goto	u1410
  4724  00E422                     u1411:
  4725  00E422  EF02  F072         	goto	l2232
  4726  00E426                     u1410:
  4727  00E426                     l2236:
  4728  00E426  90D8               	bcf	status,0,c
  4729  00E428  3611               	rlcf	___lodiv@quotient^0,f,c
  4730  00E42A  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  4731  00E42C  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  4732  00E42E  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  4733  00E430  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  4734  00E432  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  4735  00E434  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  4736  00E436  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  4737  00E438  5009               	movf	___lodiv@divisor^0,w,c
  4738  00E43A  5C01               	subwf	___lodiv@dividend^0,w,c
  4739  00E43C  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4740  00E43E  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  4741  00E440  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4742  00E442  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  4743  00E444  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4744  00E446  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  4745  00E448  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4746  00E44A  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  4747  00E44C  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4748  00E44E  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  4749  00E450  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4750  00E452  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  4751  00E454  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4752  00E456  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  4753  00E458  A0D8               	btfss	status,0,c
  4754  00E45A  EF31  F072         	goto	u1421
  4755  00E45E  EF33  F072         	goto	u1420
  4756  00E462                     u1421:
  4757  00E462  EF44  F072         	goto	l2244
  4758  00E466                     u1420:
  4759  00E466  5009               	movf	___lodiv@divisor^0,w,c
  4760  00E468  5E01               	subwf	___lodiv@dividend^0,f,c
  4761  00E46A  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4762  00E46C  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  4763  00E46E  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4764  00E470  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  4765  00E472  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4766  00E474  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  4767  00E476  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4768  00E478  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  4769  00E47A  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4770  00E47C  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  4771  00E47E  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4772  00E480  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  4773  00E482  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4774  00E484  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  4775  00E486  8011               	bsf	___lodiv@quotient^0,0,c
  4776  00E488                     l2244:
  4777  00E488  90D8               	bcf	status,0,c
  4778  00E48A  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  4779  00E48C  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  4780  00E48E  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  4781  00E490  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  4782  00E492  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  4783  00E494  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  4784  00E496  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  4785  00E498  3209               	rrcf	___lodiv@divisor^0,f,c
  4786  00E49A  2E19               	decfsz	___lodiv@counter^0,f,c
  4787  00E49C  EF13  F072         	goto	l2236
  4788  00E4A0                     l904:
  4789  00E4A0  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4790  00E4A4  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4791  00E4A8  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4792  00E4AC  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4793  00E4B0  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4794  00E4B4  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4795  00E4B8  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4796  00E4BC  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4797  00E4C0  0012               	return		;funcret
  4798  00E4C2                     __end_of___lodiv:
  4799                           	opt callstack 0
  4800                           
  4801 ;; *************** function _dtoa *****************
  4802 ;; Defined at:
  4803 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4806 ;;		 -> NULL(0), 
  4807 ;;  d               8   31[COMRAM] long long 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  n               8   55[COMRAM] long long 
  4810 ;;  i               2   63[COMRAM] int 
  4811 ;;  s               2   53[COMRAM] int 
  4812 ;;  w               2   51[COMRAM] int 
  4813 ;;  p               2   49[COMRAM] int 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  2   29[COMRAM] int 
  4816 ;; Registers used:
  4817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4823 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4827 ;;Total ram usage:       36 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    5
  4830 ;; This function calls:
  4831 ;;		___aodiv
  4832 ;;		___aomod
  4833 ;;		_abs
  4834 ;;		_pad
  4835 ;; This function is called by:
  4836 ;;		_vfpfcnvrt
  4837 ;; This function uses a non-reentrant model
  4838 ;;
  4839                           
  4840                           	psect	text7
  4841  00EB4A                     __ptext7:
  4842                           	opt callstack 0
  4843  00EB4A                     _dtoa:
  4844                           	opt callstack 22
  4845  00EB4A                     
  4846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4847  00EB4A  C020  F038         	movff	dtoa@d,dtoa@n
  4848  00EB4E  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  4849  00EB52  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  4850  00EB56  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  4851  00EB5A  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  4852  00EB5E  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  4853  00EB62  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  4854  00EB66  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  4855  00EB6A                     
  4856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4857  00EB6A  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  4858  00EB6C  EFBA  F075         	goto	u1491
  4859  00EB70  EFBD  F075         	goto	u1490
  4860  00EB74                     u1491:
  4861  00EB74  0E01               	movlw	1
  4862  00EB76  EFBE  F075         	goto	u1500
  4863  00EB7A                     u1490:
  4864  00EB7A  0E00               	movlw	0
  4865  00EB7C                     u1500:
  4866  00EB7C  6E36               	movwf	dtoa@s^0,c
  4867  00EB7E  6A37               	clrf	(dtoa@s+1)^0,c
  4868                           
  4869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4870  00EB80  5036               	movf	dtoa@s^0,w,c
  4871  00EB82  1037               	iorwf	(dtoa@s+1)^0,w,c
  4872  00EB84  B4D8               	btfsc	status,2,c
  4873  00EB86  EFC7  F075         	goto	u1511
  4874  00EB8A  EFC9  F075         	goto	u1510
  4875  00EB8E                     u1511:
  4876  00EB8E  EFD9  F075         	goto	l2296
  4877  00EB92                     u1510:
  4878  00EB92                     
  4879                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4880  00EB92  1E3F               	comf	(dtoa@n+7)^0,f,c
  4881  00EB94  1E3E               	comf	(dtoa@n+6)^0,f,c
  4882  00EB96  1E3D               	comf	(dtoa@n+5)^0,f,c
  4883  00EB98  1E3C               	comf	(dtoa@n+4)^0,f,c
  4884  00EB9A  1E3B               	comf	(dtoa@n+3)^0,f,c
  4885  00EB9C  1E3A               	comf	(dtoa@n+2)^0,f,c
  4886  00EB9E  1E39               	comf	(dtoa@n+1)^0,f,c
  4887  00EBA0  6C38               	negf	dtoa@n^0,c
  4888  00EBA2  0E00               	movlw	0
  4889  00EBA4  2239               	addwfc	(dtoa@n+1)^0,f,c
  4890  00EBA6  223A               	addwfc	(dtoa@n+2)^0,f,c
  4891  00EBA8  223B               	addwfc	(dtoa@n+3)^0,f,c
  4892  00EBAA  223C               	addwfc	(dtoa@n+4)^0,f,c
  4893  00EBAC  223D               	addwfc	(dtoa@n+5)^0,f,c
  4894  00EBAE  223E               	addwfc	(dtoa@n+6)^0,f,c
  4895  00EBB0  223F               	addwfc	(dtoa@n+7)^0,f,c
  4896  00EBB2                     l2296:
  4897                           
  4898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4899  00EBB2  0100               	movlb	0	; () banked
  4900  00EBB4  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  4901  00EBB6  EFDF  F075         	goto	u1521
  4902  00EBBA  EFE1  F075         	goto	u1520
  4903  00EBBE                     u1521:
  4904  00EBBE  EFE2  F075         	goto	l2300
  4905  00EBC2                     u1520:
  4906  00EBC2                     
  4907                           ; BSR set to: 0
  4908                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4909  00EBC2  93C6               	bcf	_flags& (0+255),1,b
  4910  00EBC4                     l2300:
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4914  00EBC4  BFC5               	btfsc	(_prec+1)& (0+255),7,b
  4915  00EBC6  EFEF  F075         	goto	u1530
  4916  00EBCA  51C5               	movf	(_prec+1)& (0+255),w,b
  4917  00EBCC  E106               	bnz	u1531
  4918  00EBCE  05C4               	decf	_prec& (0+255),w,b
  4919  00EBD0  B0D8               	btfsc	status,0,c
  4920  00EBD2  EFED  F075         	goto	u1531
  4921  00EBD6  EFEF  F075         	goto	u1530
  4922  00EBDA                     u1531:
  4923  00EBDA  EFF5  F075         	goto	l402
  4924  00EBDE                     u1530:
  4925  00EBDE                     
  4926                           ; BSR set to: 0
  4927  00EBDE  0E00               	movlw	0
  4928  00EBE0  6E33               	movwf	(dtoa@p+1)^0,c
  4929  00EBE2  0E01               	movlw	1
  4930  00EBE4  6E32               	movwf	dtoa@p^0,c
  4931  00EBE6  EFF9  F075         	goto	l404
  4932  00EBEA                     l402:
  4933                           
  4934                           ; BSR set to: 0
  4935  00EBEA  C0C4  F032         	movff	_prec,dtoa@p
  4936  00EBEE  C0C5  F033         	movff	_prec+1,dtoa@p+1
  4937  00EBF2                     l404:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4941  00EBF2  C0C2  F034         	movff	_width,dtoa@w
  4942  00EBF6  C0C3  F035         	movff	_width+1,dtoa@w+1
  4943  00EBFA                     
  4944                           ; BSR set to: 0
  4945                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4946  00EBFA  5036               	movf	dtoa@s^0,w,c
  4947  00EBFC  1037               	iorwf	(dtoa@s+1)^0,w,c
  4948  00EBFE  A4D8               	btfss	status,2,c
  4949  00EC00  EF04  F076         	goto	u1541
  4950  00EC04  EF06  F076         	goto	u1540
  4951  00EC08                     u1541:
  4952  00EC08  EF0D  F076         	goto	l2308
  4953  00EC0C                     u1540:
  4954  00EC0C                     
  4955                           ; BSR set to: 0
  4956  00EC0C  A5C6               	btfss	_flags& (0+255),2,b
  4957  00EC0E  EF0B  F076         	goto	u1551
  4958  00EC12  EF0D  F076         	goto	u1550
  4959  00EC16                     u1551:
  4960  00EC16  EF10  F076         	goto	l2310
  4961  00EC1A                     u1550:
  4962  00EC1A                     l2308:
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4966  00EC1A  0634               	decf	dtoa@w^0,f,c
  4967  00EC1C  A0D8               	btfss	status,0,c
  4968  00EC1E  0635               	decf	(dtoa@w+1)^0,f,c
  4969  00EC20                     l2310:
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4973  00EC20  0E00               	movlw	0
  4974  00EC22  6E41               	movwf	(dtoa@i+1)^0,c
  4975  00EC24  0E1F               	movlw	31
  4976  00EC26  6E40               	movwf	dtoa@i^0,c
  4977  00EC28                     
  4978                           ; BSR set to: 0
  4979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4980  00EC28  0E00               	movlw	0
  4981  00EC2A  6FF1               	movwf	(_dbuf+31)& (0+255),b
  4982                           
  4983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4984  00EC2C  EF94  F076         	goto	l2324
  4985  00EC30                     l2314:
  4986                           
  4987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4988  00EC30  0640               	decf	dtoa@i^0,f,c
  4989  00EC32  A0D8               	btfss	status,0,c
  4990  00EC34  0641               	decf	(dtoa@i+1)^0,f,c
  4991  00EC36                     
  4992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4993  00EC36  0ED2               	movlw	low _dbuf
  4994  00EC38  2440               	addwf	dtoa@i^0,w,c
  4995  00EC3A  6ED9               	movwf	fsr2l,c
  4996  00EC3C  0E00               	movlw	high _dbuf
  4997  00EC3E  2041               	addwfc	(dtoa@i+1)^0,w,c
  4998  00EC40  6EDA               	movwf	fsr2h,c
  4999  00EC42  C038  F001         	movff	dtoa@n,___aomod@dividend
  5000  00EC46  C039  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5001  00EC4A  C03A  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5002  00EC4E  C03B  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5003  00EC52  C03C  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5004  00EC56  C03D  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5005  00EC5A  C03E  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5006  00EC5E  C03F  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5007  00EC62  0E0A               	movlw	10
  5008  00EC64  6E09               	movwf	___aomod@divisor^0,c
  5009  00EC66  0E00               	movlw	0
  5010  00EC68  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5011  00EC6A  0E00               	movlw	0
  5012  00EC6C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5013  00EC6E  0E00               	movlw	0
  5014  00EC70  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5015  00EC72  0E00               	movlw	0
  5016  00EC74  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5017  00EC76  0E00               	movlw	0
  5018  00EC78  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5019  00EC7A  0E00               	movlw	0
  5020  00EC7C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5021  00EC7E  0E00               	movlw	0
  5022  00EC80  6E10               	movwf	(___aomod@divisor+7)^0,c
  5023  00EC82  EC61  F072         	call	___aomod	;wreg free
  5024  00EC86  C001  F028         	movff	?___aomod,??_dtoa
  5025  00EC8A  C002  F029         	movff	?___aomod+1,??_dtoa+1
  5026  00EC8E  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  5027  00EC92  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  5028  00EC96  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  5029  00EC9A  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  5030  00EC9E  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  5031  00ECA2  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  5032  00ECA6  C028  F013         	movff	??_dtoa,abs@a
  5033  00ECAA  C02A  F014         	movff	??_dtoa+2,abs@a+1
  5034  00ECAE  EC09  F070         	call	_abs	;wreg free
  5035  00ECB2  5013               	movf	?_abs^0,w,c
  5036  00ECB4  0F30               	addlw	48
  5037  00ECB6  6EDF               	movwf	indf2,c
  5038  00ECB8                     
  5039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  5040  00ECB8  0632               	decf	dtoa@p^0,f,c
  5041  00ECBA  A0D8               	btfss	status,0,c
  5042  00ECBC  0633               	decf	(dtoa@p+1)^0,f,c
  5043  00ECBE                     
  5044                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  5045  00ECBE  0634               	decf	dtoa@w^0,f,c
  5046  00ECC0  A0D8               	btfss	status,0,c
  5047  00ECC2  0635               	decf	(dtoa@w+1)^0,f,c
  5048  00ECC4                     
  5049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  5050  00ECC4  C038  F001         	movff	dtoa@n,___aodiv@dividend
  5051  00ECC8  C039  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5052  00ECCC  C03A  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5053  00ECD0  C03B  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5054  00ECD4  C03C  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5055  00ECD8  C03D  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5056  00ECDC  C03E  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5057  00ECE0  C03F  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5058  00ECE4  0E0A               	movlw	10
  5059  00ECE6  6E09               	movwf	___aodiv@divisor^0,c
  5060  00ECE8  0E00               	movlw	0
  5061  00ECEA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5062  00ECEC  0E00               	movlw	0
  5063  00ECEE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5064  00ECF0  0E00               	movlw	0
  5065  00ECF2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5066  00ECF4  0E00               	movlw	0
  5067  00ECF6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5068  00ECF8  0E00               	movlw	0
  5069  00ECFA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5070  00ECFC  0E00               	movlw	0
  5071  00ECFE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5072  00ED00  0E00               	movlw	0
  5073  00ED02  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5074  00ED04  EC13  F073         	call	___aodiv	;wreg free
  5075  00ED08  C001  F038         	movff	?___aodiv,dtoa@n
  5076  00ED0C  C002  F039         	movff	?___aodiv+1,dtoa@n+1
  5077  00ED10  C003  F03A         	movff	?___aodiv+2,dtoa@n+2
  5078  00ED14  C004  F03B         	movff	?___aodiv+3,dtoa@n+3
  5079  00ED18  C005  F03C         	movff	?___aodiv+4,dtoa@n+4
  5080  00ED1C  C006  F03D         	movff	?___aodiv+5,dtoa@n+5
  5081  00ED20  C007  F03E         	movff	?___aodiv+6,dtoa@n+6
  5082  00ED24  C008  F03F         	movff	?___aodiv+7,dtoa@n+7
  5083  00ED28                     l2324:
  5084                           
  5085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5086  00ED28  BE41               	btfsc	(dtoa@i+1)^0,7,c
  5087  00ED2A  EF9F  F076         	goto	u1561
  5088  00ED2E  5041               	movf	(dtoa@i+1)^0,w,c
  5089  00ED30  E108               	bnz	u1560
  5090  00ED32  0440               	decf	dtoa@i^0,w,c
  5091  00ED34  A0D8               	btfss	status,0,c
  5092  00ED36  EF9F  F076         	goto	u1561
  5093  00ED3A  EFA1  F076         	goto	u1560
  5094  00ED3E                     u1561:
  5095  00ED3E  EFD2  F076         	goto	l2334
  5096  00ED42                     u1560:
  5097  00ED42  5038               	movf	dtoa@n^0,w,c
  5098  00ED44  1039               	iorwf	(dtoa@n+1)^0,w,c
  5099  00ED46  103A               	iorwf	(dtoa@n+2)^0,w,c
  5100  00ED48  103B               	iorwf	(dtoa@n+3)^0,w,c
  5101  00ED4A  103C               	iorwf	(dtoa@n+4)^0,w,c
  5102  00ED4C  103D               	iorwf	(dtoa@n+5)^0,w,c
  5103  00ED4E  103E               	iorwf	(dtoa@n+6)^0,w,c
  5104  00ED50  103F               	iorwf	(dtoa@n+7)^0,w,c
  5105  00ED52  A4D8               	btfss	status,2,c
  5106  00ED54  EFAE  F076         	goto	u1571
  5107  00ED58  EFB0  F076         	goto	u1570
  5108  00ED5C                     u1571:
  5109  00ED5C  EF18  F076         	goto	l2314
  5110  00ED60                     u1570:
  5111  00ED60  BE33               	btfsc	(dtoa@p+1)^0,7,c
  5112  00ED62  EFBD  F076         	goto	u1580
  5113  00ED66  5033               	movf	(dtoa@p+1)^0,w,c
  5114  00ED68  E106               	bnz	u1581
  5115  00ED6A  0432               	decf	dtoa@p^0,w,c
  5116  00ED6C  B0D8               	btfsc	status,0,c
  5117  00ED6E  EFBB  F076         	goto	u1581
  5118  00ED72  EFBD  F076         	goto	u1580
  5119  00ED76                     u1581:
  5120  00ED76  EF18  F076         	goto	l2314
  5121  00ED7A                     u1580:
  5122  00ED7A  BE35               	btfsc	(dtoa@w+1)^0,7,c
  5123  00ED7C  EFC8  F076         	goto	u1591
  5124  00ED80  5035               	movf	(dtoa@w+1)^0,w,c
  5125  00ED82  E108               	bnz	u1590
  5126  00ED84  0434               	decf	dtoa@w^0,w,c
  5127  00ED86  A0D8               	btfss	status,0,c
  5128  00ED88  EFC8  F076         	goto	u1591
  5129  00ED8C  EFCA  F076         	goto	u1590
  5130  00ED90                     u1591:
  5131  00ED90  EFD2  F076         	goto	l2334
  5132  00ED94                     u1590:
  5133  00ED94  0100               	movlb	0	; () banked
  5134  00ED96  B3C6               	btfsc	_flags& (0+255),1,b
  5135  00ED98  EFD0  F076         	goto	u1601
  5136  00ED9C  EFD2  F076         	goto	u1600
  5137  00EDA0                     u1601:
  5138  00EDA0  EF18  F076         	goto	l2314
  5139  00EDA4                     u1600:
  5140  00EDA4                     l2334:
  5141                           
  5142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5143  00EDA4  5036               	movf	dtoa@s^0,w,c
  5144  00EDA6  1037               	iorwf	(dtoa@s+1)^0,w,c
  5145  00EDA8  A4D8               	btfss	status,2,c
  5146  00EDAA  EFD9  F076         	goto	u1611
  5147  00EDAE  EFDB  F076         	goto	u1610
  5148  00EDB2                     u1611:
  5149  00EDB2  EFE3  F076         	goto	l2338
  5150  00EDB6                     u1610:
  5151  00EDB6  0100               	movlb	0	; () banked
  5152  00EDB8  A5C6               	btfss	_flags& (0+255),2,b
  5153  00EDBA  EFE1  F076         	goto	u1621
  5154  00EDBE  EFE3  F076         	goto	u1620
  5155  00EDC2                     u1621:
  5156  00EDC2  EF01  F077         	goto	l2348
  5157  00EDC6                     u1620:
  5158  00EDC6                     l2338:
  5159                           
  5160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5161  00EDC6  0640               	decf	dtoa@i^0,f,c
  5162  00EDC8  A0D8               	btfss	status,0,c
  5163  00EDCA  0641               	decf	(dtoa@i+1)^0,f,c
  5164  00EDCC                     
  5165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5166  00EDCC  5036               	movf	dtoa@s^0,w,c
  5167  00EDCE  1037               	iorwf	(dtoa@s+1)^0,w,c
  5168  00EDD0  A4D8               	btfss	status,2,c
  5169  00EDD2  EFED  F076         	goto	u1631
  5170  00EDD6  EFEF  F076         	goto	u1630
  5171  00EDDA                     u1631:
  5172  00EDDA  EFF5  F076         	goto	l2344
  5173  00EDDE                     u1630:
  5174  00EDDE  0E00               	movlw	0
  5175  00EDE0  6E31               	movwf	(_dtoa$1036+1)^0,c
  5176  00EDE2  0E2B               	movlw	43
  5177  00EDE4  6E30               	movwf	_dtoa$1036^0,c
  5178  00EDE6  EFF9  F076         	goto	l2346
  5179  00EDEA                     l2344:
  5180  00EDEA  0E00               	movlw	0
  5181  00EDEC  6E31               	movwf	(_dtoa$1036+1)^0,c
  5182  00EDEE  0E2D               	movlw	45
  5183  00EDF0  6E30               	movwf	_dtoa$1036^0,c
  5184  00EDF2                     l2346:
  5185  00EDF2  0ED2               	movlw	low _dbuf
  5186  00EDF4  2440               	addwf	dtoa@i^0,w,c
  5187  00EDF6  6ED9               	movwf	fsr2l,c
  5188  00EDF8  0E00               	movlw	high _dbuf
  5189  00EDFA  2041               	addwfc	(dtoa@i+1)^0,w,c
  5190  00EDFC  6EDA               	movwf	fsr2h,c
  5191  00EDFE  C030  FFDF         	movff	_dtoa$1036,indf2
  5192  00EE02                     l2348:
  5193                           
  5194                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5195  00EE02  C01E  F013         	movff	dtoa@fp,pad@fp
  5196  00EE06  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  5197  00EE0A  0ED2               	movlw	low _dbuf
  5198  00EE0C  2440               	addwf	dtoa@i^0,w,c
  5199  00EE0E  6E15               	movwf	pad@buf^0,c
  5200  00EE10  0E00               	movlw	high _dbuf
  5201  00EE12  2041               	addwfc	(dtoa@i+1)^0,w,c
  5202  00EE14  6E16               	movwf	(pad@buf+1)^0,c
  5203  00EE16  C034  F017         	movff	dtoa@w,pad@p
  5204  00EE1A  C035  F018         	movff	dtoa@w+1,pad@p+1
  5205  00EE1E  EC1E  F071         	call	_pad	;wreg free
  5206  00EE22  C013  F01E         	movff	?_pad,?_dtoa
  5207  00EE26  C014  F01F         	movff	?_pad+1,?_dtoa+1
  5208  00EE2A  0012               	return		;funcret
  5209  00EE2C                     __end_of_dtoa:
  5210                           	opt callstack 0
  5211                           
  5212 ;; *************** function _abs *****************
  5213 ;; Defined at:
  5214 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  a               2   18[COMRAM] int 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  2   18[COMRAM] int 
  5221 ;; Registers used:
  5222 ;;		wreg, status,2, status,0
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;Total ram usage:        4 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_dtoa
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text8
  5242  00E012                     __ptext8:
  5243                           	opt callstack 0
  5244  00E012                     _abs:
  5245                           	opt callstack 26
  5246  00E012  BE14               	btfsc	(abs@a+1)^0,7,c
  5247  00E014  EF16  F070         	goto	u1230
  5248  00E018  5014               	movf	(abs@a+1)^0,w,c
  5249  00E01A  E106               	bnz	u1231
  5250  00E01C  0413               	decf	abs@a^0,w,c
  5251  00E01E  B0D8               	btfsc	status,0,c
  5252  00E020  EF14  F070         	goto	u1231
  5253  00E024  EF16  F070         	goto	u1230
  5254  00E028                     u1231:
  5255  00E028  EF24  F070         	goto	l1141
  5256  00E02C                     u1230:
  5257  00E02C  C013  F015         	movff	abs@a,??_abs
  5258  00E030  C014  F016         	movff	abs@a+1,??_abs+1
  5259  00E034  1E15               	comf	??_abs^0,f,c
  5260  00E036  1E16               	comf	(??_abs+1)^0,f,c
  5261  00E038  4A15               	infsnz	??_abs^0,f,c
  5262  00E03A  2A16               	incf	(??_abs+1)^0,f,c
  5263  00E03C  C015  F013         	movff	??_abs,?_abs
  5264  00E040  C016  F014         	movff	??_abs+1,?_abs+1
  5265  00E044  EF28  F070         	goto	l1144
  5266  00E048                     l1141:
  5267  00E048  C013  F013         	movff	abs@a,?_abs
  5268  00E04C  C014  F014         	movff	abs@a+1,?_abs+1
  5269  00E050                     l1144:
  5270  00E050  0012               	return		;funcret
  5271  00E052                     __end_of_abs:
  5272                           	opt callstack 0
  5273                           
  5274 ;; *************** function ___aomod *****************
  5275 ;; Defined at:
  5276 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  dividend        8    0[COMRAM] long long 
  5279 ;;  divisor         8    8[COMRAM] long long 
  5280 ;; Auto vars:     Size  Location     Type
  5281 ;;  sign            1   17[COMRAM] unsigned char 
  5282 ;;  counter         1   16[COMRAM] unsigned char 
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  8    0[COMRAM] long long 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2, status,0
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5292 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5295 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5296 ;;Total ram usage:       18 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_dtoa
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           	psect	text9
  5306  00E4C2                     __ptext9:
  5307                           	opt callstack 0
  5308  00E4C2                     ___aomod:
  5309                           	opt callstack 26
  5310  00E4C2  0E00               	movlw	0
  5311  00E4C4  6E12               	movwf	___aomod@sign^0,c
  5312  00E4C6  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5313  00E4C8  EF6A  F072         	goto	u1330
  5314  00E4CC  EF68  F072         	goto	u1331
  5315  00E4D0                     u1331:
  5316  00E4D0  EF7C  F072         	goto	l2198
  5317  00E4D4                     u1330:
  5318  00E4D4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5319  00E4D6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5320  00E4D8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5321  00E4DA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5322  00E4DC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5323  00E4DE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5324  00E4E0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5325  00E4E2  6C01               	negf	___aomod@dividend^0,c
  5326  00E4E4  0E00               	movlw	0
  5327  00E4E6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5328  00E4E8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5329  00E4EA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5330  00E4EC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5331  00E4EE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5332  00E4F0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5333  00E4F2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5334  00E4F4  0E01               	movlw	1
  5335  00E4F6  6E12               	movwf	___aomod@sign^0,c
  5336  00E4F8                     l2198:
  5337  00E4F8  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5338  00E4FA  EF83  F072         	goto	u1340
  5339  00E4FE  EF81  F072         	goto	u1341
  5340  00E502                     u1341:
  5341  00E502  EF93  F072         	goto	l2202
  5342  00E506                     u1340:
  5343  00E506  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5344  00E508  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5345  00E50A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5346  00E50C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5347  00E50E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5348  00E510  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5349  00E512  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5350  00E514  6C09               	negf	___aomod@divisor^0,c
  5351  00E516  0E00               	movlw	0
  5352  00E518  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5353  00E51A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5354  00E51C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5355  00E51E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5356  00E520  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5357  00E522  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5358  00E524  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5359  00E526                     l2202:
  5360  00E526  5009               	movf	___aomod@divisor^0,w,c
  5361  00E528  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5362  00E52A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5363  00E52C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5364  00E52E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5365  00E530  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5366  00E532  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5367  00E534  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5368  00E536  B4D8               	btfsc	status,2,c
  5369  00E538  EFA0  F072         	goto	u1351
  5370  00E53C  EFA2  F072         	goto	u1350
  5371  00E540                     u1351:
  5372  00E540  EFEA  F072         	goto	l2218
  5373  00E544                     u1350:
  5374  00E544  0E01               	movlw	1
  5375  00E546  6E11               	movwf	___aomod@counter^0,c
  5376  00E548  EFB0  F072         	goto	l2208
  5377  00E54C                     l2206:
  5378  00E54C  90D8               	bcf	status,0,c
  5379  00E54E  3609               	rlcf	___aomod@divisor^0,f,c
  5380  00E550  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5381  00E552  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5382  00E554  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5383  00E556  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5384  00E558  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5385  00E55A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5386  00E55C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5387  00E55E  2A11               	incf	___aomod@counter^0,f,c
  5388  00E560                     l2208:
  5389  00E560  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5390  00E562  EFB5  F072         	goto	u1361
  5391  00E566  EFB7  F072         	goto	u1360
  5392  00E56A                     u1361:
  5393  00E56A  EFA6  F072         	goto	l2206
  5394  00E56E                     u1360:
  5395  00E56E                     l2210:
  5396  00E56E  5009               	movf	___aomod@divisor^0,w,c
  5397  00E570  5C01               	subwf	___aomod@dividend^0,w,c
  5398  00E572  500A               	movf	(___aomod@divisor+1)^0,w,c
  5399  00E574  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5400  00E576  500B               	movf	(___aomod@divisor+2)^0,w,c
  5401  00E578  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5402  00E57A  500C               	movf	(___aomod@divisor+3)^0,w,c
  5403  00E57C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5404  00E57E  500D               	movf	(___aomod@divisor+4)^0,w,c
  5405  00E580  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5406  00E582  500E               	movf	(___aomod@divisor+5)^0,w,c
  5407  00E584  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5408  00E586  500F               	movf	(___aomod@divisor+6)^0,w,c
  5409  00E588  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5410  00E58A  5010               	movf	(___aomod@divisor+7)^0,w,c
  5411  00E58C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5412  00E58E  A0D8               	btfss	status,0,c
  5413  00E590  EFCC  F072         	goto	u1371
  5414  00E594  EFCE  F072         	goto	u1370
  5415  00E598                     u1371:
  5416  00E598  EFDE  F072         	goto	l2214
  5417  00E59C                     u1370:
  5418  00E59C  5009               	movf	___aomod@divisor^0,w,c
  5419  00E59E  5E01               	subwf	___aomod@dividend^0,f,c
  5420  00E5A0  500A               	movf	(___aomod@divisor+1)^0,w,c
  5421  00E5A2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5422  00E5A4  500B               	movf	(___aomod@divisor+2)^0,w,c
  5423  00E5A6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5424  00E5A8  500C               	movf	(___aomod@divisor+3)^0,w,c
  5425  00E5AA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5426  00E5AC  500D               	movf	(___aomod@divisor+4)^0,w,c
  5427  00E5AE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5428  00E5B0  500E               	movf	(___aomod@divisor+5)^0,w,c
  5429  00E5B2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5430  00E5B4  500F               	movf	(___aomod@divisor+6)^0,w,c
  5431  00E5B6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5432  00E5B8  5010               	movf	(___aomod@divisor+7)^0,w,c
  5433  00E5BA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5434  00E5BC                     l2214:
  5435  00E5BC  90D8               	bcf	status,0,c
  5436  00E5BE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5437  00E5C0  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5438  00E5C2  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5439  00E5C4  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5440  00E5C6  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5441  00E5C8  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5442  00E5CA  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5443  00E5CC  3209               	rrcf	___aomod@divisor^0,f,c
  5444  00E5CE  2E11               	decfsz	___aomod@counter^0,f,c
  5445  00E5D0  EFB7  F072         	goto	l2210
  5446  00E5D4                     l2218:
  5447  00E5D4  5012               	movf	___aomod@sign^0,w,c
  5448  00E5D6  B4D8               	btfsc	status,2,c
  5449  00E5D8  EFF0  F072         	goto	u1381
  5450  00E5DC  EFF2  F072         	goto	u1380
  5451  00E5E0                     u1381:
  5452  00E5E0  EF02  F073         	goto	l2222
  5453  00E5E4                     u1380:
  5454  00E5E4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5455  00E5E6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5456  00E5E8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5457  00E5EA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5458  00E5EC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5459  00E5EE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5460  00E5F0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5461  00E5F2  6C01               	negf	___aomod@dividend^0,c
  5462  00E5F4  0E00               	movlw	0
  5463  00E5F6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5464  00E5F8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5465  00E5FA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5466  00E5FC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5467  00E5FE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5468  00E600  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5469  00E602  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5470  00E604                     l2222:
  5471  00E604  C001  F001         	movff	___aomod@dividend,?___aomod
  5472  00E608  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5473  00E60C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5474  00E610  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5475  00E614  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5476  00E618  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5477  00E61C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5478  00E620  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5479  00E624  0012               	return		;funcret
  5480  00E626                     __end_of___aomod:
  5481                           	opt callstack 0
  5482                           
  5483 ;; *************** function ___aodiv *****************
  5484 ;; Defined at:
  5485 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  dividend        8    0[COMRAM] long long 
  5488 ;;  divisor         8    8[COMRAM] long long 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;  quotient        8   18[COMRAM] long long 
  5491 ;;  sign            1   17[COMRAM] unsigned char 
  5492 ;;  counter         1   16[COMRAM] unsigned char 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  8    0[COMRAM] long long 
  5495 ;; Registers used:
  5496 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5502 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;Total ram usage:       26 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; This function calls:
  5509 ;;		Nothing
  5510 ;; This function is called by:
  5511 ;;		_dtoa
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text10
  5516  00E626                     __ptext10:
  5517                           	opt callstack 0
  5518  00E626                     ___aodiv:
  5519                           	opt callstack 26
  5520  00E626  0E00               	movlw	0
  5521  00E628  6E12               	movwf	___aodiv@sign^0,c
  5522  00E62A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5523  00E62C  EF1C  F073         	goto	u1260
  5524  00E630  EF1A  F073         	goto	u1261
  5525  00E634                     u1261:
  5526  00E634  EF2E  F073         	goto	l2154
  5527  00E638                     u1260:
  5528  00E638  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5529  00E63A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5530  00E63C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5531  00E63E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5532  00E640  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5533  00E642  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5534  00E644  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5535  00E646  6C09               	negf	___aodiv@divisor^0,c
  5536  00E648  0E00               	movlw	0
  5537  00E64A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5538  00E64C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5539  00E64E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5540  00E650  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5541  00E652  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5542  00E654  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5543  00E656  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5544  00E658  0E01               	movlw	1
  5545  00E65A  6E12               	movwf	___aodiv@sign^0,c
  5546  00E65C                     l2154:
  5547  00E65C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5548  00E65E  EF35  F073         	goto	u1270
  5549  00E662  EF33  F073         	goto	u1271
  5550  00E666                     u1271:
  5551  00E666  EF47  F073         	goto	l2160
  5552  00E66A                     u1270:
  5553  00E66A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5554  00E66C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5555  00E66E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5556  00E670  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5557  00E672  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5558  00E674  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5559  00E676  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5560  00E678  6C01               	negf	___aodiv@dividend^0,c
  5561  00E67A  0E00               	movlw	0
  5562  00E67C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5563  00E67E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5564  00E680  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5565  00E682  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5566  00E684  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5567  00E686  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5568  00E688  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5569  00E68A  0E01               	movlw	1
  5570  00E68C  1A12               	xorwf	___aodiv@sign^0,f,c
  5571  00E68E                     l2160:
  5572  00E68E  EE20  F013         	lfsr	2,___aodiv@quotient
  5573  00E692  0E07               	movlw	7
  5574  00E694                     u1281:
  5575  00E694  6ADE               	clrf	postinc2,c
  5576  00E696  06E8               	decf	wreg,f,c
  5577  00E698  E2FD               	bc	u1281
  5578  00E69A  5009               	movf	___aodiv@divisor^0,w,c
  5579  00E69C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5580  00E69E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5581  00E6A0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5582  00E6A2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5583  00E6A4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5584  00E6A6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5585  00E6A8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5586  00E6AA  B4D8               	btfsc	status,2,c
  5587  00E6AC  EF5A  F073         	goto	u1291
  5588  00E6B0  EF5C  F073         	goto	u1290
  5589  00E6B4                     u1291:
  5590  00E6B4  EFAE  F073         	goto	l2182
  5591  00E6B8                     u1290:
  5592  00E6B8  0E01               	movlw	1
  5593  00E6BA  6E11               	movwf	___aodiv@counter^0,c
  5594  00E6BC  EF6A  F073         	goto	l2168
  5595  00E6C0                     l2166:
  5596  00E6C0  90D8               	bcf	status,0,c
  5597  00E6C2  3609               	rlcf	___aodiv@divisor^0,f,c
  5598  00E6C4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5599  00E6C6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5600  00E6C8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5601  00E6CA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5602  00E6CC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5603  00E6CE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5604  00E6D0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5605  00E6D2  2A11               	incf	___aodiv@counter^0,f,c
  5606  00E6D4                     l2168:
  5607  00E6D4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5608  00E6D6  EF6F  F073         	goto	u1301
  5609  00E6DA  EF71  F073         	goto	u1300
  5610  00E6DE                     u1301:
  5611  00E6DE  EF60  F073         	goto	l2166
  5612  00E6E2                     u1300:
  5613  00E6E2                     l2170:
  5614  00E6E2  90D8               	bcf	status,0,c
  5615  00E6E4  3613               	rlcf	___aodiv@quotient^0,f,c
  5616  00E6E6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5617  00E6E8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5618  00E6EA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5619  00E6EC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5620  00E6EE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5621  00E6F0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5622  00E6F2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5623  00E6F4  5009               	movf	___aodiv@divisor^0,w,c
  5624  00E6F6  5C01               	subwf	___aodiv@dividend^0,w,c
  5625  00E6F8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5626  00E6FA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5627  00E6FC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5628  00E6FE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5629  00E700  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5630  00E702  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5631  00E704  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5632  00E706  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5633  00E708  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5634  00E70A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5635  00E70C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5636  00E70E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5637  00E710  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5638  00E712  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5639  00E714  A0D8               	btfss	status,0,c
  5640  00E716  EF8F  F073         	goto	u1311
  5641  00E71A  EF91  F073         	goto	u1310
  5642  00E71E                     u1311:
  5643  00E71E  EFA2  F073         	goto	l2178
  5644  00E722                     u1310:
  5645  00E722  5009               	movf	___aodiv@divisor^0,w,c
  5646  00E724  5E01               	subwf	___aodiv@dividend^0,f,c
  5647  00E726  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5648  00E728  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5649  00E72A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5650  00E72C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5651  00E72E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5652  00E730  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5653  00E732  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5654  00E734  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5655  00E736  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5656  00E738  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5657  00E73A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5658  00E73C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5659  00E73E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5660  00E740  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5661  00E742  8013               	bsf	___aodiv@quotient^0,0,c
  5662  00E744                     l2178:
  5663  00E744  90D8               	bcf	status,0,c
  5664  00E746  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5665  00E748  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5666  00E74A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5667  00E74C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5668  00E74E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5669  00E750  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5670  00E752  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5671  00E754  3209               	rrcf	___aodiv@divisor^0,f,c
  5672  00E756  2E11               	decfsz	___aodiv@counter^0,f,c
  5673  00E758  EF71  F073         	goto	l2170
  5674  00E75C                     l2182:
  5675  00E75C  5012               	movf	___aodiv@sign^0,w,c
  5676  00E75E  B4D8               	btfsc	status,2,c
  5677  00E760  EFB4  F073         	goto	u1321
  5678  00E764  EFB6  F073         	goto	u1320
  5679  00E768                     u1321:
  5680  00E768  EFC6  F073         	goto	l2186
  5681  00E76C                     u1320:
  5682  00E76C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5683  00E76E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5684  00E770  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5685  00E772  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5686  00E774  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5687  00E776  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5688  00E778  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5689  00E77A  6C13               	negf	___aodiv@quotient^0,c
  5690  00E77C  0E00               	movlw	0
  5691  00E77E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5692  00E780  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5693  00E782  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5694  00E784  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5695  00E786  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5696  00E788  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5697  00E78A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5698  00E78C                     l2186:
  5699  00E78C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5700  00E790  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5701  00E794  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5702  00E798  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5703  00E79C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5704  00E7A0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5705  00E7A4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5706  00E7A8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5707  00E7AC  0012               	return		;funcret
  5708  00E7AE                     __end_of___aodiv:
  5709                           	opt callstack 0
  5710                           
  5711 ;; *************** function _ctoa *****************
  5712 ;; Defined at:
  5713 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5716 ;;		 -> NULL(0), 
  5717 ;;  c               1   31[COMRAM] unsigned char 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  w               2   32[COMRAM] int 
  5720 ;;  l               2    0        int 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  2   29[COMRAM] int 
  5723 ;; Registers used:
  5724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5730 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;Total ram usage:        5 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    5
  5737 ;; This function calls:
  5738 ;;		_pad
  5739 ;; This function is called by:
  5740 ;;		_vfpfcnvrt
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text11
  5745  00E0E8                     __ptext11:
  5746                           	opt callstack 0
  5747  00E0E8                     _ctoa:
  5748                           	opt callstack 22
  5749  00E0E8                     
  5750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  5751  00E0E8  0100               	movlb	0	; () banked
  5752  00E0EA  51C2               	movf	_width& (0+255),w,b
  5753  00E0EC  11C3               	iorwf	(_width+1)& (0+255),w,b
  5754  00E0EE  A4D8               	btfss	status,2,c
  5755  00E0F0  EF7C  F070         	goto	u1481
  5756  00E0F4  EF7E  F070         	goto	u1480
  5757  00E0F8                     u1481:
  5758  00E0F8  EF84  F070         	goto	l2280
  5759  00E0FC                     u1480:
  5760  00E0FC                     
  5761                           ; BSR set to: 0
  5762  00E0FC  C0C2  F021         	movff	_width,ctoa@w
  5763  00E100  C0C3  F022         	movff	_width+1,ctoa@w+1
  5764  00E104  EF8A  F070         	goto	l2282
  5765  00E108                     l2280:
  5766                           
  5767                           ; BSR set to: 0
  5768  00E108  0EFF               	movlw	255
  5769  00E10A  25C2               	addwf	_width& (0+255),w,b
  5770  00E10C  6E21               	movwf	ctoa@w^0,c
  5771  00E10E  0EFF               	movlw	255
  5772  00E110  21C3               	addwfc	(_width+1)& (0+255),w,b
  5773  00E112  6E22               	movwf	(ctoa@w+1)^0,c
  5774  00E114                     l2282:
  5775                           
  5776                           ; BSR set to: 0
  5777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  5778  00E114  C020  F0D2         	movff	ctoa@c,_dbuf
  5779  00E118                     
  5780                           ; BSR set to: 0
  5781                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  5782  00E118  0E00               	movlw	0
  5783  00E11A  6FD3               	movwf	(_dbuf+1)& (0+255),b
  5784  00E11C                     
  5785                           ; BSR set to: 0
  5786                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  5787  00E11C  C01E  F013         	movff	ctoa@fp,pad@fp
  5788  00E120  C01F  F014         	movff	ctoa@fp+1,pad@fp+1
  5789  00E124  0ED2               	movlw	low _dbuf
  5790  00E126  6E15               	movwf	pad@buf^0,c
  5791  00E128  0E00               	movlw	high _dbuf
  5792  00E12A  6E16               	movwf	(pad@buf+1)^0,c
  5793  00E12C  C021  F017         	movff	ctoa@w,pad@p
  5794  00E130  C022  F018         	movff	ctoa@w+1,pad@p+1
  5795  00E134  EC1E  F071         	call	_pad	;wreg free
  5796  00E138  C013  F01E         	movff	?_pad,?_ctoa
  5797  00E13C  C014  F01F         	movff	?_pad+1,?_ctoa+1
  5798  00E140  0012               	return		;funcret
  5799  00E142                     __end_of_ctoa:
  5800                           	opt callstack 0
  5801                           
  5802 ;; *************** function _pad *****************
  5803 ;; Defined at:
  5804 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  5807 ;;		 -> NULL(0), 
  5808 ;;  buf             2   20[COMRAM] PTR unsigned char 
  5809 ;;		 -> dbuf(32), 
  5810 ;;  p               2   22[COMRAM] int 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  w               2   27[COMRAM] int 
  5813 ;;  i               2   25[COMRAM] int 
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  2   18[COMRAM] int 
  5816 ;; Registers used:
  5817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5823 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5826 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;Total ram usage:       11 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:    4
  5830 ;; This function calls:
  5831 ;;		_fputc
  5832 ;;		_fputs
  5833 ;;		_strlen
  5834 ;; This function is called by:
  5835 ;;		_ctoa
  5836 ;;		_dtoa
  5837 ;;		_utoa
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text12
  5842  00E23C                     __ptext12:
  5843                           	opt callstack 0
  5844  00E23C                     _pad:
  5845                           	opt callstack 22
  5846  00E23C                     
  5847                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5848  00E23C  0100               	movlb	0	; () banked
  5849  00E23E  A1C6               	btfss	_flags& (0+255),0,b
  5850  00E240  EF24  F071         	goto	u1191
  5851  00E244  EF26  F071         	goto	u1190
  5852  00E248                     u1191:
  5853  00E248  EF30  F071         	goto	l2114
  5854  00E24C                     u1190:
  5855  00E24C                     
  5856                           ; BSR set to: 0
  5857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5858  00E24C  C015  F00C         	movff	pad@buf,fputs@s
  5859  00E250  C016  F00D         	movff	pad@buf+1,fputs@s+1
  5860  00E254  C013  F00E         	movff	pad@fp,fputs@fp
  5861  00E258  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  5862  00E25C  EC29  F070         	call	_fputs	;wreg free
  5863  00E260                     l2114:
  5864                           
  5865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5866  00E260  BE18               	btfsc	(pad@p+1)^0,7,c
  5867  00E262  EF35  F071         	goto	u1201
  5868  00E266  EF37  F071         	goto	u1200
  5869  00E26A                     u1201:
  5870  00E26A  EF3D  F071         	goto	l2118
  5871  00E26E                     u1200:
  5872  00E26E  C017  F01C         	movff	pad@p,pad@w
  5873  00E272  C018  F01D         	movff	pad@p+1,pad@w+1
  5874  00E276  EF41  F071         	goto	l384
  5875  00E27A                     l2118:
  5876  00E27A  0E00               	movlw	0
  5877  00E27C  6E1D               	movwf	(pad@w+1)^0,c
  5878  00E27E  0E00               	movlw	0
  5879  00E280  6E1C               	movwf	pad@w^0,c
  5880  00E282                     l384:
  5881                           
  5882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5883  00E282  0E00               	movlw	0
  5884  00E284  6E1B               	movwf	(pad@i+1)^0,c
  5885  00E286  0E00               	movlw	0
  5886  00E288  6E1A               	movwf	pad@i^0,c
  5887                           
  5888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5889  00E28A  EF53  F071         	goto	l2124
  5890  00E28E                     l2120:
  5891                           
  5892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5893  00E28E  0E00               	movlw	0
  5894  00E290  6E04               	movwf	(fputc@c+1)^0,c
  5895  00E292  0E20               	movlw	32
  5896  00E294  6E03               	movwf	fputc@c^0,c
  5897  00E296  C013  F005         	movff	pad@fp,fputc@fp
  5898  00E29A  C014  F006         	movff	pad@fp+1,fputc@fp+1
  5899  00E29E  ECD3  F070         	call	_fputc	;wreg free
  5900  00E2A2                     
  5901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5902  00E2A2  4A1A               	infsnz	pad@i^0,f,c
  5903  00E2A4  2A1B               	incf	(pad@i+1)^0,f,c
  5904  00E2A6                     l2124:
  5905                           
  5906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5907  00E2A6  501C               	movf	pad@w^0,w,c
  5908  00E2A8  5C1A               	subwf	pad@i^0,w,c
  5909  00E2AA  501B               	movf	(pad@i+1)^0,w,c
  5910  00E2AC  0A80               	xorlw	128
  5911  00E2AE  6E19               	movwf	??_pad^0,c
  5912  00E2B0  501D               	movf	(pad@w+1)^0,w,c
  5913  00E2B2  0A80               	xorlw	128
  5914  00E2B4  5819               	subwfb	??_pad^0,w,c
  5915  00E2B6  A0D8               	btfss	status,0,c
  5916  00E2B8  EF60  F071         	goto	u1211
  5917  00E2BC  EF62  F071         	goto	u1210
  5918  00E2C0                     u1211:
  5919  00E2C0  EF47  F071         	goto	l2120
  5920  00E2C4                     u1210:
  5921  00E2C4                     
  5922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5923  00E2C4  0100               	movlb	0	; () banked
  5924  00E2C6  B1C6               	btfsc	_flags& (0+255),0,b
  5925  00E2C8  EF68  F071         	goto	u1221
  5926  00E2CC  EF6A  F071         	goto	u1220
  5927  00E2D0                     u1221:
  5928  00E2D0  EF74  F071         	goto	l2128
  5929  00E2D4                     u1220:
  5930  00E2D4                     
  5931                           ; BSR set to: 0
  5932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5933  00E2D4  C015  F00C         	movff	pad@buf,fputs@s
  5934  00E2D8  C016  F00D         	movff	pad@buf+1,fputs@s+1
  5935  00E2DC  C013  F00E         	movff	pad@fp,fputs@fp
  5936  00E2E0  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  5937  00E2E4  EC29  F070         	call	_fputs	;wreg free
  5938  00E2E8                     l2128:
  5939                           
  5940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5941  00E2E8  C015  F001         	movff	pad@buf,strlen@s
  5942  00E2EC  C016  F002         	movff	pad@buf+1,strlen@s+1
  5943  00E2F0  ECB3  F06F         	call	_strlen	;wreg free
  5944  00E2F4  501C               	movf	pad@w^0,w,c
  5945  00E2F6  2401               	addwf	?_strlen^0,w,c
  5946  00E2F8  6E13               	movwf	?_pad^0,c
  5947  00E2FA  501D               	movf	(pad@w+1)^0,w,c
  5948  00E2FC  2002               	addwfc	(?_strlen+1)^0,w,c
  5949  00E2FE  6E14               	movwf	(?_pad+1)^0,c
  5950  00E300  0012               	return		;funcret
  5951  00E302                     __end_of_pad:
  5952                           	opt callstack 0
  5953                           
  5954 ;; *************** function _strlen *****************
  5955 ;; Defined at:
  5956 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5959 ;;		 -> dbuf(32), 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5962 ;;		 -> dbuf(32), 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  2    0[COMRAM] unsigned int 
  5965 ;; Registers used:
  5966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;Total ram usage:        4 bytes
  5977 ;; Hardware stack levels used:    1
  5978 ;; This function calls:
  5979 ;;		Nothing
  5980 ;; This function is called by:
  5981 ;;		_pad
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           	psect	text13
  5986  00DF66                     __ptext13:
  5987                           	opt callstack 0
  5988  00DF66                     _strlen:
  5989                           	opt callstack 25
  5990  00DF66  C001  F003         	movff	strlen@s,strlen@a
  5991  00DF6A  C002  F004         	movff	strlen@s+1,strlen@a+1
  5992  00DF6E  EFBB  F06F         	goto	l2104
  5993  00DF72                     l2102:
  5994  00DF72  4A01               	infsnz	strlen@s^0,f,c
  5995  00DF74  2A02               	incf	(strlen@s+1)^0,f,c
  5996  00DF76                     l2104:
  5997  00DF76  C001  FFD9         	movff	strlen@s,fsr2l
  5998  00DF7A  C002  FFDA         	movff	strlen@s+1,fsr2h
  5999  00DF7E  50DF               	movf	indf2,w,c
  6000  00DF80  A4D8               	btfss	status,2,c
  6001  00DF82  EFC5  F06F         	goto	u1181
  6002  00DF86  EFC7  F06F         	goto	u1180
  6003  00DF8A                     u1181:
  6004  00DF8A  EFB9  F06F         	goto	l2102
  6005  00DF8E                     u1180:
  6006  00DF8E  5003               	movf	strlen@a^0,w,c
  6007  00DF90  5C01               	subwf	strlen@s^0,w,c
  6008  00DF92  6E01               	movwf	?_strlen^0,c
  6009  00DF94  5004               	movf	(strlen@a+1)^0,w,c
  6010  00DF96  5802               	subwfb	(strlen@s+1)^0,w,c
  6011  00DF98  6E02               	movwf	(?_strlen+1)^0,c
  6012  00DF9A  0012               	return		;funcret
  6013  00DF9C                     __end_of_strlen:
  6014                           	opt callstack 0
  6015                           
  6016 ;; *************** function _fputs *****************
  6017 ;; Defined at:
  6018 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6021 ;;		 -> dbuf(32), 
  6022 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  6023 ;;		 -> NULL(0), 
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;  i               2   16[COMRAM] int 
  6026 ;;  c               1   15[COMRAM] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  2   11[COMRAM] int 
  6029 ;; Registers used:
  6030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;Total ram usage:        7 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    3
  6043 ;; This function calls:
  6044 ;;		_fputc
  6045 ;; This function is called by:
  6046 ;;		_pad
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text14
  6051  00E052                     __ptext14:
  6052                           	opt callstack 0
  6053  00E052                     _fputs:
  6054                           	opt callstack 22
  6055  00E052  0E00               	movlw	0
  6056  00E054  6E12               	movwf	(fputs@i+1)^0,c
  6057  00E056  0E00               	movlw	0
  6058  00E058  6E11               	movwf	fputs@i^0,c
  6059  00E05A  EF3A  F070         	goto	l2098
  6060  00E05E                     l2094:
  6061  00E05E  C010  F003         	movff	fputs@c,fputc@c
  6062  00E062  6A04               	clrf	(fputc@c+1)^0,c
  6063  00E064  C00E  F005         	movff	fputs@fp,fputc@fp
  6064  00E068  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  6065  00E06C  ECD3  F070         	call	_fputc	;wreg free
  6066  00E070  4A11               	infsnz	fputs@i^0,f,c
  6067  00E072  2A12               	incf	(fputs@i+1)^0,f,c
  6068  00E074                     l2098:
  6069  00E074  5011               	movf	fputs@i^0,w,c
  6070  00E076  240C               	addwf	fputs@s^0,w,c
  6071  00E078  6ED9               	movwf	fsr2l,c
  6072  00E07A  5012               	movf	(fputs@i+1)^0,w,c
  6073  00E07C  200D               	addwfc	(fputs@s+1)^0,w,c
  6074  00E07E  6EDA               	movwf	fsr2h,c
  6075  00E080  50DF               	movf	indf2,w,c
  6076  00E082  6E10               	movwf	fputs@c^0,c
  6077  00E084  5010               	movf	fputs@c^0,w,c
  6078  00E086  A4D8               	btfss	status,2,c
  6079  00E088  EF48  F070         	goto	u1171
  6080  00E08C  EF4A  F070         	goto	u1170
  6081  00E090                     u1171:
  6082  00E090  EF2F  F070         	goto	l2094
  6083  00E094                     u1170:
  6084  00E094  0012               	return		;funcret
  6085  00E096                     __end_of_fputs:
  6086                           	opt callstack 0
  6087                           
  6088 ;; *************** function _fputc *****************
  6089 ;; Defined at:
  6090 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  c               2    2[COMRAM] int 
  6093 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  6094 ;;		 -> NULL(0), 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  2    2[COMRAM] int 
  6099 ;; Registers used:
  6100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;Total ram usage:        9 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    2
  6113 ;; This function calls:
  6114 ;;		_putch
  6115 ;; This function is called by:
  6116 ;;		_pad
  6117 ;;		_vfpfcnvrt
  6118 ;;		_fputs
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text15
  6123  00E1A6                     __ptext15:
  6124                           	opt callstack 0
  6125  00E1A6                     _fputc:
  6126                           	opt callstack 22
  6127  00E1A6  5005               	movf	fputc@fp^0,w,c
  6128  00E1A8  1006               	iorwf	(fputc@fp+1)^0,w,c
  6129  00E1AA  B4D8               	btfsc	status,2,c
  6130  00E1AC  EFDA  F070         	goto	u1131
  6131  00E1B0  EFDC  F070         	goto	u1130
  6132  00E1B4                     u1131:
  6133  00E1B4  EFE5  F070         	goto	l2082
  6134  00E1B8                     u1130:
  6135  00E1B8  5005               	movf	fputc@fp^0,w,c
  6136  00E1BA  1006               	iorwf	(fputc@fp+1)^0,w,c
  6137  00E1BC  A4D8               	btfss	status,2,c
  6138  00E1BE  EFE3  F070         	goto	u1141
  6139  00E1C2  EFE5  F070         	goto	u1140
  6140  00E1C6                     u1141:
  6141  00E1C6  EFEA  F070         	goto	l2084
  6142  00E1CA                     u1140:
  6143  00E1CA                     l2082:
  6144  00E1CA  5003               	movf	fputc@c^0,w,c
  6145  00E1CC  ECB6  F06E         	call	_putch
  6146  00E1D0  EF1D  F071         	goto	l1201
  6147  00E1D4                     l2084:
  6148  00E1D4  EE20 F004          	lfsr	2,4
  6149  00E1D8  5005               	movf	fputc@fp^0,w,c
  6150  00E1DA  26D9               	addwf	fsr2l,f,c
  6151  00E1DC  5006               	movf	(fputc@fp+1)^0,w,c
  6152  00E1DE  22DA               	addwfc	fsr2h,f,c
  6153  00E1E0  50DE               	movf	postinc2,w,c
  6154  00E1E2  10DE               	iorwf	postinc2,w,c
  6155  00E1E4  B4D8               	btfsc	status,2,c
  6156  00E1E6  EFF7  F070         	goto	u1151
  6157  00E1EA  EFF9  F070         	goto	u1150
  6158  00E1EE                     u1151:
  6159  00E1EE  EF14  F071         	goto	l2088
  6160  00E1F2                     u1150:
  6161  00E1F2  EE20 F004          	lfsr	2,4
  6162  00E1F6  5005               	movf	fputc@fp^0,w,c
  6163  00E1F8  26D9               	addwf	fsr2l,f,c
  6164  00E1FA  5006               	movf	(fputc@fp+1)^0,w,c
  6165  00E1FC  22DA               	addwfc	fsr2h,f,c
  6166  00E1FE  EE10 F002          	lfsr	1,2
  6167  00E202  5005               	movf	fputc@fp^0,w,c
  6168  00E204  26E1               	addwf	fsr1l,f,c
  6169  00E206  5006               	movf	(fputc@fp+1)^0,w,c
  6170  00E208  22E2               	addwfc	fsr1h,f,c
  6171  00E20A  50DE               	movf	postinc2,w,c
  6172  00E20C  5CE6               	subwf	postinc1,w,c
  6173  00E20E  50E6               	movf	postinc1,w,c
  6174  00E210  0A80               	xorlw	128
  6175  00E212  6E0B               	movwf	(??_fputc+4)^0,c
  6176  00E214  50DE               	movf	postinc2,w,c
  6177  00E216  0A80               	xorlw	128
  6178  00E218  580B               	subwfb	(??_fputc+4)^0,w,c
  6179  00E21A  B0D8               	btfsc	status,0,c
  6180  00E21C  EF12  F071         	goto	u1161
  6181  00E220  EF14  F071         	goto	u1160
  6182  00E224                     u1161:
  6183  00E224  EF1D  F071         	goto	l1201
  6184  00E228                     u1160:
  6185  00E228                     l2088:
  6186  00E228  EE20 F002          	lfsr	2,2
  6187  00E22C  5005               	movf	fputc@fp^0,w,c
  6188  00E22E  26D9               	addwf	fsr2l,f,c
  6189  00E230  5006               	movf	(fputc@fp+1)^0,w,c
  6190  00E232  22DA               	addwfc	fsr2h,f,c
  6191  00E234  2ADE               	incf	postinc2,f,c
  6192  00E236  0E00               	movlw	0
  6193  00E238  22DD               	addwfc	postdec2,f,c
  6194  00E23A                     l1201:
  6195  00E23A  0012               	return		;funcret
  6196  00E23C                     __end_of_fputc:
  6197                           	opt callstack 0
  6198                           
  6199 ;; *************** function _putch *****************
  6200 ;; Defined at:
  6201 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  6202 ;; Parameters:    Size  Location     Type
  6203 ;;  txData          1    wreg     unsigned char 
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;  txData          1    1[COMRAM] unsigned char 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  1    wreg      void 
  6208 ;; Registers used:
  6209 ;;		wreg, status,2, cstack
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6219 ;;Total ram usage:        1 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:    1
  6222 ;; This function calls:
  6223 ;;		_EUSART1_Write
  6224 ;; This function is called by:
  6225 ;;		_fputc
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229                           	psect	text16
  6230  00DD6C                     __ptext16:
  6231                           	opt callstack 0
  6232  00DD6C                     _putch:
  6233                           	opt callstack 22
  6234                           
  6235                           ;incstack = 0
  6236                           ;putch@txData stored from wreg
  6237  00DD6C  6E02               	movwf	putch@txData^0,c
  6238  00DD6E                     
  6239                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  6240  00DD6E  5002               	movf	putch@txData^0,w,c
  6241  00DD70  EC0E  F06F         	call	_EUSART1_Write
  6242  00DD74  0012               	return		;funcret
  6243  00DD76                     __end_of_putch:
  6244                           	opt callstack 0
  6245                           
  6246 ;; *************** function _EUSART1_Write *****************
  6247 ;; Defined at:
  6248 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  txData          1    wreg     unsigned char 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  txData          1    0[COMRAM] unsigned char 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		wreg
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6265 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;Total ram usage:        1 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_putch
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275                           	psect	text17
  6276  00DE1C                     __ptext17:
  6277                           	opt callstack 0
  6278  00DE1C                     _EUSART1_Write:
  6279                           	opt callstack 22
  6280                           
  6281                           ;incstack = 0
  6282                           ;EUSART1_Write@txData stored from wreg
  6283  00DE1C  6E01               	movwf	EUSART1_Write@txData^0,c
  6284  00DE1E                     l269:
  6285                           
  6286                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  6287  00DE1E  A89E               	btfss	158,4,c	;volatile
  6288  00DE20  EF14  F06F         	goto	u1121
  6289  00DE24  EF16  F06F         	goto	u1120
  6290  00DE28                     u1121:
  6291  00DE28  EF0F  F06F         	goto	l269
  6292  00DE2C                     u1120:
  6293  00DE2C                     
  6294                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  6295  00DE2C  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6296  00DE30  0012               	return		;funcret
  6297  00DE32                     __end_of_EUSART1_Write:
  6298                           	opt callstack 0
  6299                           
  6300 ;; *************** function _atoi *****************
  6301 ;; Defined at:
  6302 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  6303 ;; Parameters:    Size  Location     Type
  6304 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6305 ;;		 -> STR_58(17), STR_57(50), STR_56(25), STR_55(38), 
  6306 ;;		 -> STR_54(41), STR_53(42), STR_52(67), STR_51(68), 
  6307 ;;		 -> STR_50(52), STR_49(48), STR_48(42), STR_47(26), 
  6308 ;;		 -> STR_46(31), STR_45(35), STR_44(37), STR_43(15), 
  6309 ;;		 -> STR_42(27), STR_41(24), STR_40(23), STR_39(20), 
  6310 ;;		 -> STR_38(23), STR_37(26), STR_36(38), STR_35(29), 
  6311 ;;		 -> STR_34(20), STR_33(3), STR_32(5), STR_31(19), 
  6312 ;;		 -> STR_30(19), STR_29(41), STR_28(17), STR_27(36), 
  6313 ;;		 -> STR_26(72), STR_25(38), STR_24(74), STR_23(2), 
  6314 ;;		 -> STR_22(2), STR_21(13), STR_20(52), STR_19(27), 
  6315 ;;		 -> STR_18(68), STR_17(49), STR_16(48), STR_15(38), 
  6316 ;;		 -> STR_14(33), STR_13(25), STR_12(22), STR_11(7), 
  6317 ;;		 -> STR_10(15), STR_9(52), STR_8(41), STR_7(17), 
  6318 ;;		 -> STR_6(23), STR_5(52), STR_4(5), STR_3(22), 
  6319 ;;		 -> STR_2(21), STR_1(20), 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  n               2   20[COMRAM] int 
  6322 ;;  neg             2   13[COMRAM] int 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  2    7[COMRAM] int 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;Total ram usage:       15 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    1
  6339 ;; This function calls:
  6340 ;;		___wmul
  6341 ;;		_isdigit
  6342 ;;		_isspace
  6343 ;; This function is called by:
  6344 ;;		_vfpfcnvrt
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text18
  6349  00E7AE                     __ptext18:
  6350                           	opt callstack 0
  6351  00E7AE                     _atoi:
  6352                           	opt callstack 26
  6353  00E7AE  0E00               	movlw	0
  6354  00E7B0  6E16               	movwf	(atoi@n+1)^0,c
  6355  00E7B2  0E00               	movlw	0
  6356  00E7B4  6E15               	movwf	atoi@n^0,c
  6357  00E7B6  0E00               	movlw	0
  6358  00E7B8  6E0F               	movwf	(atoi@neg+1)^0,c
  6359  00E7BA  0E00               	movlw	0
  6360  00E7BC  6E0E               	movwf	atoi@neg^0,c
  6361  00E7BE  EFE3  F073         	goto	l2392
  6362  00E7C2                     l2390:
  6363  00E7C2  4A08               	infsnz	atoi@s^0,f,c
  6364  00E7C4  2A09               	incf	(atoi@s+1)^0,f,c
  6365  00E7C6                     l2392:
  6366  00E7C6  0E01               	movlw	1
  6367  00E7C8  6E14               	movwf	_atoi$1517^0,c
  6368  00E7CA  C008  FFF6         	movff	atoi@s,tblptrl
  6369  00E7CE  C009  FFF7         	movff	atoi@s+1,tblptrh
  6370  00E7D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6371  00E7D2  6AF8               	clrf	tblptru,c
  6372  00E7D4                     	endif
  6373  00E7D4                     	if	0	;tblptru may be non-zero
  6374  00E7D4                     	endif
  6375  00E7D4  0008               	tblrd		*
  6376  00E7D6  50F5               	movf	tablat,w,c
  6377  00E7D8  0A20               	xorlw	32
  6378  00E7DA  B4D8               	btfsc	status,2,c
  6379  00E7DC  EFF2  F073         	goto	u1711
  6380  00E7E0  EFF4  F073         	goto	u1710
  6381  00E7E4                     u1711:
  6382  00E7E4  EF12  F074         	goto	l2400
  6383  00E7E8                     u1710:
  6384  00E7E8  0EF7               	movlw	247
  6385  00E7EA  6E0A               	movwf	??_atoi^0,c
  6386  00E7EC  0EFF               	movlw	255
  6387  00E7EE  6E0B               	movwf	(??_atoi+1)^0,c
  6388  00E7F0  C008  FFF6         	movff	atoi@s,tblptrl
  6389  00E7F4  C009  FFF7         	movff	atoi@s+1,tblptrh
  6390  00E7F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6391  00E7F8  6AF8               	clrf	tblptru,c
  6392  00E7FA                     	endif
  6393  00E7FA                     	if	0	;tblptru may be non-zero
  6394  00E7FA                     	endif
  6395  00E7FA  0008               	tblrd		*
  6396  00E7FC  50F5               	movf	tablat,w,c
  6397  00E7FE  6E0C               	movwf	(??_atoi+2)^0,c
  6398  00E800  6A0D               	clrf	(??_atoi+3)^0,c
  6399  00E802  500A               	movf	??_atoi^0,w,c
  6400  00E804  260C               	addwf	(??_atoi+2)^0,f,c
  6401  00E806  500B               	movf	(??_atoi+1)^0,w,c
  6402  00E808  220D               	addwfc	(??_atoi+3)^0,f,c
  6403  00E80A  500D               	movf	(??_atoi+3)^0,w,c
  6404  00E80C  E109               	bnz	u1720
  6405  00E80E  0E05               	movlw	5
  6406  00E810  5C0C               	subwf	(??_atoi+2)^0,w,c
  6407  00E812  A0D8               	btfss	status,0,c
  6408  00E814  EF0E  F074         	goto	u1721
  6409  00E818  EF10  F074         	goto	u1720
  6410  00E81C                     u1721:
  6411  00E81C  EF12  F074         	goto	l2400
  6412  00E820                     u1720:
  6413  00E820  0E00               	movlw	0
  6414  00E822  6E14               	movwf	_atoi$1517^0,c
  6415  00E824                     l2400:
  6416  00E824  C014  F010         	movff	_atoi$1517,_atoi$1516
  6417  00E828  6A11               	clrf	(_atoi$1516+1)^0,c
  6418  00E82A  5010               	movf	_atoi$1516^0,w,c
  6419  00E82C  1011               	iorwf	(_atoi$1516+1)^0,w,c
  6420  00E82E  A4D8               	btfss	status,2,c
  6421  00E830  EF1C  F074         	goto	u1731
  6422  00E834  EF1E  F074         	goto	u1730
  6423  00E838                     u1731:
  6424  00E838  EFE1  F073         	goto	l2390
  6425  00E83C                     u1730:
  6426  00E83C  EF28  F074         	goto	l2410
  6427  00E840                     l2406:
  6428  00E840  0E00               	movlw	0
  6429  00E842  6E0F               	movwf	(atoi@neg+1)^0,c
  6430  00E844  0E01               	movlw	1
  6431  00E846  6E0E               	movwf	atoi@neg^0,c
  6432  00E848                     l2408:
  6433  00E848  4A08               	infsnz	atoi@s^0,f,c
  6434  00E84A  2A09               	incf	(atoi@s+1)^0,f,c
  6435  00E84C  EF5F  F074         	goto	l2416
  6436  00E850                     l2410:
  6437  00E850  C008  FFF6         	movff	atoi@s,tblptrl
  6438  00E854  C009  FFF7         	movff	atoi@s+1,tblptrh
  6439  00E858                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6440  00E858  6AF8               	clrf	tblptru,c
  6441  00E85A                     	endif
  6442  00E85A                     	if	0	;tblptru may be non-zero
  6443  00E85A                     	endif
  6444  00E85A  0008               	tblrd		*
  6445  00E85C  50F5               	movf	tablat,w,c
  6446  00E85E  6E0A               	movwf	??_atoi^0,c
  6447  00E860  6A0B               	clrf	(??_atoi+1)^0,c
  6448                           
  6449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6450                           ; Switch size 1, requested type "simple"
  6451                           ; Number of cases is 1, Range of values is 0 to 0
  6452                           ; switch strategies available:
  6453                           ; Name         Instructions Cycles
  6454                           ; simple_byte            4     3 (average)
  6455                           ;	Chosen strategy is simple_byte
  6456  00E862  500B               	movf	(??_atoi+1)^0,w,c
  6457  00E864  0A00               	xorlw	0	; case 0
  6458  00E866  B4D8               	btfsc	status,2,c
  6459  00E868  EF38  F074         	goto	l2890
  6460  00E86C  EF5F  F074         	goto	l2416
  6461  00E870                     l2890:
  6462                           
  6463                           ; Switch size 1, requested type "simple"
  6464                           ; Number of cases is 2, Range of values is 43 to 45
  6465                           ; switch strategies available:
  6466                           ; Name         Instructions Cycles
  6467                           ; simple_byte            7     4 (average)
  6468                           ;	Chosen strategy is simple_byte
  6469  00E870  500A               	movf	??_atoi^0,w,c
  6470  00E872  0A2B               	xorlw	43	; case 43
  6471  00E874  B4D8               	btfsc	status,2,c
  6472  00E876  EF24  F074         	goto	l2408
  6473  00E87A  0A06               	xorlw	6	; case 45
  6474  00E87C  B4D8               	btfsc	status,2,c
  6475  00E87E  EF20  F074         	goto	l2406
  6476  00E882  EF5F  F074         	goto	l2416
  6477  00E886                     l2412:
  6478  00E886  C015  F001         	movff	atoi@n,___wmul@multiplier
  6479  00E88A  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6480  00E88E  0E00               	movlw	0
  6481  00E890  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6482  00E892  0E0A               	movlw	10
  6483  00E894  6E03               	movwf	___wmul@multiplicand^0,c
  6484  00E896  EC4E  F06F         	call	___wmul	;wreg free
  6485  00E89A  C008  FFF6         	movff	atoi@s,tblptrl
  6486  00E89E  C009  FFF7         	movff	atoi@s+1,tblptrh
  6487  00E8A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6488  00E8A2  6AF8               	clrf	tblptru,c
  6489  00E8A4                     	endif
  6490  00E8A4                     	if	0	;tblptru may be non-zero
  6491  00E8A4                     	endif
  6492  00E8A4  0008               	tblrd		*
  6493  00E8A6  50F5               	movf	tablat,w,c
  6494  00E8A8  5E01               	subwf	?___wmul^0,f,c
  6495  00E8AA  0E00               	movlw	0
  6496  00E8AC  5A02               	subwfb	(?___wmul+1)^0,f,c
  6497  00E8AE  0E30               	movlw	48
  6498  00E8B0  2401               	addwf	?___wmul^0,w,c
  6499  00E8B2  6E15               	movwf	atoi@n^0,c
  6500  00E8B4  0E00               	movlw	0
  6501  00E8B6  2002               	addwfc	(?___wmul+1)^0,w,c
  6502  00E8B8  6E16               	movwf	(atoi@n+1)^0,c
  6503  00E8BA  EF24  F074         	goto	l2408
  6504  00E8BE                     l2416:
  6505  00E8BE  0ED0               	movlw	208
  6506  00E8C0  6E0A               	movwf	??_atoi^0,c
  6507  00E8C2  0EFF               	movlw	255
  6508  00E8C4  6E0B               	movwf	(??_atoi+1)^0,c
  6509  00E8C6  C008  FFF6         	movff	atoi@s,tblptrl
  6510  00E8CA  C009  FFF7         	movff	atoi@s+1,tblptrh
  6511  00E8CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6512  00E8CE  6AF8               	clrf	tblptru,c
  6513  00E8D0                     	endif
  6514  00E8D0                     	if	0	;tblptru may be non-zero
  6515  00E8D0                     	endif
  6516  00E8D0  0008               	tblrd		*
  6517  00E8D2  50F5               	movf	tablat,w,c
  6518  00E8D4  6E0C               	movwf	(??_atoi+2)^0,c
  6519  00E8D6  6A0D               	clrf	(??_atoi+3)^0,c
  6520  00E8D8  500A               	movf	??_atoi^0,w,c
  6521  00E8DA  260C               	addwf	(??_atoi+2)^0,f,c
  6522  00E8DC  500B               	movf	(??_atoi+1)^0,w,c
  6523  00E8DE  220D               	addwfc	(??_atoi+3)^0,f,c
  6524  00E8E0  500D               	movf	(??_atoi+3)^0,w,c
  6525  00E8E2  E10A               	bnz	u1740
  6526  00E8E4  0E0A               	movlw	10
  6527  00E8E6  5C0C               	subwf	(??_atoi+2)^0,w,c
  6528  00E8E8  A0D8               	btfss	status,0,c
  6529  00E8EA  EF79  F074         	goto	u1741
  6530  00E8EE  EF7C  F074         	goto	u1740
  6531  00E8F2                     u1741:
  6532  00E8F2  0E01               	movlw	1
  6533  00E8F4  EF7D  F074         	goto	u1750
  6534  00E8F8                     u1740:
  6535  00E8F8  0E00               	movlw	0
  6536  00E8FA                     u1750:
  6537  00E8FA  6E12               	movwf	_atoi$1518^0,c
  6538  00E8FC  6A13               	clrf	(_atoi$1518+1)^0,c
  6539  00E8FE  5012               	movf	_atoi$1518^0,w,c
  6540  00E900  1013               	iorwf	(_atoi$1518+1)^0,w,c
  6541  00E902  A4D8               	btfss	status,2,c
  6542  00E904  EF86  F074         	goto	u1761
  6543  00E908  EF88  F074         	goto	u1760
  6544  00E90C                     u1761:
  6545  00E90C  EF43  F074         	goto	l2412
  6546  00E910                     u1760:
  6547  00E910  500E               	movf	atoi@neg^0,w,c
  6548  00E912  100F               	iorwf	(atoi@neg+1)^0,w,c
  6549  00E914  A4D8               	btfss	status,2,c
  6550  00E916  EF8F  F074         	goto	u1771
  6551  00E91A  EF91  F074         	goto	u1770
  6552  00E91E                     u1771:
  6553  00E91E  EF9F  F074         	goto	l1172
  6554  00E922                     u1770:
  6555  00E922  C015  F00A         	movff	atoi@n,??_atoi
  6556  00E926  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6557  00E92A  1E0A               	comf	??_atoi^0,f,c
  6558  00E92C  1E0B               	comf	(??_atoi+1)^0,f,c
  6559  00E92E  4A0A               	infsnz	??_atoi^0,f,c
  6560  00E930  2A0B               	incf	(??_atoi+1)^0,f,c
  6561  00E932  C00A  F008         	movff	??_atoi,?_atoi
  6562  00E936  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6563  00E93A  EFA3  F074         	goto	l1175
  6564  00E93E                     l1172:
  6565  00E93E  C015  F008         	movff	atoi@n,?_atoi
  6566  00E942  C016  F009         	movff	atoi@n+1,?_atoi+1
  6567  00E946                     l1175:
  6568  00E946  0012               	return		;funcret
  6569  00E948                     __end_of_atoi:
  6570                           	opt callstack 0
  6571                           
  6572 ;; *************** function _isspace *****************
  6573 ;; Defined at:
  6574 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;  c               2    0[COMRAM] int 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;		None
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  2    0[COMRAM] int 
  6581 ;; Registers used:
  6582 ;;		wreg, status,2, status,0
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;Total ram usage:        7 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_atoi
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text19
  6602  00E096                     __ptext19:
  6603                           	opt callstack 0
  6604  00E096                     _isspace:
  6605                           	opt callstack 26
  6606  00E096  0E01               	movlw	1
  6607  00E098  6E07               	movwf	_isspace$1534^0,c
  6608  00E09A  0E20               	movlw	32
  6609  00E09C  1801               	xorwf	isspace@c^0,w,c
  6610  00E09E  1002               	iorwf	(isspace@c+1)^0,w,c
  6611  00E0A0  B4D8               	btfsc	status,2,c
  6612  00E0A2  EF55  F070         	goto	u1461
  6613  00E0A6  EF57  F070         	goto	u1460
  6614  00E0AA                     u1461:
  6615  00E0AA  EF70  F070         	goto	l2272
  6616  00E0AE                     u1460:
  6617  00E0AE  0EF7               	movlw	247
  6618  00E0B0  6E03               	movwf	??_isspace^0,c
  6619  00E0B2  0EFF               	movlw	255
  6620  00E0B4  6E04               	movwf	(??_isspace+1)^0,c
  6621  00E0B6  C001  F005         	movff	isspace@c,??_isspace+2
  6622  00E0BA  C002  F006         	movff	isspace@c+1,??_isspace+3
  6623  00E0BE  5003               	movf	??_isspace^0,w,c
  6624  00E0C0  2605               	addwf	(??_isspace+2)^0,f,c
  6625  00E0C2  5004               	movf	(??_isspace+1)^0,w,c
  6626  00E0C4  2206               	addwfc	(??_isspace+3)^0,f,c
  6627  00E0C6  5006               	movf	(??_isspace+3)^0,w,c
  6628  00E0C8  E109               	bnz	u1470
  6629  00E0CA  0E05               	movlw	5
  6630  00E0CC  5C05               	subwf	(??_isspace+2)^0,w,c
  6631  00E0CE  A0D8               	btfss	status,0,c
  6632  00E0D0  EF6C  F070         	goto	u1471
  6633  00E0D4  EF6E  F070         	goto	u1470
  6634  00E0D8                     u1471:
  6635  00E0D8  EF70  F070         	goto	l2272
  6636  00E0DC                     u1470:
  6637  00E0DC  0E00               	movlw	0
  6638  00E0DE  6E07               	movwf	_isspace$1534^0,c
  6639  00E0E0                     l2272:
  6640  00E0E0  C007  F001         	movff	_isspace$1534,?_isspace
  6641  00E0E4  6A02               	clrf	(?_isspace+1)^0,c
  6642  00E0E6  0012               	return		;funcret
  6643  00E0E8                     __end_of_isspace:
  6644                           	opt callstack 0
  6645                           
  6646 ;; *************** function _isdigit *****************
  6647 ;; Defined at:
  6648 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;  c               2    0[COMRAM] int 
  6651 ;; Auto vars:     Size  Location     Type
  6652 ;;		None
  6653 ;; Return value:  Size  Location     Type
  6654 ;;                  2    0[COMRAM] int 
  6655 ;; Registers used:
  6656 ;;		wreg, status,2, status,0
  6657 ;; Tracked objects:
  6658 ;;		On entry : 0/0
  6659 ;;		On exit  : 0/0
  6660 ;;		Unchanged: 0/0
  6661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6666 ;;Total ram usage:        6 bytes
  6667 ;; Hardware stack levels used:    1
  6668 ;; This function calls:
  6669 ;;		Nothing
  6670 ;; This function is called by:
  6671 ;;		_vfpfcnvrt
  6672 ;;		_atoi
  6673 ;; This function uses a non-reentrant model
  6674 ;;
  6675                           
  6676                           	psect	text20
  6677  00DF9C                     __ptext20:
  6678                           	opt callstack 0
  6679  00DF9C                     _isdigit:
  6680                           	opt callstack 27
  6681  00DF9C  0ED0               	movlw	208
  6682  00DF9E  6E03               	movwf	??_isdigit^0,c
  6683  00DFA0  0EFF               	movlw	255
  6684  00DFA2  6E04               	movwf	(??_isdigit+1)^0,c
  6685  00DFA4  C001  F005         	movff	isdigit@c,??_isdigit+2
  6686  00DFA8  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6687  00DFAC  5003               	movf	??_isdigit^0,w,c
  6688  00DFAE  2605               	addwf	(??_isdigit+2)^0,f,c
  6689  00DFB0  5004               	movf	(??_isdigit+1)^0,w,c
  6690  00DFB2  2206               	addwfc	(??_isdigit+3)^0,f,c
  6691  00DFB4  5006               	movf	(??_isdigit+3)^0,w,c
  6692  00DFB6  E10A               	bnz	u1240
  6693  00DFB8  0E0A               	movlw	10
  6694  00DFBA  5C05               	subwf	(??_isdigit+2)^0,w,c
  6695  00DFBC  A0D8               	btfss	status,0,c
  6696  00DFBE  EFE3  F06F         	goto	u1241
  6697  00DFC2  EFE6  F06F         	goto	u1240
  6698  00DFC6                     u1241:
  6699  00DFC6  0E01               	movlw	1
  6700  00DFC8  EFE7  F06F         	goto	u1250
  6701  00DFCC                     u1240:
  6702  00DFCC  0E00               	movlw	0
  6703  00DFCE                     u1250:
  6704  00DFCE  6E01               	movwf	?_isdigit^0,c
  6705  00DFD0  6A02               	clrf	(?_isdigit+1)^0,c
  6706  00DFD2  0012               	return		;funcret
  6707  00DFD4                     __end_of_isdigit:
  6708                           	opt callstack 0
  6709                           
  6710 ;; *************** function ___wmul *****************
  6711 ;; Defined at:
  6712 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  multiplier      2    0[COMRAM] unsigned int 
  6715 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  product         2    4[COMRAM] unsigned int 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  2    0[COMRAM] unsigned int 
  6720 ;; Registers used:
  6721 ;;		wreg, status,2, status,0, prodl, prodh
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6728 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;Total ram usage:        6 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; This function calls:
  6734 ;;		Nothing
  6735 ;; This function is called by:
  6736 ;;		_atoi
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text21
  6741  00DE9C                     __ptext21:
  6742                           	opt callstack 0
  6743  00DE9C                     ___wmul:
  6744                           	opt callstack 26
  6745  00DE9C  5001               	movf	___wmul@multiplier^0,w,c
  6746  00DE9E  0203               	mulwf	___wmul@multiplicand^0,c
  6747  00DEA0  CFF3 F005          	movff	prodl,___wmul@product
  6748  00DEA4  CFF4 F006          	movff	prodh,___wmul@product+1
  6749  00DEA8  5001               	movf	___wmul@multiplier^0,w,c
  6750  00DEAA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6751  00DEAC  50F3               	movf	243,w,c
  6752  00DEAE  2606               	addwf	(___wmul@product+1)^0,f,c
  6753  00DEB0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6754  00DEB2  0203               	mulwf	___wmul@multiplicand^0,c
  6755  00DEB4  50F3               	movf	243,w,c
  6756  00DEB6  2606               	addwf	(___wmul@product+1)^0,f,c
  6757  00DEB8  C005  F001         	movff	___wmul@product,?___wmul
  6758  00DEBC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6759  00DEC0  0012               	return		;funcret
  6760  00DEC2                     __end_of___wmul:
  6761                           	opt callstack 0
  6762                           
  6763 ;; *************** function _noteOn *****************
  6764 ;; Defined at:
  6765 ;;		line 293 in file "main.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  cmd             1    wreg     unsigned char 
  6768 ;;  pitch           1    1[COMRAM] unsigned char 
  6769 ;;  velocity        1    2[COMRAM] unsigned char 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  cmd             1    3[COMRAM] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  1    wreg      void 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;Total ram usage:        3 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    1
  6788 ;; This function calls:
  6789 ;;		_putByteSCI
  6790 ;; This function is called by:
  6791 ;;		_main
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text22
  6796  00DE06                     __ptext22:
  6797                           	opt callstack 0
  6798  00DE06                     _noteOn:
  6799                           	opt callstack 29
  6800                           
  6801                           ;incstack = 0
  6802                           ;noteOn@cmd stored from wreg
  6803  00DE06  6E04               	movwf	noteOn@cmd^0,c
  6804  00DE08                     
  6805                           ;main.c: 294:   putByteSCI(cmd);
  6806  00DE08  5004               	movf	noteOn@cmd^0,w,c
  6807  00DE0A  EC25  F06F         	call	_putByteSCI
  6808                           
  6809                           ;main.c: 295:   putByteSCI(pitch);
  6810  00DE0E  5002               	movf	noteOn@pitch^0,w,c
  6811  00DE10  EC25  F06F         	call	_putByteSCI
  6812                           
  6813                           ;main.c: 296:   putByteSCI(velocity);
  6814  00DE14  5003               	movf	noteOn@velocity^0,w,c
  6815  00DE16  EC25  F06F         	call	_putByteSCI
  6816  00DE1A  0012               	return		;funcret
  6817  00DE1C                     __end_of_noteOn:
  6818                           	opt callstack 0
  6819                           
  6820 ;; *************** function _putByteSCI *****************
  6821 ;; Defined at:
  6822 ;;		line 285 in file "main.c"
  6823 ;; Parameters:    Size  Location     Type
  6824 ;;  writeByte       1    wreg     unsigned char 
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;  writeByte       1    0[COMRAM] unsigned char 
  6827 ;; Return value:  Size  Location     Type
  6828 ;;                  1    wreg      void 
  6829 ;; Registers used:
  6830 ;;		wreg
  6831 ;; Tracked objects:
  6832 ;;		On entry : 0/0
  6833 ;;		On exit  : 0/0
  6834 ;;		Unchanged: 0/0
  6835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;Total ram usage:        1 bytes
  6841 ;; Hardware stack levels used:    1
  6842 ;; This function calls:
  6843 ;;		Nothing
  6844 ;; This function is called by:
  6845 ;;		_main
  6846 ;;		_noteOn
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           	psect	text23
  6851  00DE4A                     __ptext23:
  6852                           	opt callstack 0
  6853  00DE4A                     _putByteSCI:
  6854                           	opt callstack 30
  6855                           
  6856                           ;incstack = 0
  6857                           ;putByteSCI@writeByte stored from wreg
  6858  00DE4A  6E01               	movwf	putByteSCI@writeByte^0,c
  6859  00DE4C                     l156:
  6860  00DE4C  A89E               	btfss	158,4,c	;volatile
  6861  00DE4E  EF2B  F06F         	goto	u1891
  6862  00DE52  EF2D  F06F         	goto	u1890
  6863  00DE56                     u1891:
  6864  00DE56  EF26  F06F         	goto	l156
  6865  00DE5A                     u1890:
  6866  00DE5A                     
  6867                           ;main.c: 287:         PIR1bits.TX1IF = 0;
  6868  00DE5A  989E               	bcf	158,4,c	;volatile
  6869  00DE5C                     
  6870                           ;main.c: 288:         TX1REG = writeByte;
  6871  00DE5C  C001  FFAD         	movff	putByteSCI@writeByte,4013	;volatile
  6872  00DE60  0012               	return		;funcret
  6873  00DE62                     __end_of_putByteSCI:
  6874                           	opt callstack 0
  6875                           
  6876 ;; *************** function _TMR0_WriteTimer *****************
  6877 ;; Defined at:
  6878 ;;		line 115 in file "mcc_generated_files/tmr0.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  timerVal        2    8[COMRAM] unsigned short 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;		None
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		wreg, status,2
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;Total ram usage:        2 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_main
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text24
  6906  00DD62                     __ptext24:
  6907                           	opt callstack 0
  6908  00DD62                     _TMR0_WriteTimer:
  6909                           	opt callstack 30
  6910  00DD62                     
  6911                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
  6912  00DD62  500A               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  6913  00DD64  6ED7               	movwf	215,c	;volatile
  6914  00DD66                     
  6915                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
  6916  00DD66  C009  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  6917  00DD6A  0012               	return		;funcret
  6918  00DD6C                     __end_of_TMR0_WriteTimer:
  6919                           	opt callstack 0
  6920                           
  6921 ;; *************** function _TMR0_ReadTimer *****************
  6922 ;; Defined at:
  6923 ;;		line 102 in file "mcc_generated_files/tmr0.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;		None
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  readVal         2    4[COMRAM] unsigned short 
  6928 ;;  readValHigh     1    7[COMRAM] unsigned char 
  6929 ;;  readValLow      1    6[COMRAM] unsigned char 
  6930 ;; Return value:  Size  Location     Type
  6931 ;;                  2    0[COMRAM] unsigned short 
  6932 ;; Registers used:
  6933 ;;		wreg, status,2
  6934 ;; Tracked objects:
  6935 ;;		On entry : 0/0
  6936 ;;		On exit  : 0/0
  6937 ;;		Unchanged: 0/0
  6938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6940 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;Total ram usage:        8 bytes
  6944 ;; Hardware stack levels used:    1
  6945 ;; This function calls:
  6946 ;;		Nothing
  6947 ;; This function is called by:
  6948 ;;		_main
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           	psect	text25
  6953  00DE7E                     __ptext25:
  6954                           	opt callstack 0
  6955  00DE7E                     _TMR0_ReadTimer:
  6956                           	opt callstack 30
  6957  00DE7E                     
  6958                           ;mcc_generated_files/tmr0.c: 104:     uint16_t readVal;;mcc_generated_files/tmr0.c: 105:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 106:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 108:     readValLow = TMR0L;
  6959  00DE7E  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  6960                           
  6961                           ;mcc_generated_files/tmr0.c: 109:     readValHigh = TMR0H;
  6962  00DE82  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  6963  00DE86                     
  6964                           ;mcc_generated_files/tmr0.c: 110:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  6965  00DE86  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  6966  00DE88  6E03               	movwf	??_TMR0_ReadTimer^0,c
  6967  00DE8A  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  6968  00DE8C  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  6969  00DE8E  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  6970  00DE92                     
  6971                           ;mcc_generated_files/tmr0.c: 112:     return readVal;
  6972  00DE92  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  6973  00DE96  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  6974  00DE9A  0012               	return		;funcret
  6975  00DE9C                     __end_of_TMR0_ReadTimer:
  6976                           	opt callstack 0
  6977                           
  6978 ;; *************** function _TMR0_HasOverflowOccured *****************
  6979 ;; Defined at:
  6980 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;		None
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;		None
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  1    wreg      _Bool 
  6987 ;; Registers used:
  6988 ;;		wreg
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;Total ram usage:        0 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_main
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text26
  7008  00DDB2                     __ptext26:
  7009                           	opt callstack 0
  7010  00DDB2                     _TMR0_HasOverflowOccured:
  7011                           	opt callstack 30
  7012  00DDB2                     
  7013                           ;mcc_generated_files/tmr0.c: 132:     return(INTCONbits.TMR0IF);
  7014  00DDB2  B4F2               	btfsc	242,2,c	;volatile
  7015  00DDB4  EFDE  F06E         	goto	u1921
  7016  00DDB8  EFE1  F06E         	goto	u1920
  7017  00DDBC                     u1921:
  7018  00DDBC  0E01               	movlw	1
  7019  00DDBE  EFE2  F06E         	goto	u1926
  7020  00DDC2                     u1920:
  7021  00DDC2  0E00               	movlw	0
  7022  00DDC4                     u1926:
  7023  00DDC4  0012               	return		;funcret
  7024  00DDC6                     __end_of_TMR0_HasOverflowOccured:
  7025                           	opt callstack 0
  7026                           
  7027 ;; *************** function _SYSTEM_Initialize *****************
  7028 ;; Defined at:
  7029 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;		None
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;		None
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  1    wreg      void 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2, status,0, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;Total ram usage:        0 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:    2
  7050 ;; This function calls:
  7051 ;;		_ADC_Initialize
  7052 ;;		_EUSART1_Initialize
  7053 ;;		_OSCILLATOR_Initialize
  7054 ;;		_PIN_MANAGER_Initialize
  7055 ;;		_TMR0_Initialize
  7056 ;; This function is called by:
  7057 ;;		_main
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text27
  7062  00DDF0                     __ptext27:
  7063                           	opt callstack 0
  7064  00DDF0                     _SYSTEM_Initialize:
  7065                           	opt callstack 28
  7066  00DDF0                     
  7067                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7068  00DDF0  EC89  F06F         	call	_PIN_MANAGER_Initialize	;wreg free
  7069                           
  7070                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7071  00DDF4  EC31  F06F         	call	_OSCILLATOR_Initialize	;wreg free
  7072                           
  7073                           ;mcc_generated_files/mcc.c: 55:     ADC_Initialize();
  7074  00DDF8  ECED  F06E         	call	_ADC_Initialize	;wreg free
  7075  00DDFC                     
  7076                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  7077  00DDFC  EC9E  F06F         	call	_TMR0_Initialize	;wreg free
  7078  00DE00                     
  7079                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  7080  00DE00  ECEA  F06F         	call	_EUSART1_Initialize	;wreg free
  7081  00DE04  0012               	return		;funcret
  7082  00DE06                     __end_of_SYSTEM_Initialize:
  7083                           	opt callstack 0
  7084                           
  7085 ;; *************** function _TMR0_Initialize *****************
  7086 ;; Defined at:
  7087 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;		None
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;		None
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  1    wreg      void 
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7105 ;;Total ram usage:        2 bytes
  7106 ;; Hardware stack levels used:    1
  7107 ;; This function calls:
  7108 ;;		Nothing
  7109 ;; This function is called by:
  7110 ;;		_SYSTEM_Initialize
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           
  7114                           	psect	text28
  7115  00DF3C                     __ptext28:
  7116                           	opt callstack 0
  7117  00DF3C                     _TMR0_Initialize:
  7118                           	opt callstack 29
  7119  00DF3C                     
  7120                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
  7121  00DF3C  9CD5               	bcf	213,6,c	;volatile
  7122  00DF3E                     
  7123                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFC;
  7124  00DF3E  0EFC               	movlw	252
  7125  00DF40  6ED7               	movwf	215,c	;volatile
  7126                           
  7127                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x17;
  7128  00DF42  0E17               	movlw	23
  7129  00DF44  6ED6               	movwf	214,c	;volatile
  7130  00DF46                     
  7131                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  7132  00DF46  50D6               	movf	214,w,c	;volatile
  7133  00DF48  CFD7 F001          	movff	4055,??_TMR0_Initialize	;volatile
  7134  00DF4C  6A02               	clrf	(??_TMR0_Initialize+1)^0,c
  7135  00DF4E  C001  F002         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  7136  00DF52  6A01               	clrf	??_TMR0_Initialize^0,c
  7137  00DF54  1001               	iorwf	??_TMR0_Initialize^0,w,c
  7138  00DF56  0100               	movlb	0	; () banked
  7139  00DF58  6FD0               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  7140  00DF5A  5002               	movf	(??_TMR0_Initialize+1)^0,w,c
  7141  00DF5C  6FD1               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  7142  00DF5E                     
  7143                           ; BSR set to: 0
  7144                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
  7145  00DF5E  94F2               	bcf	242,2,c	;volatile
  7146  00DF60                     
  7147                           ; BSR set to: 0
  7148                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x93;
  7149  00DF60  0E93               	movlw	147
  7150  00DF62  6ED5               	movwf	213,c	;volatile
  7151  00DF64                     
  7152                           ; BSR set to: 0
  7153  00DF64  0012               	return		;funcret
  7154  00DF66                     __end_of_TMR0_Initialize:
  7155                           	opt callstack 0
  7156                           
  7157 ;; *************** function _PIN_MANAGER_Initialize *****************
  7158 ;; Defined at:
  7159 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;		None
  7162 ;; Auto vars:     Size  Location     Type
  7163 ;;		None
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  1    wreg      void 
  7166 ;; Registers used:
  7167 ;;		wreg, status,2
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7177 ;;Total ram usage:        0 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_SYSTEM_Initialize
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text29
  7187  00DF12                     __ptext29:
  7188                           	opt callstack 0
  7189  00DF12                     _PIN_MANAGER_Initialize:
  7190                           	opt callstack 29
  7191  00DF12                     
  7192                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7193  00DF12  0E00               	movlw	0
  7194  00DF14  6E89               	movwf	137,c	;volatile
  7195                           
  7196                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7197  00DF16  0E00               	movlw	0
  7198  00DF18  6E8A               	movwf	138,c	;volatile
  7199                           
  7200                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7201  00DF1A  0E00               	movlw	0
  7202  00DF1C  6E8B               	movwf	139,c	;volatile
  7203  00DF1E                     
  7204                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  7205  00DF1E  6892               	setf	146,c	;volatile
  7206  00DF20                     
  7207                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  7208  00DF20  6893               	setf	147,c	;volatile
  7209                           
  7210                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  7211  00DF22  0EBB               	movlw	187
  7212  00DF24  6E94               	movwf	148,c	;volatile
  7213                           
  7214                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  7215  00DF26  0E3C               	movlw	60
  7216  00DF28  010F               	movlb	15	; () banked
  7217  00DF2A  6F3A               	movwf	58,b	;volatile
  7218                           
  7219                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  7220  00DF2C  0E3F               	movlw	63
  7221  00DF2E  6F39               	movwf	57,b	;volatile
  7222                           
  7223                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x23;
  7224  00DF30  0E23               	movlw	35
  7225  00DF32  6F38               	movwf	56,b	;volatile
  7226                           
  7227                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7228  00DF34  0E00               	movlw	0
  7229  00DF36  6E61               	movwf	97,c	;volatile
  7230  00DF38                     
  7231                           ; BSR set to: 15
  7232                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  7233  00DF38  8EF1               	bsf	241,7,c	;volatile
  7234  00DF3A                     
  7235                           ; BSR set to: 15
  7236  00DF3A  0012               	return		;funcret
  7237  00DF3C                     __end_of_PIN_MANAGER_Initialize:
  7238                           	opt callstack 0
  7239                           
  7240 ;; *************** function _OSCILLATOR_Initialize *****************
  7241 ;; Defined at:
  7242 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;		None
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  1    wreg      void 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7260 ;;Total ram usage:        0 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; This function calls:
  7263 ;;		Nothing
  7264 ;; This function is called by:
  7265 ;;		_SYSTEM_Initialize
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           	psect	text30
  7270  00DE62                     __ptext30:
  7271                           	opt callstack 0
  7272  00DE62                     _OSCILLATOR_Initialize:
  7273                           	opt callstack 29
  7274  00DE62                     
  7275                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  7276  00DE62  0E70               	movlw	112
  7277  00DE64  6ED3               	movwf	211,c	;volatile
  7278                           
  7279                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x04;
  7280  00DE66  0E04               	movlw	4
  7281  00DE68  6ED2               	movwf	210,c	;volatile
  7282                           
  7283                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x40;
  7284  00DE6A  0E40               	movlw	64
  7285  00DE6C  6E9B               	movwf	155,c	;volatile
  7286  00DE6E                     l320:
  7287                           
  7288                           ;mcc_generated_files/mcc.c: 69:     while(PLLRDY == 0)
  7289  00DE6E  AED2               	btfss	4050,7,c	;volatile
  7290  00DE70  EF3C  F06F         	goto	u1901
  7291  00DE74  EF3E  F06F         	goto	u1900
  7292  00DE78                     u1901:
  7293  00DE78  EF37  F06F         	goto	l320
  7294  00DE7C                     u1900:
  7295  00DE7C  0012               	return		;funcret
  7296  00DE7E                     __end_of_OSCILLATOR_Initialize:
  7297                           	opt callstack 0
  7298                           
  7299 ;; *************** function _EUSART1_Initialize *****************
  7300 ;; Defined at:
  7301 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;		None
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;		None
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7319 ;;Total ram usage:        0 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    1
  7322 ;; This function calls:
  7323 ;;		_EUSART1_SetErrorHandler
  7324 ;;		_EUSART1_SetFramingErrorHandler
  7325 ;;		_EUSART1_SetOverrunErrorHandler
  7326 ;; This function is called by:
  7327 ;;		_SYSTEM_Initialize
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           	psect	text31
  7332  00DFD4                     __ptext31:
  7333                           	opt callstack 0
  7334  00DFD4                     _EUSART1_Initialize:
  7335                           	opt callstack 28
  7336  00DFD4                     
  7337                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  7338  00DFD4  0E08               	movlw	8
  7339  00DFD6  6EB8               	movwf	184,c	;volatile
  7340                           
  7341                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  7342  00DFD8  0E90               	movlw	144
  7343  00DFDA  6EAB               	movwf	171,c	;volatile
  7344                           
  7345                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  7346  00DFDC  0E24               	movlw	36
  7347  00DFDE  6EAC               	movwf	172,c	;volatile
  7348                           
  7349                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  7350  00DFE0  0E82               	movlw	130
  7351  00DFE2  6EAF               	movwf	175,c	;volatile
  7352                           
  7353                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  7354  00DFE4  0E06               	movlw	6
  7355  00DFE6  6EB0               	movwf	176,c	;volatile
  7356  00DFE8                     
  7357                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  7358  00DFE8  0E00               	movlw	0
  7359  00DFEA  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  7360  00DFEC  0E00               	movlw	0
  7361  00DFEE  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  7362  00DFF0  ECA7  F06E         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  7363  00DFF4                     
  7364                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  7365  00DFF4  0E00               	movlw	0
  7366  00DFF6  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  7367  00DFF8  0E00               	movlw	0
  7368  00DFFA  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7369  00DFFC  ECAC  F06E         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  7370  00E000                     
  7371                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  7372  00E000  0E00               	movlw	0
  7373  00E002  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  7374  00E004  0E00               	movlw	0
  7375  00E006  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  7376  00E008  ECA2  F06E         	call	_EUSART1_SetErrorHandler	;wreg free
  7377  00E00C                     
  7378                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  7379  00E00C  0E00               	movlw	0
  7380  00E00E  6E5F               	movwf	_eusart1RxLastError^0,c	;volatile
  7381  00E010  0012               	return		;funcret
  7382  00E012                     __end_of_EUSART1_Initialize:
  7383                           	opt callstack 0
  7384                           
  7385 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  7386 ;; Defined at:
  7387 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  7390 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      void 
  7395 ;; Registers used:
  7396 ;;		wreg, status,2, status,0
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7405 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7406 ;;Total ram usage:        2 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; This function calls:
  7409 ;;		Nothing
  7410 ;; This function is called by:
  7411 ;;		_EUSART1_Initialize
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           	psect	text32
  7416  00DD58                     __ptext32:
  7417                           	opt callstack 0
  7418  00DD58                     _EUSART1_SetOverrunErrorHandler:
  7419                           	opt callstack 28
  7420  00DD58                     
  7421                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  7422  00DD58  C001  F0CA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  7423  00DD5C  C002  F0CB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  7424  00DD60  0012               	return		;funcret
  7425  00DD62                     __end_of_EUSART1_SetOverrunErrorHandler:
  7426                           	opt callstack 0
  7427                           
  7428 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  7429 ;; Defined at:
  7430 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  7433 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  1    wreg      void 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2, status,0
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7448 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7449 ;;Total ram usage:        2 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; This function calls:
  7452 ;;		Nothing
  7453 ;; This function is called by:
  7454 ;;		_EUSART1_Initialize
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           	psect	text33
  7459  00DD4E                     __ptext33:
  7460                           	opt callstack 0
  7461  00DD4E                     _EUSART1_SetFramingErrorHandler:
  7462                           	opt callstack 28
  7463  00DD4E                     
  7464                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  7465  00DD4E  C001  F0CC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  7466  00DD52  C002  F0CD         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  7467  00DD56  0012               	return		;funcret
  7468  00DD58                     __end_of_EUSART1_SetFramingErrorHandler:
  7469                           	opt callstack 0
  7470                           
  7471 ;; *************** function _EUSART1_SetErrorHandler *****************
  7472 ;; Defined at:
  7473 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  7476 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      void 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7492 ;;Total ram usage:        2 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; This function calls:
  7495 ;;		Nothing
  7496 ;; This function is called by:
  7497 ;;		_EUSART1_Initialize
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           	psect	text34
  7502  00DD44                     __ptext34:
  7503                           	opt callstack 0
  7504  00DD44                     _EUSART1_SetErrorHandler:
  7505                           	opt callstack 28
  7506  00DD44                     
  7507                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  7508  00DD44  C001  F0C8         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  7509  00DD48  C002  F0C9         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  7510  00DD4C  0012               	return		;funcret
  7511  00DD4E                     __end_of_EUSART1_SetErrorHandler:
  7512                           	opt callstack 0
  7513                           
  7514 ;; *************** function _ADC_Initialize *****************
  7515 ;; Defined at:
  7516 ;;		line 62 in file "mcc_generated_files/adc.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;		None
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  1    wreg      void 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;Total ram usage:        0 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; This function calls:
  7537 ;;		Nothing
  7538 ;; This function is called by:
  7539 ;;		_SYSTEM_Initialize
  7540 ;; This function uses a non-reentrant model
  7541 ;;
  7542                           
  7543                           	psect	text35
  7544  00DDDA                     __ptext35:
  7545                           	opt callstack 0
  7546  00DDDA                     _ADC_Initialize:
  7547                           	opt callstack 29
  7548  00DDDA                     
  7549                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
  7550  00DDDA  0E01               	movlw	1
  7551  00DDDC  6EC2               	movwf	194,c	;volatile
  7552                           
  7553                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
  7554  00DDDE  0E00               	movlw	0
  7555  00DDE0  6EC1               	movwf	193,c	;volatile
  7556                           
  7557                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0x26;
  7558  00DDE2  0E26               	movlw	38
  7559  00DDE4  6EC0               	movwf	192,c	;volatile
  7560                           
  7561                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  7562  00DDE6  0E00               	movlw	0
  7563  00DDE8  6EC3               	movwf	195,c	;volatile
  7564                           
  7565                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  7566  00DDEA  0E00               	movlw	0
  7567  00DDEC  6EC4               	movwf	196,c	;volatile
  7568  00DDEE  0012               	return		;funcret
  7569  00DDF0                     __end_of_ADC_Initialize:
  7570                           	opt callstack 0
  7571                           
  7572 ;; *************** function _EUSART1_is_rx_ready *****************
  7573 ;; Defined at:
  7574 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;		None
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;		None
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1    wreg      _Bool 
  7581 ;; Registers used:
  7582 ;;		wreg
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7592 ;;Total ram usage:        0 bytes
  7593 ;; Hardware stack levels used:    1
  7594 ;; This function calls:
  7595 ;;		Nothing
  7596 ;; This function is called by:
  7597 ;;		_main
  7598 ;; This function uses a non-reentrant model
  7599 ;;
  7600                           
  7601                           	psect	text36
  7602  00DD9E                     __ptext36:
  7603                           	opt callstack 0
  7604  00DD9E                     _EUSART1_is_rx_ready:
  7605                           	opt callstack 30
  7606  00DD9E                     
  7607                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  7608  00DD9E  BA9E               	btfsc	158,5,c	;volatile
  7609  00DDA0  EFD4  F06E         	goto	u1951
  7610  00DDA4  EFD7  F06E         	goto	u1950
  7611  00DDA8                     u1951:
  7612  00DDA8  0E01               	movlw	1
  7613  00DDAA  EFD8  F06E         	goto	u1956
  7614  00DDAE                     u1950:
  7615  00DDAE  0E00               	movlw	0
  7616  00DDB0                     u1956:
  7617  00DDB0  0012               	return		;funcret
  7618  00DDB2                     __end_of_EUSART1_is_rx_ready:
  7619                           	opt callstack 0
  7620                           
  7621 ;; *************** function _EUSART1_Read *****************
  7622 ;; Defined at:
  7623 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;		None
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;		None
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      unsigned char 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7641 ;;Total ram usage:        0 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		_main
  7647 ;;		_getch
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           	psect	text37
  7652  00DEC2                     __ptext37:
  7653                           	opt callstack 0
  7654  00DEC2                     _EUSART1_Read:
  7655                           	opt callstack 30
  7656  00DEC2                     l262:
  7657                           
  7658                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  7659  00DEC2  AA9E               	btfss	158,5,c	;volatile
  7660  00DEC4  EF66  F06F         	goto	u1961
  7661  00DEC8  EF68  F06F         	goto	u1960
  7662  00DECC                     u1961:
  7663  00DECC  EF61  F06F         	goto	l262
  7664  00DED0                     u1960:
  7665  00DED0                     
  7666                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7667  00DED0  0E00               	movlw	0
  7668  00DED2  6E5F               	movwf	_eusart1RxLastError^0,c	;volatile
  7669  00DED4                     
  7670                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  7671  00DED4  A2AB               	btfss	171,1,c	;volatile
  7672  00DED6  EF6F  F06F         	goto	u1971
  7673  00DEDA  EF71  F06F         	goto	u1970
  7674  00DEDE                     u1971:
  7675  00DEDE  EF73  F06F         	goto	l2610
  7676  00DEE2                     u1970:
  7677  00DEE2                     
  7678                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  7679  00DEE2  98AB               	bcf	171,4,c	;volatile
  7680                           
  7681                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  7682  00DEE4  88AB               	bsf	171,4,c	;volatile
  7683  00DEE6                     l2610:
  7684                           
  7685                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  7686  00DEE6  50AE               	movf	174,w,c	;volatile
  7687  00DEE8  0012               	return		;funcret
  7688  00DEEA                     __end_of_EUSART1_Read:
  7689                           	opt callstack 0
  7690                           
  7691 ;; *************** function _ADC_StartConversion *****************
  7692 ;; Defined at:
  7693 ;;		line 91 in file "mcc_generated_files/adc.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;		None
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1    wreg      void 
  7700 ;; Registers used:
  7701 ;;		None
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7711 ;;Total ram usage:        0 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;;		_main
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text38
  7721  00DD40                     __ptext38:
  7722                           	opt callstack 0
  7723  00DD40                     _ADC_StartConversion:
  7724                           	opt callstack 30
  7725  00DD40                     
  7726                           ;mcc_generated_files/adc.c: 94:     ADCON0bits.GO_nDONE = 1;
  7727  00DD40  82C2               	bsf	194,1,c	;volatile
  7728  00DD42  0012               	return		;funcret
  7729  00DD44                     __end_of_ADC_StartConversion:
  7730                           	opt callstack 0
  7731                           
  7732 ;; *************** function _ADC_SelectChannel *****************
  7733 ;; Defined at:
  7734 ;;		line 83 in file "mcc_generated_files/adc.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  channel         1    wreg     enum E5751
  7737 ;; Auto vars:     Size  Location     Type
  7738 ;;  channel         1    1[COMRAM] enum E5751
  7739 ;; Return value:  Size  Location     Type
  7740 ;;                  1    wreg      void 
  7741 ;; Registers used:
  7742 ;;		wreg, status,2, status,0
  7743 ;; Tracked objects:
  7744 ;;		On entry : 0/0
  7745 ;;		On exit  : 0/0
  7746 ;;		Unchanged: 0/0
  7747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7750 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7752 ;;Total ram usage:        2 bytes
  7753 ;; Hardware stack levels used:    1
  7754 ;; This function calls:
  7755 ;;		Nothing
  7756 ;; This function is called by:
  7757 ;;		_main
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           	psect	text39
  7762  00DE32                     __ptext39:
  7763                           	opt callstack 0
  7764  00DE32                     _ADC_SelectChannel:
  7765                           	opt callstack 30
  7766                           
  7767                           ;incstack = 0
  7768                           ;ADC_SelectChannel@channel stored from wreg
  7769  00DE32  6E02               	movwf	ADC_SelectChannel@channel^0,c
  7770  00DE34                     
  7771                           ;mcc_generated_files/adc.c: 83: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 84: {;mcc_generated_files/adc.c: 86:     ADCON0bits.CHS = channel;
  7772  00DE34  C002  F001         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  7773  00DE38  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  7774  00DE3A  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  7775  00DE3C  50C2               	movf	194,w,c	;volatile
  7776  00DE3E  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  7777  00DE40  0B83               	andlw	-125
  7778  00DE42  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  7779  00DE44  6EC2               	movwf	194,c	;volatile
  7780  00DE46                     
  7781                           ;mcc_generated_files/adc.c: 88:     ADCON0bits.ADON = 1;
  7782  00DE46  80C2               	bsf	194,0,c	;volatile
  7783  00DE48  0012               	return		;funcret
  7784  00DE4A                     __end_of_ADC_SelectChannel:
  7785                           	opt callstack 0
  7786                           
  7787 ;; *************** function _ADC_IsConversionDone *****************
  7788 ;; Defined at:
  7789 ;;		line 98 in file "mcc_generated_files/adc.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;		None
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;		None
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  1    wreg      _Bool 
  7796 ;; Registers used:
  7797 ;;		wreg
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;Total ram usage:        0 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; This function calls:
  7810 ;;		Nothing
  7811 ;; This function is called by:
  7812 ;;		_main
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816                           	psect	text40
  7817  00DD8A                     __ptext40:
  7818                           	opt callstack 0
  7819  00DD8A                     _ADC_IsConversionDone:
  7820                           	opt callstack 30
  7821  00DD8A                     
  7822                           ;mcc_generated_files/adc.c: 101:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  7823  00DD8A  A2C2               	btfss	194,1,c	;volatile
  7824  00DD8C  EFCA  F06E         	goto	u1931
  7825  00DD90  EFCD  F06E         	goto	u1930
  7826  00DD94                     u1931:
  7827  00DD94  0E01               	movlw	1
  7828  00DD96  EFCE  F06E         	goto	u1940
  7829  00DD9A                     u1930:
  7830  00DD9A  0E00               	movlw	0
  7831  00DD9C                     u1940:
  7832  00DD9C  0012               	return		;funcret
  7833  00DD9E                     __end_of_ADC_IsConversionDone:
  7834                           	opt callstack 0
  7835                           
  7836 ;; *************** function _ADC_GetConversionResult *****************
  7837 ;; Defined at:
  7838 ;;		line 104 in file "mcc_generated_files/adc.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;		None
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  2    0[COMRAM] unsigned short 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2, status,0
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7855 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7856 ;;Total ram usage:        4 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; This function calls:
  7859 ;;		Nothing
  7860 ;; This function is called by:
  7861 ;;		_main
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           	psect	text41
  7866  00DD76                     __ptext41:
  7867                           	opt callstack 0
  7868  00DD76                     _ADC_GetConversionResult:
  7869                           	opt callstack 30
  7870  00DD76                     
  7871                           ;mcc_generated_files/adc.c: 107:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7872  00DD76  50C4               	movf	196,w,c	;volatile
  7873  00DD78  6E04               	movwf	(??_ADC_GetConversionResult+1)^0,c
  7874  00DD7A  6A03               	clrf	??_ADC_GetConversionResult^0,c
  7875  00DD7C  50C3               	movf	195,w,c	;volatile
  7876  00DD7E  2403               	addwf	??_ADC_GetConversionResult^0,w,c
  7877  00DD80  6E01               	movwf	?_ADC_GetConversionResult^0,c
  7878  00DD82  0E00               	movlw	0
  7879  00DD84  2004               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
  7880  00DD86  6E02               	movwf	(?_ADC_GetConversionResult+1)^0,c
  7881  00DD88  0012               	return		;funcret
  7882  00DD8A                     __end_of_ADC_GetConversionResult:
  7883                           	opt callstack 0
  7884                           
  7885                           	psect	rparam
  7886  0000                     tosu	equ	0xFFF
  7887                           tosh	equ	0xFFE
  7888                           tosl	equ	0xFFD
  7889                           stkptr	equ	0xFFC
  7890                           pclatu	equ	0xFFB
  7891                           pclath	equ	0xFFA
  7892                           pcl	equ	0xFF9
  7893                           tblptru	equ	0xFF8
  7894                           tblptrh	equ	0xFF7
  7895                           tblptrl	equ	0xFF6
  7896                           tablat	equ	0xFF5
  7897                           prodh	equ	0xFF4
  7898                           prodl	equ	0xFF3
  7899                           indf0	equ	0xFEF
  7900                           postinc0	equ	0xFEE
  7901                           postdec0	equ	0xFED
  7902                           preinc0	equ	0xFEC
  7903                           plusw0	equ	0xFEB
  7904                           fsr0h	equ	0xFEA
  7905                           fsr0l	equ	0xFE9
  7906                           wreg	equ	0xFE8
  7907                           indf1	equ	0xFE7
  7908                           postinc1	equ	0xFE6
  7909                           postdec1	equ	0xFE5
  7910                           preinc1	equ	0xFE4
  7911                           plusw1	equ	0xFE3
  7912                           fsr1h	equ	0xFE2
  7913                           fsr1l	equ	0xFE1
  7914                           bsr	equ	0xFE0
  7915                           indf2	equ	0xFDF
  7916                           postinc2	equ	0xFDE
  7917                           postdec2	equ	0xFDD
  7918                           preinc2	equ	0xFDC
  7919                           plusw2	equ	0xFDB
  7920                           fsr2h	equ	0xFDA
  7921                           fsr2l	equ	0xFD9
  7922                           status	equ	0xFD8


Data Sizes:
    Strings     1614
    Constant    0
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     96     146
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_58(CODE[17]), STR_57(CODE[50]), STR_56(CODE[25]), STR_55(CODE[38]), 
		 -> STR_54(CODE[41]), STR_53(CODE[42]), STR_52(CODE[67]), STR_51(CODE[68]), 
		 -> STR_50(CODE[52]), STR_49(CODE[48]), STR_48(CODE[42]), STR_47(CODE[26]), 
		 -> STR_46(CODE[31]), STR_45(CODE[35]), STR_44(CODE[37]), STR_43(CODE[15]), 
		 -> STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), STR_39(CODE[20]), 
		 -> STR_38(CODE[23]), STR_37(CODE[26]), STR_36(CODE[38]), STR_35(CODE[29]), 
		 -> STR_34(CODE[20]), STR_33(CODE[3]), STR_32(CODE[5]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[41]), STR_28(CODE[17]), STR_27(CODE[36]), 
		 -> STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), STR_19(CODE[27]), 
		 -> STR_18(CODE[68]), STR_17(CODE[49]), STR_16(CODE[48]), STR_15(CODE[38]), 
		 -> STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), STR_7(CODE[17]), 
		 -> STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[22]), 
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1538_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_58(CODE[17]), STR_57(CODE[50]), STR_56(CODE[25]), STR_55(CODE[38]), 
		 -> STR_54(CODE[41]), STR_53(CODE[42]), STR_52(CODE[67]), STR_51(CODE[68]), 
		 -> STR_50(CODE[52]), STR_49(CODE[48]), STR_48(CODE[42]), STR_47(CODE[26]), 
		 -> STR_46(CODE[31]), STR_45(CODE[35]), STR_44(CODE[37]), STR_43(CODE[15]), 
		 -> STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), STR_39(CODE[20]), 
		 -> STR_38(CODE[23]), STR_37(CODE[26]), STR_36(CODE[38]), STR_35(CODE[29]), 
		 -> STR_34(CODE[20]), STR_33(CODE[3]), STR_32(CODE[5]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[41]), STR_28(CODE[17]), STR_27(CODE[36]), 
		 -> STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), STR_19(CODE[27]), 
		 -> STR_18(CODE[68]), STR_17(CODE[49]), STR_16(CODE[48]), STR_15(CODE[38]), 
		 -> STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), STR_7(CODE[17]), 
		 -> STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[22]), 
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_58(CODE[17]), STR_57(CODE[50]), STR_56(CODE[25]), STR_55(CODE[38]), 
		 -> STR_54(CODE[41]), STR_53(CODE[42]), STR_52(CODE[67]), STR_51(CODE[68]), 
		 -> STR_50(CODE[52]), STR_49(CODE[48]), STR_48(CODE[42]), STR_47(CODE[26]), 
		 -> STR_46(CODE[31]), STR_45(CODE[35]), STR_44(CODE[37]), STR_43(CODE[15]), 
		 -> STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), STR_39(CODE[20]), 
		 -> STR_38(CODE[23]), STR_37(CODE[26]), STR_36(CODE[38]), STR_35(CODE[29]), 
		 -> STR_34(CODE[20]), STR_33(CODE[3]), STR_32(CODE[5]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[41]), STR_28(CODE[17]), STR_27(CODE[36]), 
		 -> STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), STR_19(CODE[27]), 
		 -> STR_18(CODE[68]), STR_17(CODE[49]), STR_16(CODE[48]), STR_15(CODE[38]), 
		 -> STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), STR_7(CODE[17]), 
		 -> STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[22]), 
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 74
		 -> STR_58(CODE[17]), STR_57(CODE[50]), STR_56(CODE[25]), STR_55(CODE[38]), 
		 -> STR_54(CODE[41]), STR_53(CODE[42]), STR_52(CODE[67]), STR_51(CODE[68]), 
		 -> STR_50(CODE[52]), STR_49(CODE[48]), STR_48(CODE[42]), STR_47(CODE[26]), 
		 -> STR_46(CODE[31]), STR_45(CODE[35]), STR_44(CODE[37]), STR_43(CODE[15]), 
		 -> STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), STR_39(CODE[20]), 
		 -> STR_38(CODE[23]), STR_37(CODE[26]), STR_36(CODE[38]), STR_35(CODE[29]), 
		 -> STR_34(CODE[20]), STR_33(CODE[3]), STR_32(CODE[5]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[41]), STR_28(CODE[17]), STR_27(CODE[36]), 
		 -> STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), STR_19(CODE[27]), 
		 -> STR_18(CODE[68]), STR_17(CODE[49]), STR_16(CODE[48]), STR_15(CODE[38]), 
		 -> STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), STR_7(CODE[17]), 
		 -> STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[22]), 
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _noteOn->_putByteSCI
    _TMR0_WriteTimer->_TMR0_ReadTimer
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                78    78      0   22535
                                             18 BANK0     78    78      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                     _TMR0_ReadTimer
                    _TMR0_WriteTimer
                             _noteOn
                             _printf
                         _putByteSCI
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   20462
                                              8 BANK0     10     4      6
            _ADC_GetConversionResult (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   15994
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   15626
                                             65 COMRAM    29    23      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4171
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4770
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3341
                                             29 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3121
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     812
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1336
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     495
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _noteOn                                               3     1      2     392
                                              1 COMRAM     3     1      2
                         _putByteSCI
 ---------------------------------------------------------------------------------
 (1) _putByteSCI                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     272
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_ReadTimer
   _TMR0_WriteTimer
     _TMR0_ReadTimer (ARG)
   _noteOn
     _putByteSCI
   _printf
     _ADC_GetConversionResult (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
   _putByteSCI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     60      92       5       91.3%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F1      12        0.0%
DATA                 0      0      F1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 02 10:31:32 2020

               __end_of_TMR0_HasOverflowOccured DDC6                                              l15 DF64  
                                            l24 DE9A                                              l33 DDC4  
                                            l27 DD6A                                              l85 F3F2  
                           ___wmul@multiplicand 0003                                 _timer0ReloadVal 00D0  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                   __CFG_LVP$ON 000000                                             l112 F55A  
                                           l141 F87A                                             l320 DE6E  
                                           l162 DE1A                                             l402 EBEA  
                                           l323 DE7C                                             l156 DE4C  
                                           l404 EBF2                                             l253 DDB0  
                                           l181 DDEE                                             l245 E010  
                                           l317 DE04                                             l190 DD9C  
                                           l262 DEC2                                             l350 DF3A  
                                           l158 DE5A                                             l422 EE2A  
                                           l159 DE60                                             l184 DE48  
                                           l272 DE30                                             l193 DD88  
                                           l266 DEE8                                             l290 DD56  
                                           l187 DD42                                             l427 E980  
                                           l452 F204                                             l293 DD60  
                                           l269 DE1E                                             l437 EB48  
                                           l429 E988                                             l278 DD74  
                                           l462 E19C                                             l463 E1A4  
                                           l296 DD4C                                             l384 E282  
                                           l466 DEC0                                             l387 E2C4  
                                           l396 E140                                             l580 E7AC  
                                           l389 E300                                             l911 E4C0  
                                           l904 E4A0                                             l593 E624  
                                           l921 E3D0                                             l914 E3B0  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                                           _abs E012                                             _pad E23C  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1201 E23A                                            ?_abs 0013  
                                          l2100 DF66                                            l1141 E048  
                                          l1222 DF9A                                            l2102 DF72  
                                          l2110 E23C                                            l2104 DF76  
                                          l2120 E28E                                            l2112 E24C  
                                          l2200 E506                                            l1144 E050  
                                          l1216 DF10                                            l1209 E094  
                                          l2106 DF8E                                            l2122 E2A2  
                                          l2114 E260                                            l2210 E56E  
                                          l2202 E526                                            l2140 DE9C  
                                          l1172 E93E                                            l2124 E2A6  
                                          l2116 E26E                                            l2220 E5E4  
                                          l2212 E59C                                            l2204 E544  
                                          l2132 E012                                            l2300 EBC4  
                                          l2142 DEB8                                            l2126 E2D4  
                                          l2118 E27A                                            l2150 E638  
                                          l2222 E604                                            l2214 E5BC  
                                          l2206 E54C                                            l2134 E02C  
                                          l2310 EC20                                            l2302 EBDE  
                                          l2230 E3FC                                            l1175 E946  
                                          l2136 DF9C                                            l2400 E824  
                                          l2072 DE1E                                            l2080 E1B8  
                                          l2128 E2E8                                            l2160 E68E  
                                          l2152 E658                                            l2216 E5CE  
                                          l2208 E560                                            l2320 ECBE  
                                          l2312 EC28                                            l2304 EBFA  
                                          l2240 E466                                            l2232 E404  
                                          l1178 DFD2                                            l1186 E0E6  
                                          l2410 E850                                            l2074 DE2C  
                                          l2082 E1CA                                            l2170 E6E2  
                                          l2162 E69A                                            l2154 E65C  
                                          l2146 E626                                            l2218 E5D4  
                                          l2330 ED7A                                            l2322 ECC4  
                                          l2314 EC30                                            l2306 EC0C  
                                          l2242 E486                                            l2234 E418  
                                          l2226 E3D2                                            l2250 E320  
                                          l2420 E8FE                                            l2412 E886  
                                          l2404 E82A                                            l2076 DD6E  
                                          l2084 E1D4                                            l2092 E052  
                                          l2180 E756                                            l2172 E6F4  
                                          l2164 E6B8                                            l2156 E66A  
                                          l2148 E62A                                            l2340 EDCC  
                                          l2332 ED94                                            l2316 EC36  
                                          l2324 ED28                                            l2308 EC1A  
                                          l2244 E488                                            l2236 E426  
                                          l2228 E3DE                                            l2260 E398  
                                          l2252 E328                                            l2500 F1C0  
                                          l2430 DD4E                                            l2270 E0DC  
                                          l2422 E910                                            l2406 E840  
                                          l2086 E1F2                                            l2078 E1A6  
                                          l2094 E05E                                            l2174 E722  
                                          l2166 E6C0                                            l2182 E75C  
                                          l2158 E68A                                            l2190 E4C2  
                                          l2342 EDDE                                            l2326 ED42  
                                          l2334 EDA4                                            l2318 ECB8  
                                          l2246 E49A                                            l2238 E438  
                                          l2262 E3AA                                            l2254 E33C  
                                          l2432 DD58                                            l2520 DF60  
                                          l2512 DF3C                                            l2272 E0E0  
                                          l2264 E096                                            l2424 E922  
                                          l2416 E8BE                                            l2408 E848  
                                          l2088 E228                                            l2096 E070  
                                          l2280 E108                                            l2184 E76C  
                                          l2176 E742                                            l2168 E6D4  
                                          l2192 E4C6                                            l2344 EDEA  
                                          l2336 EDB6                                            l2328 ED60  
                                          l2256 E34A                                            l2248 E302  
                                          l2360 E9B0                                            l2352 E948  
                                          l2440 EE60                                            l2504 F1CC  
                                          l2610 DEE6                                            l2602 DEC2  
                                          l2434 DD44                                            l2530 DFE8  
                                          l2514 DF3E                                            l2522 DE4C  
                                          l2266 E09A                                            l2098 E074  
                                          l2282 E114                                            l2186 E78C  
                                          l2178 E744                                            l2194 E4D4  
                                          l2346 EDF2                                            l2338 EDC6  
                                          l2290 EB4A                                            l2258 E378  
                                          l2370 EA42                                            l2362 E9B8  
                                          l2354 E958                                            l2506 F1F2  
                                          l2450 EEE0                                            l2442 EE72  
                                          l2604 DED0                                            l2532 DFF4  
                                          l2540 DF1E                                            l2516 DF46  
                                          l2524 DE5C                                            l2268 E0AE  
                                          l2284 E118                                            l2276 E0E8  
                                          l2196 E4F4                                            l2348 EE02  
                                          l2292 EB6A                                            l2380 EAF6  
                                          l2372 EA48                                            l2364 E9C0  
                                          l2356 E95A                                            l2460 EF64  
                                          l2452 EEEE                                            l2444 EE76  
                                          l2436 EE2C                                            l2700 F4E4  
                                          l2620 F206                                            l2606 DED4  
                                          l2526 DDDA                                            l2534 E000  
                                          l2542 DF20                                            l2518 DF5E  
                                          l2614 DE08                                            l2390 E7C2  
                                          l2286 E11C                                            l2278 E0FC  
                                          l2198 E4F8                                            l2294 EB92  
                                          l2382 EB10                                            l2366 E9C6  
                                          l2374 EAAC                                            l2358 E974  
                                          l2470 EFEA                                            l2454 EF0E  
                                          l2462 EF76                                            l2446 EE9C  
                                          l2438 EE52                                            l2550 E14A  
                                          l2710 F526                                            l2702 F4F6  
                                          l2630 F246                                            l2622 F220  
                                          l2608 DEE2                                            l2536 E00C  
                                          l2528 DFD4                                            l2544 DF38  
                                          l2560 DE92                                            l2392 E7C6  
                                          l2296 EBB2                                            l2376 EABE  
                                          l2384 EB20                                            l2368 EA3C  
                                          l2480 F0B6                                            l2472 F010  
                                          l2464 EF9C                                            l2456 EF1C  
                                          l2448 EED2                                            l2552 E158  
                                          l2800 F89A                                            l2720 F562  
                                          l2712 F532                                            l2704 F4FC  
                                          l2640 F28A                                            l2632 F254  
                                          l2624 F224                                            l2546 DE62  
                                          l2538 DF12                                            l2394 E7CA  
                                          l2298 EBC2                                            l2378 EADC  
                                          l2490 F184                                            l2482 F0DC  
                                          l2474 F036                                            l2466 EFCE  
                                          l2554 E17E                                            l2810 F8D8  
                                          l2802 F8AE                                            l2730 F5C4  
                                          l2722 F576                                            l2714 F53A  
                                          l2706 F4FE                                            l2642 F29E  
                                          l2634 F262                                            l2626 F22A  
                                          l2580 DE46                                            l2572 DDF0  
                                          l2556 DE7E                                            l2564 DD62  
                                          l2396 E7E8                                            l2388 E7AE  
                                          l2492 F192                                            l2484 F126  
                                          l2476 F07E                                            l2548 E142  
                                          l2812 F8E8                                            l2804 F8B0  
                                          l2820 F902                                            l2732 F5C8  
                                          l2724 F594                                            l2716 F55C  
                                          l2708 F514                                            l2660 F3F8  
                                          l2644 F2AA                                            l2636 F266  
                                          l2628 F238                                            l2590 DD8A  
                                          l2574 DDFC                                            l2558 DE86  
                                          l2566 DD66                                            l2398 E820  
                                          l2494 F1A6                                            l2582 DEEA  
                                          l2822 F914                                            l2814 F8EC  
                                          l2806 F8C4                                            l2750 F64C  
                                          l2742 F610                                            l2726 F5A4  
                                          l2734 F5DC                                            l2718 F560  
                                          l2670 F40C                                            l2654 F3D2  
                                          l2646 F3BE                                            l2638 F27A  
                                          l2576 DE00                                            l2568 DDB2  
                                          l2488 F15E                                            l2584 DEF4  
                                          l2816 F8F4                                            l2808 F8D2  
                                          l2760 F67A                                            l2752 F650  
                                          l2744 F62A                                            l2736 F60C  
                                          l2728 F5C2                                            l2680 F448  
                                          l2672 F420                                            l2656 F3DE  
                                          l2648 F3CE                                            l2594 DD76  
                                          l2578 DE34                                            l2498 F1B2  
                                          l2818 F8FA                                            l2770 F6A4  
                                          l2754 F652                                            l2746 F648  
                                          l2690 F4A2                                            l2682 F45C  
                                          l2674 F42C                                            l2666 F3FC  
                                          l2658 F3E2                                            l2826 F92A  
                                          l2588 DD40                                            l2772 F6B4  
                                          l2756 F666                                            l2748 F64A  
                                          l2692 F4A6                                            l2684 F46C  
                                          l2676 F440                                            l2668 F408  
                                          l2598 DD9E                                            l2790 F71A  
                                          l2782 F6C6                                            l2774 F6C0  
                                          l2766 F67E                                            l2758 F66A  
                                          l2694 F4AA                                            l2686 F482  
                                          l2678 F444                                            ?_pad 0013  
                                          l2792 F730                                            l2776 F6C0  
                                          l2768 F6A0                                            l2696 F4BE  
                                          l2688 F48E                                            l2890 E870  
                                          l2794 F870                                            l2786 F708  
                                          l2698 F4CE                                            l2796 F876  
                                          l2788 F70A                                            l2798 F88C  
                                          l2888 F93E                                            STR_1 FF56  
                                          STR_2 FF19                                            STR_3 FEED  
                                          STR_4 FFF5                                            STR_5 FB42  
                                          STR_6 FED6                                            STR_7 FFA1  
                                          STR_8 FC8C                                            STR_9 FB42  
                                          u1120 DE2C                                            u1200 E26E  
                                          u2000 F3F2                                            u1121 DE28  
                                          u1201 E26A                                            u2001 F3EE  
                                          u1130 E1B8                                            u1210 E2C4  
                                          u2010 F41C                                            u1131 E1B4  
                                          u1211 E2C0                                            u2011 F418  
                                          u1140 E1CA                                            u1220 E2D4  
                                          u1300 E6E2                                            u2100 F60C  
                                          u2020 F440                                            u1141 E1C6  
                                          u1221 E2D0                                            u1301 E6DE  
                                          u2101 F608                                            u2021 F43C  
                                          u1150 E1F2                                            u1310 E722  
                                          u1230 E02C                                            u2110 F666  
                                          u2030 F45C                                            u1151 E1EE  
                                          u1311 E71E                                            u1231 E028  
                                          u2111 F662                                            u2031 F458  
                                          u1240 DFCC                                            u1160 E228  
                                          u1320 E76C                                            u1400 E3FC  
                                          u2120 F67A                                            u2040 F4A2  
                                          u1241 DFC6                                            u1161 E224  
                                          u1321 E768                                            u1401 E3F8  
                                          u2121 F676                                            u2041 F49E  
                                          u1250 DFCE                                            u1170 E094  
                                          u1330 E4D4                                            u1410 E426  
                                          u2130 F6B4                                            u2050 F4BE  
                                          u1171 E090                                            u1331 E4D0  
                                          u1411 E422                                            u2131 F6B0  
                                          u2051 F4BA                                            u1180 DF8E  
                                          u1260 E638                                            u1340 E506  
                                          u1500 EB7C                                            u1420 E466  
                                          u2140 F704                                            u2060 F4F6  
                                          u1181 DF8A                                            u1261 E634  
                                          u1341 E502                                            u1421 E462  
                                          u2141 F700                                            u2061 F4F2  
                                          _LATA 000F89                                            u1190 E24C  
                                          u1270 E66A                                            u1350 E544  
                                          u1510 EB92                                            u1430 E320  
                                          u2150 F71A                                            u2070 F526  
                                          _LATB 000F8A                                            u1191 E248  
                                          u1271 E666                                            u1351 E540  
                                          u1511 EB8E                                            u1431 E31C  
                                          u2151 F716                                            u2071 F522  
                                          _LATC 000F8B                                            u1360 E56E  
                                          u1600 EDA4                                            u1520 EBC2  
                                          u1440 E34A                                            u2160 F888  
                                          u2080 F576                                            u1281 E694  
                                          u1361 E56A                                            u1601 EDA0  
                                          u1521 EBBE                                            u1441 E346  
                                          u2161 F884                                            u2081 F572  
                                          u1290 E6B8                                            u1370 E59C  
                                          u1610 EDB6                                            u1530 EBDE  
                                          u1450 E378                                            u2170 F8C4  
                                          u2090 F5DC                                            u1291 E6B4  
                                          u1371 E598                                            u1611 EDB2  
                                          u1531 EBDA                                            u1451 E374  
                                          u2171 F8C0                                            u2091 F5D8  
                                          u1460 E0AE                                            u1380 E5E4  
                                          u1620 EDC6                                            u1540 EC0C  
                                          u1700 EB20                                            u2180 F8E8  
                                          u1461 E0AA                                            u1381 E5E0  
                                          u1621 EDC2                                            u1541 EC08  
                                          u1701 EB1C                                            u2181 F8E4  
                                          u1470 E0DC                                            u1710 E7E8  
                                          u1630 EDDE                                            u1550 EC1A  
                                          u2190 F910                                            u1471 E0D8  
                                          u1711 E7E4                                            u1631 EDDA  
                                          u1551 EC16                                            u1391 E3D8  
                                          u2191 F90C                                            u1720 E820  
                                          u1480 E0FC                                            u1560 ED42  
                                          u1640 E958                                            u1800 EEE0  
                                          u1721 E81C                                            u1481 E0F8  
                                          u1561 ED3E                                            u1641 E954  
                                          u1801 EEDC                                            u1730 E83C  
                                          u1570 ED60                                            u1490 EB7A  
                                          u1650 E974                                            u1810 EF5E  
                                          u1731 E838                                            u1571 ED5C  
                                          u1491 EB74                                            u1651 E970  
                                          u1811 EF58                                            u1900 DE7C  
                                          u1740 E8F8                                            u1580 ED7A  
                                          u1660 EABE                                            u1820 EF60  
                                          u1901 DE78                                            u1741 E8F2  
                                          u1581 ED76                                            u1661 EABA  
                                          u1750 E8FA                                            u1590 ED94  
                                          u1670 EADC                                            u1830 EF76  
                                          u1910 E19C                                            u1591 ED90  
                                          u1671 EAD8                                            u1831 EF72  
                                          u1911 E198                                            u1920 DDC2  
                                          u1760 E910                                            u1680 EAF6  
                                          u1840 EF9C                                            u1921 DDBC  
                                          u1761 E90C                                            u1681 EAF2  
                                          u1841 EF98                                            u1930 DD9A  
                                          u1770 E922                                            u1690 EB10  
                                          u1850 F010                                            u1931 DD94  
                                          u1771 E91E                                            u1691 EB0C  
                                          u1851 F00C                                            u1940 DD9C  
                                          u1860 F036                                            u1780 EE52  
                                          u1861 F032                                            u1781 EE4E  
                                          u1950 DDAE                                            u1926 DDC4  
                                          u1870 F0DC                                            u1790 EE9C  
                                          u1951 DDA8                                            u1871 F0D8  
                                          u1791 EE98                                            u1960 DED0  
                                          u1880 F184                                            u1961 DECC  
                                          u1881 F180                                            u1970 DEE2  
                                          u1890 DE5A                                            u1971 DEDE  
                                          u1891 DE56                                            u1956 DDB0  
                                          u1980 F27A                                            u1981 F276  
                                          u1990 F29E                                            u1991 F29A  
                                          _WPUB 000F61                                   _EUSART1_Write DE1C  
                                          abs@a 0013                                            _dbuf 00D2  
                                          _atoi E7AE                                            _ctoa E0E8  
                                          _main F206                                            _dtoa EB4A  
                                 ?_EUSART1_Read 0001                                            _prec 00C4  
                                          _nout 00C0                                            pad@i 001A  
                                          pad@p 0017                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 001C  
                                          fsr2l 000FD9                                            _utoa E948  
                                 __CFG_BORV$190 000000                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0000  
                                 __CFG_IESO$OFF 000000                                    ___param_bank 000000  
                                         ??_abs 0015                                           ??_pad 0019  
                       __end_of_TMR0_Initialize DF66                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize DE7E                                 __end_of___aodiv E7AE  
                                         ?_atoi 0008                                           ?_ctoa 001E  
                                         ?_main 0001                                           ?_dtoa 001E  
                               __end_of___aomod E626                                           STR_10 FFD2  
                                         STR_11 FFEE                                           STR_20 FB42  
                                         STR_12 FF03                                           STR_21 FFE1  
                                         STR_13 FE5E                                           STR_22 FD95  
                                         STR_30 FF7D                                           STR_14 FD97  
                                         STR_23 FD95                                           STR_31 FF6A  
                                         STR_15 FD2A                                           STR_32 FFFA  
                                         STR_40 FEBF                                           STR_16 FC09  
                                         STR_24 F9B1                                           STR_33 FB3F  
                                         STR_41 FE90                                           STR_25 FD04  
                                         STR_17 FBA8                                           STR_34 FF42  
                                         STR_42 FE0F                                           STR_50 FB0E  
                                         STR_18 FA43                                           STR_26 F9FB  
                                         STR_43 FFC3                                           STR_19 FDF4  
                                         STR_35 FDD7                                           STR_27 FD50  
                                         STR_51 FA87                                           STR_44 FC67  
                                         STR_36 FC3D                                           STR_28 FFB2  
                                         STR_52 FACB                                           STR_53 FC39  
                                         STR_37 FE44                                           STR_45 FD74  
                                         STR_29 FCB5                                           STR_38 FEA8  
                                         STR_46 FDB8                                           STR_54 FC63  
                                         STR_39 FF2E                                           STR_47 FE2A  
                                         STR_55 FCDE                                           STR_56 FE77  
                                         STR_48 FC39                                           STR_49 FBD9  
                                         STR_57 FB76                                           STR_58 FF90  
                     TMR0_ReadTimer@readValHigh 0008                                           ?_utoa 001E  
                                         _T0CON 000FD5                                 __end_of___lodiv E4C2  
                               __end_of___lomod E3D2                                  __CFG_DEBUG$OFF 000000  
                               _TMR0_WriteTimer DD62                                    vfpfcnvrt@fmt 0044  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 0054  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
              __size_of_ADC_GetConversionResult 0014                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                                         _flags 00C6                                           _fputc E1A6  
                                         _fputs E052                                 __end_of_isdigit DFD4  
                                noteOn@velocity 0003                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0015                                           pad@fp 0013  
                                         atoi@s 0008                                           _width 00C2  
                                         ctoa@c 0020                                           _putch DD6C  
                                         ctoa@w 0021                                           main@i 00BF  
                                         dtoa@d 0020                                           dtoa@i 0040  
                                         dtoa@n 0038                                           dtoa@p 0032  
                                         dtoa@s 0036                                           dtoa@w 0034  
                               __end_of_isspace E0E8                                  ?_EUSART1_Write 0001  
                                         tablat 000FF5                                  ??_EUSART1_Read 0001  
                                         utoa@d 0020                                           utoa@i 003C  
                                         utoa@n 0034                                           utoa@p 0030  
                                         utoa@w 0032                                           status 000FD8  
                                __CFG_HFOFST$ON 000000                                ___lodiv@dividend 0001  
            _EUSART1_DefaultFramingErrorHandler 000000                                  __CFG_PBADEN$ON 000000  
                               __initialization DDC6                                    __end_of_atoi E948  
                                  __end_of_ctoa E142                      __end_of_EUSART1_Initialize E012  
                                  __end_of_main F9B0                                    __end_of_dtoa EE2C  
                                  __end_of_utoa EB4A                                          ??_atoi 000A  
                                        ??_ctoa 0021                                          ??_main 0072  
                                        ??_dtoa 0028                                          ??_utoa 0028  
                                 __activetblptr 000003                                ___lodiv@quotient 0011  
                 __size_of_ADC_IsConversionDone 0014                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0003                                          ?_fputs 000C  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
              __size_of_TMR0_HasOverflowOccured 0014                                          _SPBRG1 000FAF  
                                        _TX1REG 000FAD                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                          main@nominalHallPressed 00B8  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0066  
                                     ??___aodiv 0011                                       ??___aomod 0011  
                                        ___wmul DE9C                                  __CFG_STVREN$ON 000000  
                       __end_of_TMR0_WriteTimer DD6C                                       ??___lodiv 0011  
                                     ??___lomod 0011                        ?_EUSART1_SetErrorHandler 0001  
                              ?_TMR0_Initialize 0001                                          clear_0 DDCC  
                                        _noteOn DE06                                          _printf DEEA  
                                        pad@buf 0015                ??_EUSART1_SetOverrunErrorHandler 0003  
               ?_EUSART1_SetOverrunErrorHandler 0001                                          ctoa@fp 001E  
                                        dtoa@fp 001E                                          _strlen DF66  
                                        fputc@c 0003                                          fputs@c 0010  
                                        fputs@i 0011                                          fputs@s 000C  
                                     ??_isdigit 0003                                    __mediumconst F9B0  
                                     ??_isspace 0003                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf E1A6                                 ??_EUSART1_Write 0001  
                                        utoa@fp 001E                               _SYSTEM_Initialize DDF0  
                                    __accesstop 0060                         __end_of__initialization DDD4  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                  __size_of_ADC_StartConversion 0004                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0003                                   __end_of_fputc E23C  
                                 __end_of_fputs E096                                   __end_of_putch DD76  
                       __size_of_TMR0_ReadTimer 001E                            __end_of_EUSART1_Read DEEA  
                       _ADC_GetConversionResult DD76                                         ??_fputc 0007  
                     __end_of_SYSTEM_Initialize DE06                                         ??_fputs 0010  
                                       ??_putch 0002                                      __pbssBANK0 00C0  
                               __CFG_PLLCFG$OFF 000000                 __end_of_EUSART1_SetErrorHandler DD4E  
                            __CFG_CCP2MX$PORTC1 000000                                         ?___wmul 0001  
                            __CFG_CCP3MX$PORTB5 000000                                ?_TMR0_WriteTimer 0009  
                                       ?_noteOn 0002                                         ?_printf 0068  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 0001  
        __end_of_EUSART1_SetFramingErrorHandler DD58         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler DD4E                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 03DA                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                ___lomod@dividend 0001  
                       _TMR0_HasOverflowOccured DDB2                                     noteOn@pitch 0002  
                               __CFG_PWRTEN$OFF 000000                            _ADC_InterruptHandler 00CE  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aodiv E626                                         ___aomod E4C2  
                               __size_of___wmul 0026                                         ___lodiv E3D2  
                                       ___lomod E302                                       ?_vfprintf 0060  
                           _EUSART1_is_rx_ready DD9E                       ??_ADC_GetConversionResult 0003  
                                main@instrument 00B7                                         __pcinit DDC6  
                                main@sampleRate 00BD                                         __ramtop 1000  
                               __size_of_noteOn 0016                                         __ptext0 F206  
                                       __ptext1 DEEA                                         __ptext2 E142  
                                       __ptext3 EE2C                                         __ptext4 E948  
                                       __ptext5 E302                                         __ptext6 E3D2  
                                       __ptext7 EB4A                                         __ptext8 E012  
                                       __ptext9 E4C2                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize DE62                                    __size_of_abs 0040  
                                  __size_of_pad 00C6                                         _isdigit DF9C  
                            _EUSART1_Initialize DFD4                        ??_PIN_MANAGER_Initialize 0001  
                                       _isspace E096                                         atoi@neg 000E  
                                       main@cmd 00BA                      __size_of_SYSTEM_Initialize 0016  
                          end_of_initialization DDD4                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0005  
                   _EUSART1_OverrunErrorHandler 00CA                                         fputs@fp 000E  
                  __end_of_ADC_IsConversionDone DD9E                               __end_of_vfpfcnvrt F206  
                         TMR0_ReadTimer@readVal 0005                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0028  
                                    ??_vfprintf 005F                                  _TMR0_ReadTimer DE7E  
                          ??_EUSART1_Initialize 0003                                         strlen@a 0003  
                                       strlen@s 0001                                      _putByteSCI DE4A  
                                     _PORTAbits 000F80                             _ADC_StartConversion DD40  
                     ??_TMR0_HasOverflowOccured 0001                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0001                           ??_EUSART1_is_rx_ready 0001  
                                  _EUSART1_Read DEC2                                      main@sample 0077  
                          ?_ADC_StartConversion 0001                          __end_of_TMR0_ReadTimer DE9C  
                                   vfpfcnvrt@ap 0046                                     vfpfcnvrt@fp 0042  
                                   vfpfcnvrt@ll 004C                                  __end_of___wmul DEC2  
                                _ADC_Initialize DDDA                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_noteOn DE1C                                  __end_of_printf DF12  
                                __end_of_strlen DF9C                             start_initialization DDC6  
                               ___lodiv@divisor 0009                                 ___lodiv@counter 0019  
                      __size_of_TMR0_Initialize 002A                 __size_of_PIN_MANAGER_Initialize 002A  
                                   __end_of_abs E052                                     __end_of_pad E302  
                                   putch@txData 0002                           __end_of_EUSART1_Write DE32  
                         ??_ADC_StartConversion 0001                                     vfprintf@fmt 0062  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0005  
                        __end_of_ADC_Initialize DDF0                                        ??_noteOn 0004  
                                   ?_putByteSCI 0001                                        ??_printf 005F  
                                      ??_strlen 0003                                     __pbssCOMRAM 005F  
                                 __pcstackBANK0 0060                                ___aodiv@dividend 0001  
                          _ADC_IsConversionDone DD8A                ??_EUSART1_SetFramingErrorHandler 0003  
               ?_EUSART1_SetFramingErrorHandler 0001                                       _atoi$1516 0010  
                                     _atoi$1517 0014                                       _atoi$1518 0012  
                        _PIN_MANAGER_Initialize DF12                                       _dtoa$1036 0030  
                             _ADC_SelectChannel DE32                                   __pmediumconst F9B0  
                                      ?___aodiv 0001                                        ?___aomod 0001  
                              ___aodiv@quotient 0013                                        ?___lodiv 0001  
                                      ?___lomod 0001                                 ?_ADC_Initialize 0001  
                            ?_ADC_SelectChannel 0001                                __CFG_PRICLKEN$ON 000000  
                             __size_of_vfprintf 0064                                 ___lomod@divisor 0009  
                               ___lomod@counter 0011                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isdigit 0001  
                           ??_ADC_SelectChannel 0001                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 00C8                           ?_ADC_IsConversionDone 0001  
                                      ?_isspace 0001                         _EUSART1_SetErrorHandler DD44  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                __size_of_putch 000A                               ??_TMR0_Initialize 0001  
                                ___wmul@product 0005         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _LATCbits 000F8B                             __size_of_putByteSCI 0018  
                     __end_of_ADC_SelectChannel DE4A                                        _PIR1bits 000F9E  
                              __CFG_WDTPS$32768 000000                                       _vfpfcnvrt EE2C  
                      TMR0_ReadTimer@readValLow 0007                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 0001                        ADC_SelectChannel@channel 0002  
                                     main@delta 00BB                                       main@pitch 00BC  
                                  _isspace$1534 0007                                      vfpfcnvrt@c 005E  
                                   _INTCON2bits 000FF1                        main@nominalHallUnPressed 00B9  
                                      __Hrparam 0000                                      vfprintf@ap 0064  
                                      __Lrparam 0000                                      vfprintf@fp 0060  
                      ?_ADC_GetConversionResult 0001                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 0001  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                              __size_of___lodiv 00F0                     __size_of_EUSART1_Initialize 003E  
                              __size_of___lomod 00D0                                      ?_vfpfcnvrt 0042  
                               ___aodiv@divisor 0009                                 ___aodiv@counter 0011  
                     ??_EUSART1_SetErrorHandler 0003                             putByteSCI@writeByte 0001  
                        ??_ADC_IsConversionDone 0001                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready DDB2                                __size_of_isdigit 0038  
                              __size_of_isspace 0052                                        __ptext10 E626  
                                      __ptext11 E0E8                                        __ptext20 DF9C  
                                      __ptext12 E23C                                        __ptext21 DE9C  
                                      __ptext13 DF66                                        __ptext30 DE62  
                                      __ptext22 DE06                                        __ptext14 E052  
                                      __ptext31 DFD4                                        __ptext23 DE4A  
                                      __ptext15 E1A6                                        __ptext40 DD8A  
                                      __ptext32 DD58                                        __ptext24 DD62  
                                      __ptext16 DD6C                                        __ptext41 DD76  
                                      __ptext33 DD4E                                        __ptext25 DE7E  
                                      __ptext17 DE1C                                        __ptext34 DD44  
                                      __ptext26 DDB2                                        __ptext18 E7AE  
                                      __ptext35 DDDA                                        __ptext27 DDF0  
                                      __ptext19 E096                                        __ptext36 DD9E  
                                      __ptext28 DF3C                                        __ptext37 DEC2  
                                      __ptext29 DF12                                        __ptext38 DD40  
                                      __ptext39 DE32                         TMR0_WriteTimer@timerVal 0009  
                                     noteOn@cmd 0004                               ??_TMR0_WriteTimer 000B  
                                 __size_of_atoi 019A                                   __size_of_ctoa 005A  
                                 __size_of_main 07AA                                   __size_of_dtoa 02E2  
                                 __size_of_utoa 0202                                ??_TMR0_ReadTimer 0003  
                    __size_of_ADC_SelectChannel 0018  EUSART1_SetOverrunErrorHandler@interruptHandler 0001  
                                      _vfprintf E142                                       printf@fmt 0068  
                                  ??_putByteSCI 0001                     _EUSART1_FramingErrorHandler 00CC  
                              ___aomod@dividend 0001                        ?_TMR0_HasOverflowOccured 0001  
                                _vfpfcnvrt$1057 005C                                      _INTCONbits 000FF2  
                                      isdigit@c 0001                     __end_of_ADC_StartConversion DD44  
                                      isspace@c 0001                         ?_PIN_MANAGER_Initialize 0001  
               __end_of_ADC_GetConversionResult DD8A          __end_of_EUSART1_SetOverrunErrorHandler DD62  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler DD58  
                                    _RCSTA1bits 000FAB                              __end_of_putByteSCI DE62  
                              ??_ADC_Initialize 0001                                        printf@ap 0070  
EUSART1_SetFramingErrorHandler@interruptHandler 0001                                 ___aomod@divisor 0009  
                                   ??_vfpfcnvrt 0048                                 ___aomod@counter 0011  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 005F  
                               _TMR0_Initialize DF3C                               __CFG_T3CMX$PORTC0 000000  
                                  ___aodiv@sign 0012                  __end_of_PIN_MANAGER_Initialize DF3C  
                             __CFG_FOSC$INTIO67 000000                                    ___aomod@sign 0012  
