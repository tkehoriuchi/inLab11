

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Apr 02 08:47:20 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55  0000                     
    56                           ; Version 2.10
    57                           ; Generated 31/07/2019 GMT
    58                           ; 
    59                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F26K22 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     
    91 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    92  0000                     
    93 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    94  0000                     
    95 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    96  0000                     _ANSELA	set	3896
    97  0000                     _ANSELB	set	3897
    98  0000                     _ANSELC	set	3898
    99  0000                     _INTCON2bits	set	4081
   100  0000                     _WPUB	set	3937
   101  0000                     _TRISC	set	3988
   102  0000                     _TRISB	set	3987
   103  0000                     _TRISA	set	3986
   104  0000                     _LATC	set	3979
   105  0000                     _LATB	set	3978
   106  0000                     _LATA	set	3977
   107  0000                     _OSCTUNE	set	3995
   108  0000                     _OSCCON2	set	4050
   109  0000                     _OSCCON	set	4051
   110  0000                     _TXREG1	set	4013
   111  0000                     _RCREG1	set	4014
   112  0000                     _RCSTA1bits	set	4011
   113  0000                     _TXSTA1bits	set	4012
   114  0000                     _SPBRGH1	set	4016
   115  0000                     _SPBRG1	set	4015
   116  0000                     _TXSTA1	set	4012
   117  0000                     _RCSTA1	set	4011
   118  0000                     _BAUDCON1	set	4024
   119  0000                     _ADCON0bits	set	4034
   120  0000                     _ADRESH	set	4036
   121  0000                     _ADRESL	set	4035
   122  0000                     _ADCON2	set	4032
   123  0000                     _ADCON1	set	4033
   124  0000                     _ADCON0	set	4034
   125  0000                     _TX1REG	set	4013
   126  0000                     _PIR1bits	set	3998
   127  0000                     _PORTAbits	set	3968
   128  0000                     _LATCbits	set	3979
   129  0000                     _T0CON	set	4053
   130  0000                     _INTCONbits	set	4082
   131  0000                     _TMR0L	set	4054
   132  0000                     _TMR0H	set	4055
   133  0000                     _T0CONbits	set	4053
   134  0000                     _PLLRDY	set	32407
   135                           
   136                           	psect	mediumconst
   137  00F9B0                     __pmediumconst:
   138                           	opt callstack 0
   139  00F9B0  00                 	db	0
   140  00F9B1                     STR_24:
   141  00F9B1  48                 	db	72	;'H'
   142  00F9B2  61                 	db	97	;'a'
   143  00F9B3  6E                 	db	110	;'n'
   144  00F9B4  64                 	db	100	;'d'
   145  00F9B5  73                 	db	115	;'s'
   146  00F9B6  20                 	db	32
   147  00F9B7  6F                 	db	111	;'o'
   148  00F9B8  66                 	db	102	;'f'
   149  00F9B9  66                 	db	102	;'f'
   150  00F9BA  20                 	db	32
   151  00F9BB  74                 	db	116	;'t'
   152  00F9BC  68                 	db	104	;'h'
   153  00F9BD  65                 	db	101	;'e'
   154  00F9BE  20                 	db	32
   155  00F9BF  70                 	db	112	;'p'
   156  00F9C0  69                 	db	105	;'i'
   157  00F9C1  61                 	db	97	;'a'
   158  00F9C2  6E                 	db	110	;'n'
   159  00F9C3  6F                 	db	111	;'o'
   160  00F9C4  2C                 	db	44
   161  00F9C5  20                 	db	32
   162  00F9C6  70                 	db	112	;'p'
   163  00F9C7  72                 	db	114	;'r'
   164  00F9C8  65                 	db	101	;'e'
   165  00F9C9  73                 	db	115	;'s'
   166  00F9CA  73                 	db	115	;'s'
   167  00F9CB  20                 	db	32
   168  00F9CC  6B                 	db	107	;'k'
   169  00F9CD  65                 	db	101	;'e'
   170  00F9CE  79                 	db	121	;'y'
   171  00F9CF  62                 	db	98	;'b'
   172  00F9D0  6F                 	db	111	;'o'
   173  00F9D1  61                 	db	97	;'a'
   174  00F9D2  72                 	db	114	;'r'
   175  00F9D3  64                 	db	100	;'d'
   176  00F9D4  20                 	db	32
   177  00F9D5  6B                 	db	107	;'k'
   178  00F9D6  65                 	db	101	;'e'
   179  00F9D7  79                 	db	121	;'y'
   180  00F9D8  20                 	db	32
   181  00F9D9  74                 	db	116	;'t'
   182  00F9DA  6F                 	db	111	;'o'
   183  00F9DB  20                 	db	32
   184  00F9DC  63                 	db	99	;'c'
   185  00F9DD  61                 	db	97	;'a'
   186  00F9DE  6C                 	db	108	;'l'
   187  00F9DF  69                 	db	105	;'i'
   188  00F9E0  62                 	db	98	;'b'
   189  00F9E1  72                 	db	114	;'r'
   190  00F9E2  61                 	db	97	;'a'
   191  00F9E3  74                 	db	116	;'t'
   192  00F9E4  65                 	db	101	;'e'
   193  00F9E5  20                 	db	32
   194  00F9E6  6E                 	db	110	;'n'
   195  00F9E7  6F                 	db	111	;'o'
   196  00F9E8  6D                 	db	109	;'m'
   197  00F9E9  69                 	db	105	;'i'
   198  00F9EA  6E                 	db	110	;'n'
   199  00F9EB  61                 	db	97	;'a'
   200  00F9EC  6C                 	db	108	;'l'
   201  00F9ED  48                 	db	72	;'H'
   202  00F9EE  61                 	db	97	;'a'
   203  00F9EF  6C                 	db	108	;'l'
   204  00F9F0  6C                 	db	108	;'l'
   205  00F9F1  55                 	db	85	;'U'
   206  00F9F2  6E                 	db	110	;'n'
   207  00F9F3  50                 	db	80	;'P'
   208  00F9F4  72                 	db	114	;'r'
   209  00F9F5  65                 	db	101	;'e'
   210  00F9F6  73                 	db	115	;'s'
   211  00F9F7  73                 	db	115	;'s'
   212  00F9F8  65                 	db	101	;'e'
   213  00F9F9  64                 	db	100	;'d'
   214  00F9FA  00                 	db	0
   215  00F9FB                     STR_26:
   216  00F9FB  50                 	db	80	;'P'
   217  00F9FC  72                 	db	114	;'r'
   218  00F9FD  65                 	db	101	;'e'
   219  00F9FE  73                 	db	115	;'s'
   220  00F9FF  73                 	db	115	;'s'
   221  00FA00  20                 	db	32
   222  00FA01  74                 	db	116	;'t'
   223  00FA02  68                 	db	104	;'h'
   224  00FA03  65                 	db	101	;'e'
   225  00FA04  20                 	db	32
   226  00FA05  70                 	db	112	;'p'
   227  00FA06  69                 	db	105	;'i'
   228  00FA07  61                 	db	97	;'a'
   229  00FA08  6E                 	db	110	;'n'
   230  00FA09  6F                 	db	111	;'o'
   231  00FA0A  20                 	db	32
   232  00FA0B  6B                 	db	107	;'k'
   233  00FA0C  65                 	db	101	;'e'
   234  00FA0D  79                 	db	121	;'y'
   235  00FA0E  2C                 	db	44
   236  00FA0F  20                 	db	32
   237  00FA10  70                 	db	112	;'p'
   238  00FA11  72                 	db	114	;'r'
   239  00FA12  65                 	db	101	;'e'
   240  00FA13  73                 	db	115	;'s'
   241  00FA14  73                 	db	115	;'s'
   242  00FA15  20                 	db	32
   243  00FA16  6B                 	db	107	;'k'
   244  00FA17  65                 	db	101	;'e'
   245  00FA18  79                 	db	121	;'y'
   246  00FA19  62                 	db	98	;'b'
   247  00FA1A  6F                 	db	111	;'o'
   248  00FA1B  61                 	db	97	;'a'
   249  00FA1C  72                 	db	114	;'r'
   250  00FA1D  64                 	db	100	;'d'
   251  00FA1E  20                 	db	32
   252  00FA1F  6B                 	db	107	;'k'
   253  00FA20  65                 	db	101	;'e'
   254  00FA21  79                 	db	121	;'y'
   255  00FA22  20                 	db	32
   256  00FA23  74                 	db	116	;'t'
   257  00FA24  6F                 	db	111	;'o'
   258  00FA25  20                 	db	32
   259  00FA26  63                 	db	99	;'c'
   260  00FA27  61                 	db	97	;'a'
   261  00FA28  6C                 	db	108	;'l'
   262  00FA29  69                 	db	105	;'i'
   263  00FA2A  62                 	db	98	;'b'
   264  00FA2B  72                 	db	114	;'r'
   265  00FA2C  61                 	db	97	;'a'
   266  00FA2D  74                 	db	116	;'t'
   267  00FA2E  65                 	db	101	;'e'
   268  00FA2F  20                 	db	32
   269  00FA30  6E                 	db	110	;'n'
   270  00FA31  6F                 	db	111	;'o'
   271  00FA32  6D                 	db	109	;'m'
   272  00FA33  69                 	db	105	;'i'
   273  00FA34  6E                 	db	110	;'n'
   274  00FA35  61                 	db	97	;'a'
   275  00FA36  6C                 	db	108	;'l'
   276  00FA37  48                 	db	72	;'H'
   277  00FA38  61                 	db	97	;'a'
   278  00FA39  6C                 	db	108	;'l'
   279  00FA3A  6C                 	db	108	;'l'
   280  00FA3B  50                 	db	80	;'P'
   281  00FA3C  72                 	db	114	;'r'
   282  00FA3D  65                 	db	101	;'e'
   283  00FA3E  73                 	db	115	;'s'
   284  00FA3F  73                 	db	115	;'s'
   285  00FA40  65                 	db	101	;'e'
   286  00FA41  64                 	db	100	;'d'
   287  00FA42  00                 	db	0
   288  00FA43                     STR_18:
   289  00FA43  74                 	db	116	;'t'
   290  00FA44  3A                 	db	58	;':'
   291  00FA45  20                 	db	32
   292  00FA46  77                 	db	119	;'w'
   293  00FA47  61                 	db	97	;'a'
   294  00FA48  69                 	db	105	;'i'
   295  00FA49  74                 	db	116	;'t'
   296  00FA4A  20                 	db	32
   297  00FA4B  66                 	db	102	;'f'
   298  00FA4C  6F                 	db	111	;'o'
   299  00FA4D  72                 	db	114	;'r'
   300  00FA4E  20                 	db	32
   301  00FA4F  70                 	db	112	;'p'
   302  00FA50  69                 	db	105	;'i'
   303  00FA51  61                 	db	97	;'a'
   304  00FA52  6E                 	db	110	;'n'
   305  00FA53  6F                 	db	111	;'o'
   306  00FA54  20                 	db	32
   307  00FA55  6B                 	db	107	;'k'
   308  00FA56  65                 	db	101	;'e'
   309  00FA57  79                 	db	121	;'y'
   310  00FA58  70                 	db	112	;'p'
   311  00FA59  72                 	db	114	;'r'
   312  00FA5A  65                 	db	101	;'e'
   313  00FA5B  73                 	db	115	;'s'
   314  00FA5C  73                 	db	115	;'s'
   315  00FA5D  20                 	db	32
   316  00FA5E  61                 	db	97	;'a'
   317  00FA5F  6E                 	db	110	;'n'
   318  00FA60  64                 	db	100	;'d'
   319  00FA61  20                 	db	32
   320  00FA62  72                 	db	114	;'r'
   321  00FA63  65                 	db	101	;'e'
   322  00FA64  70                 	db	112	;'p'
   323  00FA65  6F                 	db	111	;'o'
   324  00FA66  72                 	db	114	;'r'
   325  00FA67  74                 	db	116	;'t'
   326  00FA68  20                 	db	32
   327  00FA69  25                 	db	37
   328  00FA6A  64                 	db	100	;'d'
   329  00FA6B  20                 	db	32
   330  00FA6C  73                 	db	115	;'s'
   331  00FA6D  61                 	db	97	;'a'
   332  00FA6E  6D                 	db	109	;'m'
   333  00FA6F  70                 	db	112	;'p'
   334  00FA70  6C                 	db	108	;'l'
   335  00FA71  65                 	db	101	;'e'
   336  00FA72  73                 	db	115	;'s'
   337  00FA73  2C                 	db	44
   338  00FA74  20                 	db	32
   339  00FA75  6F                 	db	111	;'o'
   340  00FA76  6E                 	db	110	;'n'
   341  00FA77  65                 	db	101	;'e'
   342  00FA78  20                 	db	32
   343  00FA79  65                 	db	101	;'e'
   344  00FA7A  76                 	db	118	;'v'
   345  00FA7B  65                 	db	101	;'e'
   346  00FA7C  72                 	db	114	;'r'
   347  00FA7D  79                 	db	121	;'y'
   348  00FA7E  20                 	db	32
   349  00FA7F  25                 	db	37
   350  00FA80  64                 	db	100	;'d'
   351  00FA81  75                 	db	117	;'u'
   352  00FA82  73                 	db	115	;'s'
   353  00FA83  2E                 	db	46
   354  00FA84  0D                 	db	13
   355  00FA85  0A                 	db	10
   356  00FA86  00                 	db	0
   357  00FA87                     STR_51:
   358  00FA87  20                 	db	32
   359  00FA88  20                 	db	32
   360  00FA89  20                 	db	32
   361  00FA8A  20                 	db	32
   362  00FA8B  50                 	db	80	;'P'
   363  00FA8C  72                 	db	114	;'r'
   364  00FA8D  65                 	db	101	;'e'
   365  00FA8E  73                 	db	115	;'s'
   366  00FA8F  73                 	db	115	;'s'
   367  00FA90  20                 	db	32
   368  00FA91  75                 	db	117	;'u'
   369  00FA92  70                 	db	112	;'p'
   370  00FA93  70                 	db	112	;'p'
   371  00FA94  65                 	db	101	;'e'
   372  00FA95  72                 	db	114	;'r'
   373  00FA96  20                 	db	32
   374  00FA97  70                 	db	112	;'p'
   375  00FA98  75                 	db	117	;'u'
   376  00FA99  73                 	db	115	;'s'
   377  00FA9A  68                 	db	104	;'h'
   378  00FA9B  20                 	db	32
   379  00FA9C  62                 	db	98	;'b'
   380  00FA9D  75                 	db	117	;'u'
   381  00FA9E  74                 	db	116	;'t'
   382  00FA9F  74                 	db	116	;'t'
   383  00FAA0  6F                 	db	111	;'o'
   384  00FAA1  6E                 	db	110	;'n'
   385  00FAA2  20                 	db	32
   386  00FAA3  6F                 	db	111	;'o'
   387  00FAA4  6E                 	db	110	;'n'
   388  00FAA5  20                 	db	32
   389  00FAA6  44                 	db	68	;'D'
   390  00FAA7  65                 	db	101	;'e'
   391  00FAA8  76                 	db	118	;'v'
   392  00FAA9  27                 	db	39
   393  00FAAA  31                 	db	49	;'1'
   394  00FAAB  38                 	db	56	;'8'
   395  00FAAC  20                 	db	32
   396  00FAAD  74                 	db	116	;'t'
   397  00FAAE  6F                 	db	111	;'o'
   398  00FAAF  20                 	db	32
   399  00FAB0  73                 	db	115	;'s'
   400  00FAB1  74                 	db	116	;'t'
   401  00FAB2  61                 	db	97	;'a'
   402  00FAB3  72                 	db	114	;'r'
   403  00FAB4  74                 	db	116	;'t'
   404  00FAB5  20                 	db	32
   405  00FAB6  4D                 	db	77	;'M'
   406  00FAB7  49                 	db	73	;'I'
   407  00FAB8  44                 	db	68	;'D'
   408  00FAB9  49                 	db	73	;'I'
   409  00FABA  20                 	db	32
   410  00FABB  70                 	db	112	;'p'
   411  00FABC  6C                 	db	108	;'l'
   412  00FABD  61                 	db	97	;'a'
   413  00FABE  79                 	db	121	;'y'
   414  00FABF  20                 	db	32
   415  00FAC0  73                 	db	115	;'s'
   416  00FAC1  65                 	db	101	;'e'
   417  00FAC2  71                 	db	113	;'q'
   418  00FAC3  75                 	db	117	;'u'
   419  00FAC4  65                 	db	101	;'e'
   420  00FAC5  6E                 	db	110	;'n'
   421  00FAC6  63                 	db	99	;'c'
   422  00FAC7  65                 	db	101	;'e'
   423  00FAC8  0D                 	db	13
   424  00FAC9  0A                 	db	10
   425  00FACA  00                 	db	0
   426  00FACB                     STR_52:
   427  00FACB  20                 	db	32
   428  00FACC  20                 	db	32
   429  00FACD  20                 	db	32
   430  00FACE  20                 	db	32
   431  00FACF  50                 	db	80	;'P'
   432  00FAD0  72                 	db	114	;'r'
   433  00FAD1  65                 	db	101	;'e'
   434  00FAD2  73                 	db	115	;'s'
   435  00FAD3  73                 	db	115	;'s'
   436  00FAD4  20                 	db	32
   437  00FAD5  6C                 	db	108	;'l'
   438  00FAD6  6F                 	db	111	;'o'
   439  00FAD7  77                 	db	119	;'w'
   440  00FAD8  65                 	db	101	;'e'
   441  00FAD9  72                 	db	114	;'r'
   442  00FADA  20                 	db	32
   443  00FADB  70                 	db	112	;'p'
   444  00FADC  75                 	db	117	;'u'
   445  00FADD  73                 	db	115	;'s'
   446  00FADE  68                 	db	104	;'h'
   447  00FADF  20                 	db	32
   448  00FAE0  62                 	db	98	;'b'
   449  00FAE1  75                 	db	117	;'u'
   450  00FAE2  74                 	db	116	;'t'
   451  00FAE3  74                 	db	116	;'t'
   452  00FAE4  6F                 	db	111	;'o'
   453  00FAE5  6E                 	db	110	;'n'
   454  00FAE6  20                 	db	32
   455  00FAE7  6F                 	db	111	;'o'
   456  00FAE8  6E                 	db	110	;'n'
   457  00FAE9  20                 	db	32
   458  00FAEA  44                 	db	68	;'D'
   459  00FAEB  65                 	db	101	;'e'
   460  00FAEC  76                 	db	118	;'v'
   461  00FAED  27                 	db	39
   462  00FAEE  31                 	db	49	;'1'
   463  00FAEF  38                 	db	56	;'8'
   464  00FAF0  20                 	db	32
   465  00FAF1  74                 	db	116	;'t'
   466  00FAF2  6F                 	db	111	;'o'
   467  00FAF3  20                 	db	32
   468  00FAF4  65                 	db	101	;'e'
   469  00FAF5  78                 	db	120	;'x'
   470  00FAF6  69                 	db	105	;'i'
   471  00FAF7  74                 	db	116	;'t'
   472  00FAF8  20                 	db	32
   473  00FAF9  4D                 	db	77	;'M'
   474  00FAFA  49                 	db	73	;'I'
   475  00FAFB  44                 	db	68	;'D'
   476  00FAFC  49                 	db	73	;'I'
   477  00FAFD  20                 	db	32
   478  00FAFE  70                 	db	112	;'p'
   479  00FAFF  6C                 	db	108	;'l'
   480  00FB00  61                 	db	97	;'a'
   481  00FB01  79                 	db	121	;'y'
   482  00FB02  20                 	db	32
   483  00FB03  73                 	db	115	;'s'
   484  00FB04  65                 	db	101	;'e'
   485  00FB05  71                 	db	113	;'q'
   486  00FB06  75                 	db	117	;'u'
   487  00FB07  65                 	db	101	;'e'
   488  00FB08  6E                 	db	110	;'n'
   489  00FB09  63                 	db	99	;'c'
   490  00FB0A  65                 	db	101	;'e'
   491  00FB0B  0D                 	db	13
   492  00FB0C  0A                 	db	10
   493  00FB0D  00                 	db	0
   494  00FB0E                     STR_50:
   495  00FB0E  20                 	db	32
   496  00FB0F  20                 	db	32
   497  00FB10  20                 	db	32
   498  00FB11  20                 	db	32
   499  00FB12  20                 	db	32
   500  00FB13  20                 	db	32
   501  00FB14  20                 	db	32
   502  00FB15  20                 	db	32
   503  00FB16  4D                 	db	77	;'M'
   504  00FB17  49                 	db	73	;'I'
   505  00FB18  44                 	db	68	;'D'
   506  00FB19  49                 	db	73	;'I'
   507  00FB1A  20                 	db	32
   508  00FB1B  4F                 	db	79	;'O'
   509  00FB1C  75                 	db	117	;'u'
   510  00FB1D  74                 	db	116	;'t'
   511  00FB1E  20                 	db	32
   512  00FB1F  2D                 	db	45
   513  00FB20  3E                 	db	62	;'>'
   514  00FB21  20                 	db	32
   515  00FB22  4D                 	db	77	;'M'
   516  00FB23  69                 	db	105	;'i'
   517  00FB24  63                 	db	99	;'c'
   518  00FB25  72                 	db	114	;'r'
   519  00FB26  6F                 	db	111	;'o'
   520  00FB27  73                 	db	115	;'s'
   521  00FB28  6F                 	db	111	;'o'
   522  00FB29  66                 	db	102	;'f'
   523  00FB2A  74                 	db	116	;'t'
   524  00FB2B  20                 	db	32
   525  00FB2C  47                 	db	71	;'G'
   526  00FB2D  53                 	db	83	;'S'
   527  00FB2E  20                 	db	32
   528  00FB2F  57                 	db	87	;'W'
   529  00FB30  61                 	db	97	;'a'
   530  00FB31  76                 	db	118	;'v'
   531  00FB32  65                 	db	101	;'e'
   532  00FB33  74                 	db	116	;'t'
   533  00FB34  61                 	db	97	;'a'
   534  00FB35  62                 	db	98	;'b'
   535  00FB36  6C                 	db	108	;'l'
   536  00FB37  65                 	db	101	;'e'
   537  00FB38  20                 	db	32
   538  00FB39  53                 	db	83	;'S'
   539  00FB3A  79                 	db	121	;'y'
   540  00FB3B  6E                 	db	110	;'n'
   541  00FB3C  74                 	db	116	;'t'
   542  00FB3D  68                 	db	104	;'h'
   543  00FB3E  20                 	db	32
   544  00FB3F  0D                 	db	13
   545  00FB40  0A                 	db	10
   546  00FB41  00                 	db	0
   547  00FB42                     STR_5:
   548  00FB42  2D                 	db	45
   549  00FB43  2D                 	db	45
   550  00FB44  2D                 	db	45
   551  00FB45  2D                 	db	45
   552  00FB46  2D                 	db	45
   553  00FB47  2D                 	db	45
   554  00FB48  2D                 	db	45
   555  00FB49  2D                 	db	45
   556  00FB4A  2D                 	db	45
   557  00FB4B  2D                 	db	45
   558  00FB4C  2D                 	db	45
   559  00FB4D  2D                 	db	45
   560  00FB4E  2D                 	db	45
   561  00FB4F  2D                 	db	45
   562  00FB50  2D                 	db	45
   563  00FB51  2D                 	db	45
   564  00FB52  2D                 	db	45
   565  00FB53  2D                 	db	45
   566  00FB54  2D                 	db	45
   567  00FB55  2D                 	db	45
   568  00FB56  2D                 	db	45
   569  00FB57  2D                 	db	45
   570  00FB58  2D                 	db	45
   571  00FB59  2D                 	db	45
   572  00FB5A  2D                 	db	45
   573  00FB5B  2D                 	db	45
   574  00FB5C  2D                 	db	45
   575  00FB5D  2D                 	db	45
   576  00FB5E  2D                 	db	45
   577  00FB5F  2D                 	db	45
   578  00FB60  2D                 	db	45
   579  00FB61  2D                 	db	45
   580  00FB62  2D                 	db	45
   581  00FB63  2D                 	db	45
   582  00FB64  2D                 	db	45
   583  00FB65  2D                 	db	45
   584  00FB66  2D                 	db	45
   585  00FB67  2D                 	db	45
   586  00FB68  2D                 	db	45
   587  00FB69  2D                 	db	45
   588  00FB6A  2D                 	db	45
   589  00FB6B  2D                 	db	45
   590  00FB6C  2D                 	db	45
   591  00FB6D  2D                 	db	45
   592  00FB6E  2D                 	db	45
   593  00FB6F  2D                 	db	45
   594  00FB70  2D                 	db	45
   595  00FB71  2D                 	db	45
   596  00FB72  2D                 	db	45
   597  00FB73  0D                 	db	13
   598  00FB74  0A                 	db	10
   599  00FB75  00                 	db	0
   600  00FB76                     STR_57:
   601  00FB76  20                 	db	32
   602  00FB77  20                 	db	32
   603  00FB78  20                 	db	32
   604  00FB79  20                 	db	32
   605  00FB7A  4C                 	db	76	;'L'
   606  00FB7B  61                 	db	97	;'a'
   607  00FB7C  75                 	db	117	;'u'
   608  00FB7D  6E                 	db	110	;'n'
   609  00FB7E  63                 	db	99	;'c'
   610  00FB7F  68                 	db	104	;'h'
   611  00FB80  20                 	db	32
   612  00FB81  50                 	db	80	;'P'
   613  00FB82  75                 	db	117	;'u'
   614  00FB83  54                 	db	84	;'T'
   615  00FB84  54                 	db	84	;'T'
   616  00FB85  59                 	db	89	;'Y'
   617  00FB86  20                 	db	32
   618  00FB87  61                 	db	97	;'a'
   619  00FB88  6E                 	db	110	;'n'
   620  00FB89  64                 	db	100	;'d'
   621  00FB8A  20                 	db	32
   622  00FB8B  72                 	db	114	;'r'
   623  00FB8C  65                 	db	101	;'e'
   624  00FB8D  63                 	db	99	;'c'
   625  00FB8E  6F                 	db	111	;'o'
   626  00FB8F  6E                 	db	110	;'n'
   627  00FB90  6E                 	db	110	;'n'
   628  00FB91  65                 	db	101	;'e'
   629  00FB92  63                 	db	99	;'c'
   630  00FB93  74                 	db	116	;'t'
   631  00FB94  20                 	db	32
   632  00FB95  74                 	db	116	;'t'
   633  00FB96  6F                 	db	111	;'o'
   634  00FB97  20                 	db	32
   635  00FB98  74                 	db	116	;'t'
   636  00FB99  68                 	db	104	;'h'
   637  00FB9A  65                 	db	101	;'e'
   638  00FB9B  20                 	db	32
   639  00FB9C  56                 	db	86	;'V'
   640  00FB9D  43                 	db	67	;'C'
   641  00FB9E  4F                 	db	79	;'O'
   642  00FB9F  4D                 	db	77	;'M'
   643  00FBA0  20                 	db	32
   644  00FBA1  70                 	db	112	;'p'
   645  00FBA2  6F                 	db	111	;'o'
   646  00FBA3  72                 	db	114	;'r'
   647  00FBA4  74                 	db	116	;'t'
   648  00FBA5  0D                 	db	13
   649  00FBA6  0A                 	db	10
   650  00FBA7  00                 	db	0
   651  00FBA8                     STR_17:
   652  00FBA8  31                 	db	49	;'1'
   653  00FBA9  3A                 	db	58	;':'
   654  00FBAA  20                 	db	32
   655  00FBAB  72                 	db	114	;'r'
   656  00FBAC  65                 	db	101	;'e'
   657  00FBAD  70                 	db	112	;'p'
   658  00FBAE  6F                 	db	111	;'o'
   659  00FBAF  72                 	db	114	;'r'
   660  00FBB0  74                 	db	116	;'t'
   661  00FBB1  20                 	db	32
   662  00FBB2  61                 	db	97	;'a'
   663  00FBB3  20                 	db	32
   664  00FBB4  73                 	db	115	;'s'
   665  00FBB5  69                 	db	105	;'i'
   666  00FBB6  6E                 	db	110	;'n'
   667  00FBB7  67                 	db	103	;'g'
   668  00FBB8  6C                 	db	108	;'l'
   669  00FBB9  65                 	db	101	;'e'
   670  00FBBA  20                 	db	32
   671  00FBBB  48                 	db	72	;'H'
   672  00FBBC  61                 	db	97	;'a'
   673  00FBBD  6C                 	db	108	;'l'
   674  00FBBE  6C                 	db	108	;'l'
   675  00FBBF  20                 	db	32
   676  00FBC0  65                 	db	101	;'e'
   677  00FBC1  66                 	db	102	;'f'
   678  00FBC2  66                 	db	102	;'f'
   679  00FBC3  65                 	db	101	;'e'
   680  00FBC4  63                 	db	99	;'c'
   681  00FBC5  74                 	db	116	;'t'
   682  00FBC6  20                 	db	32
   683  00FBC7  73                 	db	115	;'s'
   684  00FBC8  65                 	db	101	;'e'
   685  00FBC9  6E                 	db	110	;'n'
   686  00FBCA  73                 	db	115	;'s'
   687  00FBCB  6F                 	db	111	;'o'
   688  00FBCC  72                 	db	114	;'r'
   689  00FBCD  20                 	db	32
   690  00FBCE  72                 	db	114	;'r'
   691  00FBCF  65                 	db	101	;'e'
   692  00FBD0  61                 	db	97	;'a'
   693  00FBD1  64                 	db	100	;'d'
   694  00FBD2  69                 	db	105	;'i'
   695  00FBD3  6E                 	db	110	;'n'
   696  00FBD4  67                 	db	103	;'g'
   697  00FBD5  2E                 	db	46
   698  00FBD6  0D                 	db	13
   699  00FBD7  0A                 	db	10
   700  00FBD8  00                 	db	0
   701  00FBD9                     STR_49:
   702  00FBD9  20                 	db	32
   703  00FBDA  20                 	db	32
   704  00FBDB  20                 	db	32
   705  00FBDC  20                 	db	32
   706  00FBDD  20                 	db	32
   707  00FBDE  20                 	db	32
   708  00FBDF  20                 	db	32
   709  00FBE0  20                 	db	32
   710  00FBE1  53                 	db	83	;'S'
   711  00FBE2  65                 	db	101	;'e'
   712  00FBE3  72                 	db	114	;'r'
   713  00FBE4  69                 	db	105	;'i'
   714  00FBE5  61                 	db	97	;'a'
   715  00FBE6  6C                 	db	108	;'l'
   716  00FBE7  20                 	db	32
   717  00FBE8  50                 	db	80	;'P'
   718  00FBE9  6F                 	db	111	;'o'
   719  00FBEA  72                 	db	114	;'r'
   720  00FBEB  74                 	db	116	;'t'
   721  00FBEC  20                 	db	32
   722  00FBED  2D                 	db	45
   723  00FBEE  3E                 	db	62	;'>'
   724  00FBEF  20                 	db	32
   725  00FBF0  55                 	db	85	;'U'
   726  00FBF1  53                 	db	83	;'S'
   727  00FBF2  42                 	db	66	;'B'
   728  00FBF3  20                 	db	32
   729  00FBF4  53                 	db	83	;'S'
   730  00FBF5  65                 	db	101	;'e'
   731  00FBF6  72                 	db	114	;'r'
   732  00FBF7  69                 	db	105	;'i'
   733  00FBF8  61                 	db	97	;'a'
   734  00FBF9  6C                 	db	108	;'l'
   735  00FBFA  20                 	db	32
   736  00FBFB  50                 	db	80	;'P'
   737  00FBFC  6F                 	db	111	;'o'
   738  00FBFD  72                 	db	114	;'r'
   739  00FBFE  74                 	db	116	;'t'
   740  00FBFF  20                 	db	32
   741  00FC00  28                 	db	40
   742  00FC01  43                 	db	67	;'C'
   743  00FC02  4F                 	db	79	;'O'
   744  00FC03  4D                 	db	77	;'M'
   745  00FC04  78                 	db	120	;'x'
   746  00FC05  29                 	db	41
   747  00FC06  0D                 	db	13
   748  00FC07  0A                 	db	10
   749  00FC08  00                 	db	0
   750  00FC09                     STR_16:
   751  00FC09  63                 	db	99	;'c'
   752  00FC0A  2F                 	db	47
   753  00FC0B  43                 	db	67	;'C'
   754  00FC0C  3A                 	db	58	;':'
   755  00FC0D  20                 	db	32
   756  00FC0E  63                 	db	99	;'c'
   757  00FC0F  61                 	db	97	;'a'
   758  00FC10  6C                 	db	108	;'l'
   759  00FC11  69                 	db	105	;'i'
   760  00FC12  62                 	db	98	;'b'
   761  00FC13  72                 	db	114	;'r'
   762  00FC14  61                 	db	97	;'a'
   763  00FC15  74                 	db	116	;'t'
   764  00FC16  65                 	db	101	;'e'
   765  00FC17  20                 	db	32
   766  00FC18  75                 	db	117	;'u'
   767  00FC19  6E                 	db	110	;'n'
   768  00FC1A  70                 	db	112	;'p'
   769  00FC1B  72                 	db	114	;'r'
   770  00FC1C  65                 	db	101	;'e'
   771  00FC1D  73                 	db	115	;'s'
   772  00FC1E  73                 	db	115	;'s'
   773  00FC1F  65                 	db	101	;'e'
   774  00FC20  64                 	db	100	;'d'
   775  00FC21  2F                 	db	47
   776  00FC22  70                 	db	112	;'p'
   777  00FC23  72                 	db	114	;'r'
   778  00FC24  65                 	db	101	;'e'
   779  00FC25  73                 	db	115	;'s'
   780  00FC26  73                 	db	115	;'s'
   781  00FC27  65                 	db	101	;'e'
   782  00FC28  64                 	db	100	;'d'
   783  00FC29  20                 	db	32
   784  00FC2A  68                 	db	104	;'h'
   785  00FC2B  61                 	db	97	;'a'
   786  00FC2C  6C                 	db	108	;'l'
   787  00FC2D  6C                 	db	108	;'l'
   788  00FC2E  20                 	db	32
   789  00FC2F  73                 	db	115	;'s'
   790  00FC30  65                 	db	101	;'e'
   791  00FC31  6E                 	db	110	;'n'
   792  00FC32  73                 	db	115	;'s'
   793  00FC33  6F                 	db	111	;'o'
   794  00FC34  72                 	db	114	;'r'
   795  00FC35  2E                 	db	46
   796  00FC36  0D                 	db	13
   797  00FC37  0A                 	db	10
   798  00FC38  00                 	db	0
   799  00FC39                     STR_48:
   800  00FC39  20                 	db	32
   801  00FC3A  20                 	db	32
   802  00FC3B  20                 	db	32
   803  00FC3C  20                 	db	32
   804  00FC3D  49                 	db	73	;'I'
   805  00FC3E  6E                 	db	110	;'n'
   806  00FC3F  20                 	db	32
   807  00FC40  74                 	db	116	;'t'
   808  00FC41  68                 	db	104	;'h'
   809  00FC42  65                 	db	101	;'e'
   810  00FC43  20                 	db	32
   811  00FC44  68                 	db	104	;'h'
   812  00FC45  61                 	db	97	;'a'
   813  00FC46  69                 	db	105	;'i'
   814  00FC47  72                 	db	114	;'r'
   815  00FC48  6C                 	db	108	;'l'
   816  00FC49  65                 	db	101	;'e'
   817  00FC4A  73                 	db	115	;'s'
   818  00FC4B  73                 	db	115	;'s'
   819  00FC4C  2D                 	db	45
   820  00FC4D  6D                 	db	109	;'m'
   821  00FC4E  69                 	db	105	;'i'
   822  00FC4F  64                 	db	100	;'d'
   823  00FC50  69                 	db	105	;'i'
   824  00FC51  73                 	db	115	;'s'
   825  00FC52  65                 	db	101	;'e'
   826  00FC53  72                 	db	114	;'r'
   827  00FC54  69                 	db	105	;'i'
   828  00FC55  61                 	db	97	;'a'
   829  00FC56  6C                 	db	108	;'l'
   830  00FC57  20                 	db	32
   831  00FC58  70                 	db	112	;'p'
   832  00FC59  72                 	db	114	;'r'
   833  00FC5A  6F                 	db	111	;'o'
   834  00FC5B  67                 	db	103	;'g'
   835  00FC5C  72                 	db	114	;'r'
   836  00FC5D  61                 	db	97	;'a'
   837  00FC5E  6D                 	db	109	;'m'
   838  00FC5F  3A                 	db	58	;':'
   839  00FC60  0D                 	db	13
   840  00FC61  0A                 	db	10
   841  00FC62  00                 	db	0
   842  00FC63                     STR_54:
   843  00FC63  20                 	db	32
   844  00FC64  20                 	db	32
   845  00FC65  20                 	db	32
   846  00FC66  20                 	db	32
   847  00FC67  20                 	db	32
   848  00FC68  20                 	db	32
   849  00FC69  20                 	db	32
   850  00FC6A  20                 	db	32
   851  00FC6B  53                 	db	83	;'S'
   852  00FC6C  65                 	db	101	;'e'
   853  00FC6D  72                 	db	114	;'r'
   854  00FC6E  69                 	db	105	;'i'
   855  00FC6F  61                 	db	97	;'a'
   856  00FC70  6C                 	db	108	;'l'
   857  00FC71  20                 	db	32
   858  00FC72  50                 	db	80	;'P'
   859  00FC73  6F                 	db	111	;'o'
   860  00FC74  72                 	db	114	;'r'
   861  00FC75  74                 	db	116	;'t'
   862  00FC76  20                 	db	32
   863  00FC77  2D                 	db	45
   864  00FC78  3E                 	db	62	;'>'
   865  00FC79  20                 	db	32
   866  00FC7A  28                 	db	40
   867  00FC7B  4E                 	db	78	;'N'
   868  00FC7C  6F                 	db	111	;'o'
   869  00FC7D  74                 	db	116	;'t'
   870  00FC7E  20                 	db	32
   871  00FC7F  43                 	db	67	;'C'
   872  00FC80  6F                 	db	111	;'o'
   873  00FC81  6E                 	db	110	;'n'
   874  00FC82  6E                 	db	110	;'n'
   875  00FC83  65                 	db	101	;'e'
   876  00FC84  63                 	db	99	;'c'
   877  00FC85  74                 	db	116	;'t'
   878  00FC86  65                 	db	101	;'e'
   879  00FC87  64                 	db	100	;'d'
   880  00FC88  29                 	db	41
   881  00FC89  0D                 	db	13
   882  00FC8A  0A                 	db	10
   883  00FC8B  00                 	db	0
   884  00FC8C                     STR_8:
   885  00FC8C  20                 	db	32
   886  00FC8D  20                 	db	32
   887  00FC8E  20                 	db	32
   888  00FC8F  20                 	db	32
   889  00FC90  73                 	db	115	;'s'
   890  00FC91  61                 	db	97	;'a'
   891  00FC92  6D                 	db	109	;'m'
   892  00FC93  70                 	db	112	;'p'
   893  00FC94  6C                 	db	108	;'l'
   894  00FC95  65                 	db	101	;'e'
   895  00FC96  52                 	db	82	;'R'
   896  00FC97  61                 	db	97	;'a'
   897  00FC98  74                 	db	116	;'t'
   898  00FC99  65                 	db	101	;'e'
   899  00FC9A  20                 	db	32
   900  00FC9B  3D                 	db	61	;'='
   901  00FC9C  20                 	db	32
   902  00FC9D  25                 	db	37
   903  00FC9E  64                 	db	100	;'d'
   904  00FC9F  20                 	db	32
   905  00FCA0  54                 	db	84	;'T'
   906  00FCA1  4D                 	db	77	;'M'
   907  00FCA2  52                 	db	82	;'R'
   908  00FCA3  30                 	db	48	;'0'
   909  00FCA4  20                 	db	32
   910  00FCA5  63                 	db	99	;'c'
   911  00FCA6  6F                 	db	111	;'o'
   912  00FCA7  75                 	db	117	;'u'
   913  00FCA8  6E                 	db	110	;'n'
   914  00FCA9  74                 	db	116	;'t'
   915  00FCAA  73                 	db	115	;'s'
   916  00FCAB  20                 	db	32
   917  00FCAC  3D                 	db	61	;'='
   918  00FCAD  20                 	db	32
   919  00FCAE  25                 	db	37
   920  00FCAF  64                 	db	100	;'d'
   921  00FCB0  75                 	db	117	;'u'
   922  00FCB1  53                 	db	83	;'S'
   923  00FCB2  0D                 	db	13
   924  00FCB3  0A                 	db	10
   925  00FCB4  00                 	db	0
   926  00FCB5                     STR_29:
   927  00FCB5  6E                 	db	110	;'n'
   928  00FCB6  65                 	db	101	;'e'
   929  00FCB7  77                 	db	119	;'w'
   930  00FCB8  20                 	db	32
   931  00FCB9  73                 	db	115	;'s'
   932  00FCBA  61                 	db	97	;'a'
   933  00FCBB  6D                 	db	109	;'m'
   934  00FCBC  70                 	db	112	;'p'
   935  00FCBD  6C                 	db	108	;'l'
   936  00FCBE  65                 	db	101	;'e'
   937  00FCBF  52                 	db	82	;'R'
   938  00FCC0  61                 	db	97	;'a'
   939  00FCC1  74                 	db	116	;'t'
   940  00FCC2  65                 	db	101	;'e'
   941  00FCC3  20                 	db	32
   942  00FCC4  3D                 	db	61	;'='
   943  00FCC5  20                 	db	32
   944  00FCC6  25                 	db	37
   945  00FCC7  64                 	db	100	;'d'
   946  00FCC8  20                 	db	32
   947  00FCC9  54                 	db	84	;'T'
   948  00FCCA  4D                 	db	77	;'M'
   949  00FCCB  52                 	db	82	;'R'
   950  00FCCC  30                 	db	48	;'0'
   951  00FCCD  20                 	db	32
   952  00FCCE  63                 	db	99	;'c'
   953  00FCCF  6F                 	db	111	;'o'
   954  00FCD0  75                 	db	117	;'u'
   955  00FCD1  6E                 	db	110	;'n'
   956  00FCD2  74                 	db	116	;'t'
   957  00FCD3  73                 	db	115	;'s'
   958  00FCD4  20                 	db	32
   959  00FCD5  3D                 	db	61	;'='
   960  00FCD6  20                 	db	32
   961  00FCD7  25                 	db	37
   962  00FCD8  64                 	db	100	;'d'
   963  00FCD9  75                 	db	117	;'u'
   964  00FCDA  53                 	db	83	;'S'
   965  00FCDB  0D                 	db	13
   966  00FCDC  0A                 	db	10
   967  00FCDD  00                 	db	0
   968  00FCDE                     STR_55:
   969  00FCDE  20                 	db	32
   970  00FCDF  20                 	db	32
   971  00FCE0  20                 	db	32
   972  00FCE1  20                 	db	32
   973  00FCE2  20                 	db	32
   974  00FCE3  20                 	db	32
   975  00FCE4  20                 	db	32
   976  00FCE5  20                 	db	32
   977  00FCE6  4D                 	db	77	;'M'
   978  00FCE7  49                 	db	73	;'I'
   979  00FCE8  44                 	db	68	;'D'
   980  00FCE9  49                 	db	73	;'I'
   981  00FCEA  20                 	db	32
   982  00FCEB  4F                 	db	79	;'O'
   983  00FCEC  75                 	db	117	;'u'
   984  00FCED  74                 	db	116	;'t'
   985  00FCEE  20                 	db	32
   986  00FCEF  2D                 	db	45
   987  00FCF0  3E                 	db	62	;'>'
   988  00FCF1  20                 	db	32
   989  00FCF2  28                 	db	40
   990  00FCF3  4E                 	db	78	;'N'
   991  00FCF4  6F                 	db	111	;'o'
   992  00FCF5  74                 	db	116	;'t'
   993  00FCF6  20                 	db	32
   994  00FCF7  43                 	db	67	;'C'
   995  00FCF8  6F                 	db	111	;'o'
   996  00FCF9  6E                 	db	110	;'n'
   997  00FCFA  6E                 	db	110	;'n'
   998  00FCFB  65                 	db	101	;'e'
   999  00FCFC  63                 	db	99	;'c'
  1000  00FCFD  74                 	db	116	;'t'
  1001  00FCFE  65                 	db	101	;'e'
  1002  00FCFF  64                 	db	100	;'d'
  1003  00FD00  29                 	db	41
  1004  00FD01  0D                 	db	13
  1005  00FD02  0A                 	db	10
  1006  00FD03  00                 	db	0
  1007  00FD04                     STR_25:
  1008  00FD04  4E                 	db	78	;'N'
  1009  00FD05  65                 	db	101	;'e'
  1010  00FD06  77                 	db	119	;'w'
  1011  00FD07  20                 	db	32
  1012  00FD08  6E                 	db	110	;'n'
  1013  00FD09  6F                 	db	111	;'o'
  1014  00FD0A  6D                 	db	109	;'m'
  1015  00FD0B  69                 	db	105	;'i'
  1016  00FD0C  6E                 	db	110	;'n'
  1017  00FD0D  61                 	db	97	;'a'
  1018  00FD0E  6C                 	db	108	;'l'
  1019  00FD0F  48                 	db	72	;'H'
  1020  00FD10  61                 	db	97	;'a'
  1021  00FD11  6C                 	db	108	;'l'
  1022  00FD12  6C                 	db	108	;'l'
  1023  00FD13  55                 	db	85	;'U'
  1024  00FD14  6E                 	db	110	;'n'
  1025  00FD15  50                 	db	80	;'P'
  1026  00FD16  72                 	db	114	;'r'
  1027  00FD17  65                 	db	101	;'e'
  1028  00FD18  73                 	db	115	;'s'
  1029  00FD19  73                 	db	115	;'s'
  1030  00FD1A  65                 	db	101	;'e'
  1031  00FD1B  64                 	db	100	;'d'
  1032  00FD1C  20                 	db	32
  1033  00FD1D  76                 	db	118	;'v'
  1034  00FD1E  61                 	db	97	;'a'
  1035  00FD1F  6C                 	db	108	;'l'
  1036  00FD20  75                 	db	117	;'u'
  1037  00FD21  65                 	db	101	;'e'
  1038  00FD22  20                 	db	32
  1039  00FD23  3D                 	db	61	;'='
  1040  00FD24  20                 	db	32
  1041  00FD25  25                 	db	37
  1042  00FD26  64                 	db	100	;'d'
  1043  00FD27  0D                 	db	13
  1044  00FD28  0A                 	db	10
  1045  00FD29  00                 	db	0
  1046  00FD2A                     STR_15:
  1047  00FD2A  73                 	db	115	;'s'
  1048  00FD2B  2F                 	db	47
  1049  00FD2C  53                 	db	83	;'S'
  1050  00FD2D  3A                 	db	58	;':'
  1051  00FD2E  20                 	db	32
  1052  00FD2F  64                 	db	100	;'d'
  1053  00FD30  65                 	db	101	;'e'
  1054  00FD31  63                 	db	99	;'c'
  1055  00FD32  72                 	db	114	;'r'
  1056  00FD33  65                 	db	101	;'e'
  1057  00FD34  6D                 	db	109	;'m'
  1058  00FD35  65                 	db	101	;'e'
  1059  00FD36  6E                 	db	110	;'n'
  1060  00FD37  74                 	db	116	;'t'
  1061  00FD38  2F                 	db	47
  1062  00FD39  69                 	db	105	;'i'
  1063  00FD3A  6E                 	db	110	;'n'
  1064  00FD3B  63                 	db	99	;'c'
  1065  00FD3C  72                 	db	114	;'r'
  1066  00FD3D  65                 	db	101	;'e'
  1067  00FD3E  6D                 	db	109	;'m'
  1068  00FD3F  65                 	db	101	;'e'
  1069  00FD40  6E                 	db	110	;'n'
  1070  00FD41  74                 	db	116	;'t'
  1071  00FD42  20                 	db	32
  1072  00FD43  73                 	db	115	;'s'
  1073  00FD44  61                 	db	97	;'a'
  1074  00FD45  6D                 	db	109	;'m'
  1075  00FD46  70                 	db	112	;'p'
  1076  00FD47  6C                 	db	108	;'l'
  1077  00FD48  65                 	db	101	;'e'
  1078  00FD49  52                 	db	82	;'R'
  1079  00FD4A  61                 	db	97	;'a'
  1080  00FD4B  74                 	db	116	;'t'
  1081  00FD4C  65                 	db	101	;'e'
  1082  00FD4D  0D                 	db	13
  1083  00FD4E  0A                 	db	10
  1084  00FD4F  00                 	db	0
  1085  00FD50                     STR_27:
  1086  00FD50  4E                 	db	78	;'N'
  1087  00FD51  65                 	db	101	;'e'
  1088  00FD52  77                 	db	119	;'w'
  1089  00FD53  20                 	db	32
  1090  00FD54  6E                 	db	110	;'n'
  1091  00FD55  6F                 	db	111	;'o'
  1092  00FD56  6D                 	db	109	;'m'
  1093  00FD57  69                 	db	105	;'i'
  1094  00FD58  6E                 	db	110	;'n'
  1095  00FD59  61                 	db	97	;'a'
  1096  00FD5A  6C                 	db	108	;'l'
  1097  00FD5B  48                 	db	72	;'H'
  1098  00FD5C  61                 	db	97	;'a'
  1099  00FD5D  6C                 	db	108	;'l'
  1100  00FD5E  6C                 	db	108	;'l'
  1101  00FD5F  50                 	db	80	;'P'
  1102  00FD60  72                 	db	114	;'r'
  1103  00FD61  65                 	db	101	;'e'
  1104  00FD62  73                 	db	115	;'s'
  1105  00FD63  73                 	db	115	;'s'
  1106  00FD64  65                 	db	101	;'e'
  1107  00FD65  64                 	db	100	;'d'
  1108  00FD66  20                 	db	32
  1109  00FD67  76                 	db	118	;'v'
  1110  00FD68  61                 	db	97	;'a'
  1111  00FD69  6C                 	db	108	;'l'
  1112  00FD6A  75                 	db	117	;'u'
  1113  00FD6B  65                 	db	101	;'e'
  1114  00FD6C  20                 	db	32
  1115  00FD6D  3D                 	db	61	;'='
  1116  00FD6E  20                 	db	32
  1117  00FD6F  25                 	db	37
  1118  00FD70  64                 	db	100	;'d'
  1119  00FD71  0D                 	db	13
  1120  00FD72  0A                 	db	10
  1121  00FD73  00                 	db	0
  1122  00FD74                     STR_45:
  1123  00FD74  20                 	db	32
  1124  00FD75  20                 	db	32
  1125  00FD76  20                 	db	32
  1126  00FD77  20                 	db	32
  1127  00FD78  4D                 	db	77	;'M'
  1128  00FD79  49                 	db	73	;'I'
  1129  00FD7A  44                 	db	68	;'D'
  1130  00FD7B  49                 	db	73	;'I'
  1131  00FD7C  20                 	db	32
  1132  00FD7D  4F                 	db	79	;'O'
  1133  00FD7E  75                 	db	117	;'u'
  1134  00FD7F  74                 	db	116	;'t'
  1135  00FD80  20                 	db	32
  1136  00FD81  2D                 	db	45
  1137  00FD82  3E                 	db	62	;'>'
  1138  00FD83  20                 	db	32
  1139  00FD84  28                 	db	40
  1140  00FD85  4E                 	db	78	;'N'
  1141  00FD86  6F                 	db	111	;'o'
  1142  00FD87  74                 	db	116	;'t'
  1143  00FD88  20                 	db	32
  1144  00FD89  43                 	db	67	;'C'
  1145  00FD8A  6F                 	db	111	;'o'
  1146  00FD8B  6E                 	db	110	;'n'
  1147  00FD8C  6E                 	db	110	;'n'
  1148  00FD8D  65                 	db	101	;'e'
  1149  00FD8E  63                 	db	99	;'c'
  1150  00FD8F  74                 	db	116	;'t'
  1151  00FD90  65                 	db	101	;'e'
  1152  00FD91  64                 	db	100	;'d'
  1153  00FD92  29                 	db	41
  1154  00FD93  0D                 	db	13
  1155  00FD94  0A                 	db	10
  1156  00FD95  0A                 	db	10
  1157  00FD96  00                 	db	0
  1158  00FD97                     STR_14:
  1159  00FD97  64                 	db	100	;'d'
  1160  00FD98  2F                 	db	47
  1161  00FD99  44                 	db	68	;'D'
  1162  00FD9A  3A                 	db	58	;':'
  1163  00FD9B  20                 	db	32
  1164  00FD9C  64                 	db	100	;'d'
  1165  00FD9D  65                 	db	101	;'e'
  1166  00FD9E  63                 	db	99	;'c'
  1167  00FD9F  72                 	db	114	;'r'
  1168  00FDA0  65                 	db	101	;'e'
  1169  00FDA1  6D                 	db	109	;'m'
  1170  00FDA2  65                 	db	101	;'e'
  1171  00FDA3  6E                 	db	110	;'n'
  1172  00FDA4  74                 	db	116	;'t'
  1173  00FDA5  2F                 	db	47
  1174  00FDA6  69                 	db	105	;'i'
  1175  00FDA7  6E                 	db	110	;'n'
  1176  00FDA8  63                 	db	99	;'c'
  1177  00FDA9  72                 	db	114	;'r'
  1178  00FDAA  65                 	db	101	;'e'
  1179  00FDAB  6D                 	db	109	;'m'
  1180  00FDAC  65                 	db	101	;'e'
  1181  00FDAD  6E                 	db	110	;'n'
  1182  00FDAE  74                 	db	116	;'t'
  1183  00FDAF  20                 	db	32
  1184  00FDB0  64                 	db	100	;'d'
  1185  00FDB1  65                 	db	101	;'e'
  1186  00FDB2  6C                 	db	108	;'l'
  1187  00FDB3  74                 	db	116	;'t'
  1188  00FDB4  61                 	db	97	;'a'
  1189  00FDB5  0D                 	db	13
  1190  00FDB6  0A                 	db	10
  1191  00FDB7  00                 	db	0
  1192  00FDB8                     STR_46:
  1193  00FDB8  57                 	db	87	;'W'
  1194  00FDB9  68                 	db	104	;'h'
  1195  00FDBA  65                 	db	101	;'e'
  1196  00FDBB  6E                 	db	110	;'n'
  1197  00FDBC  20                 	db	32
  1198  00FDBD  79                 	db	121	;'y'
  1199  00FDBE  6F                 	db	111	;'o'
  1200  00FDBF  75                 	db	117	;'u'
  1201  00FDC0  20                 	db	32
  1202  00FDC1  68                 	db	104	;'h'
  1203  00FDC2  61                 	db	97	;'a'
  1204  00FDC3  76                 	db	118	;'v'
  1205  00FDC4  65                 	db	101	;'e'
  1206  00FDC5  20                 	db	32
  1207  00FDC6  63                 	db	99	;'c'
  1208  00FDC7  6F                 	db	111	;'o'
  1209  00FDC8  6D                 	db	109	;'m'
  1210  00FDC9  70                 	db	112	;'p'
  1211  00FDCA  6C                 	db	108	;'l'
  1212  00FDCB  65                 	db	101	;'e'
  1213  00FDCC  74                 	db	116	;'t'
  1214  00FDCD  65                 	db	101	;'e'
  1215  00FDCE  20                 	db	32
  1216  00FDCF  74                 	db	116	;'t'
  1217  00FDD0  68                 	db	104	;'h'
  1218  00FDD1  69                 	db	105	;'i'
  1219  00FDD2  73                 	db	115	;'s'
  1220  00FDD3  3A                 	db	58	;':'
  1221  00FDD4  0D                 	db	13
  1222  00FDD5  0A                 	db	10
  1223  00FDD6  00                 	db	0
  1224  00FDD7                     STR_35:
  1225  00FDD7  4C                 	db	76	;'L'
  1226  00FDD8  61                 	db	97	;'a'
  1227  00FDD9  75                 	db	117	;'u'
  1228  00FDDA  6E                 	db	110	;'n'
  1229  00FDDB  63                 	db	99	;'c'
  1230  00FDDC  68                 	db	104	;'h'
  1231  00FDDD  20                 	db	32
  1232  00FDDE  68                 	db	104	;'h'
  1233  00FDDF  61                 	db	97	;'a'
  1234  00FDE0  69                 	db	105	;'i'
  1235  00FDE1  72                 	db	114	;'r'
  1236  00FDE2  6C                 	db	108	;'l'
  1237  00FDE3  65                 	db	101	;'e'
  1238  00FDE4  73                 	db	115	;'s'
  1239  00FDE5  73                 	db	115	;'s'
  1240  00FDE6  2D                 	db	45
  1241  00FDE7  6D                 	db	109	;'m'
  1242  00FDE8  69                 	db	105	;'i'
  1243  00FDE9  64                 	db	100	;'d'
  1244  00FDEA  69                 	db	105	;'i'
  1245  00FDEB  73                 	db	115	;'s'
  1246  00FDEC  65                 	db	101	;'e'
  1247  00FDED  72                 	db	114	;'r'
  1248  00FDEE  69                 	db	105	;'i'
  1249  00FDEF  61                 	db	97	;'a'
  1250  00FDF0  6C                 	db	108	;'l'
  1251  00FDF1  0D                 	db	13
  1252  00FDF2  0A                 	db	10
  1253  00FDF3  00                 	db	0
  1254  00FDF4                     STR_19:
  1255  00FDF4  4D                 	db	77	;'M'
  1256  00FDF5  3A                 	db	58	;':'
  1257  00FDF6  20                 	db	32
  1258  00FDF7  65                 	db	101	;'e'
  1259  00FDF8  6E                 	db	110	;'n'
  1260  00FDF9  74                 	db	116	;'t'
  1261  00FDFA  65                 	db	101	;'e'
  1262  00FDFB  72                 	db	114	;'r'
  1263  00FDFC  20                 	db	32
  1264  00FDFD  69                 	db	105	;'i'
  1265  00FDFE  6E                 	db	110	;'n'
  1266  00FDFF  74                 	db	116	;'t'
  1267  00FE00  6F                 	db	111	;'o'
  1268  00FE01  20                 	db	32
  1269  00FE02  4D                 	db	77	;'M'
  1270  00FE03  69                 	db	105	;'i'
  1271  00FE04  64                 	db	100	;'d'
  1272  00FE05  69                 	db	105	;'i'
  1273  00FE06  20                 	db	32
  1274  00FE07  6D                 	db	109	;'m'
  1275  00FE08  6F                 	db	111	;'o'
  1276  00FE09  64                 	db	100	;'d'
  1277  00FE0A  65                 	db	101	;'e'
  1278  00FE0B  2E                 	db	46
  1279  00FE0C  0D                 	db	13
  1280  00FE0D  0A                 	db	10
  1281  00FE0E  00                 	db	0
  1282  00FE0F                     STR_42:
  1283  00FE0F  20                 	db	32
  1284  00FE10  20                 	db	32
  1285  00FE11  20                 	db	32
  1286  00FE12  20                 	db	32
  1287  00FE13  46                 	db	70	;'F'
  1288  00FE14  6C                 	db	108	;'l'
  1289  00FE15  6F                 	db	111	;'o'
  1290  00FE16  77                 	db	119	;'w'
  1291  00FE17  20                 	db	32
  1292  00FE18  43                 	db	67	;'C'
  1293  00FE19  6F                 	db	111	;'o'
  1294  00FE1A  6E                 	db	110	;'n'
  1295  00FE1B  74                 	db	116	;'t'
  1296  00FE1C  72                 	db	114	;'r'
  1297  00FE1D  6F                 	db	111	;'o'
  1298  00FE1E  6C                 	db	108	;'l'
  1299  00FE1F  3A                 	db	58	;':'
  1300  00FE20  20                 	db	32
  1301  00FE21  20                 	db	32
  1302  00FE22  20                 	db	32
  1303  00FE23  4E                 	db	78	;'N'
  1304  00FE24  6F                 	db	111	;'o'
  1305  00FE25  6E                 	db	110	;'n'
  1306  00FE26  65                 	db	101	;'e'
  1307  00FE27  0D                 	db	13
  1308  00FE28  0A                 	db	10
  1309  00FE29  00                 	db	0
  1310  00FE2A                     STR_47:
  1311  00FE2A  20                 	db	32
  1312  00FE2B  20                 	db	32
  1313  00FE2C  20                 	db	32
  1314  00FE2D  20                 	db	32
  1315  00FE2E  43                 	db	67	;'C'
  1316  00FE2F  6C                 	db	108	;'l'
  1317  00FE30  6F                 	db	111	;'o'
  1318  00FE31  73                 	db	115	;'s'
  1319  00FE32  65                 	db	101	;'e'
  1320  00FE33  20                 	db	32
  1321  00FE34  6F                 	db	111	;'o'
  1322  00FE35  75                 	db	117	;'u'
  1323  00FE36  74                 	db	116	;'t'
  1324  00FE37  20                 	db	32
  1325  00FE38  6F                 	db	111	;'o'
  1326  00FE39  66                 	db	102	;'f'
  1327  00FE3A  20                 	db	32
  1328  00FE3B  50                 	db	80	;'P'
  1329  00FE3C  75                 	db	117	;'u'
  1330  00FE3D  74                 	db	116	;'t'
  1331  00FE3E  74                 	db	116	;'t'
  1332  00FE3F  79                 	db	121	;'y'
  1333  00FE40  2E                 	db	46
  1334  00FE41  0D                 	db	13
  1335  00FE42  0A                 	db	10
  1336  00FE43  00                 	db	0
  1337  00FE44                     STR_37:
  1338  00FE44  20                 	db	32
  1339  00FE45  20                 	db	32
  1340  00FE46  20                 	db	32
  1341  00FE47  20                 	db	32
  1342  00FE48  46                 	db	70	;'F'
  1343  00FE49  69                 	db	105	;'i'
  1344  00FE4A  6C                 	db	108	;'l'
  1345  00FE4B  65                 	db	101	;'e'
  1346  00FE4C  20                 	db	32
  1347  00FE4D  2D                 	db	45
  1348  00FE4E  3E                 	db	62	;'>'
  1349  00FE4F  20                 	db	32
  1350  00FE50  70                 	db	112	;'p'
  1351  00FE51  72                 	db	114	;'r'
  1352  00FE52  65                 	db	101	;'e'
  1353  00FE53  66                 	db	102	;'f'
  1354  00FE54  65                 	db	101	;'e'
  1355  00FE55  72                 	db	114	;'r'
  1356  00FE56  65                 	db	101	;'e'
  1357  00FE57  6E                 	db	110	;'n'
  1358  00FE58  63                 	db	99	;'c'
  1359  00FE59  65                 	db	101	;'e'
  1360  00FE5A  73                 	db	115	;'s'
  1361  00FE5B  0D                 	db	13
  1362  00FE5C  0A                 	db	10
  1363  00FE5D  00                 	db	0
  1364  00FE5E                     STR_13:
  1365  00FE5E  7A                 	db	122	;'z'
  1366  00FE5F  3A                 	db	58	;':'
  1367  00FE60  20                 	db	32
  1368  00FE61  43                 	db	67	;'C'
  1369  00FE62  6C                 	db	108	;'l'
  1370  00FE63  65                 	db	101	;'e'
  1371  00FE64  61                 	db	97	;'a'
  1372  00FE65  72                 	db	114	;'r'
  1373  00FE66  20                 	db	32
  1374  00FE67  74                 	db	116	;'t'
  1375  00FE68  68                 	db	104	;'h'
  1376  00FE69  65                 	db	101	;'e'
  1377  00FE6A  20                 	db	32
  1378  00FE6B  74                 	db	116	;'t'
  1379  00FE6C  65                 	db	101	;'e'
  1380  00FE6D  72                 	db	114	;'r'
  1381  00FE6E  6D                 	db	109	;'m'
  1382  00FE6F  69                 	db	105	;'i'
  1383  00FE70  6E                 	db	110	;'n'
  1384  00FE71  61                 	db	97	;'a'
  1385  00FE72  6C                 	db	108	;'l'
  1386  00FE73  2E                 	db	46
  1387  00FE74  0D                 	db	13
  1388  00FE75  0A                 	db	10
  1389  00FE76  00                 	db	0
  1390  00FE77                     STR_56:
  1391  00FE77  20                 	db	32
  1392  00FE78  20                 	db	32
  1393  00FE79  20                 	db	32
  1394  00FE7A  20                 	db	32
  1395  00FE7B  20                 	db	32
  1396  00FE7C  20                 	db	32
  1397  00FE7D  20                 	db	32
  1398  00FE7E  20                 	db	32
  1399  00FE7F  63                 	db	99	;'c'
  1400  00FE80  6C                 	db	108	;'l'
  1401  00FE81  6F                 	db	111	;'o'
  1402  00FE82  73                 	db	115	;'s'
  1403  00FE83  65                 	db	101	;'e'
  1404  00FE84  20                 	db	32
  1405  00FE85  68                 	db	104	;'h'
  1406  00FE86  61                 	db	97	;'a'
  1407  00FE87  69                 	db	105	;'i'
  1408  00FE88  72                 	db	114	;'r'
  1409  00FE89  6C                 	db	108	;'l'
  1410  00FE8A  65                 	db	101	;'e'
  1411  00FE8B  73                 	db	115	;'s'
  1412  00FE8C  73                 	db	115	;'s'
  1413  00FE8D  0D                 	db	13
  1414  00FE8E  0A                 	db	10
  1415  00FE8F  00                 	db	0
  1416  00FE90                     STR_41:
  1417  00FE90  20                 	db	32
  1418  00FE91  20                 	db	32
  1419  00FE92  20                 	db	32
  1420  00FE93  20                 	db	32
  1421  00FE94  53                 	db	83	;'S'
  1422  00FE95  74                 	db	116	;'t'
  1423  00FE96  6F                 	db	111	;'o'
  1424  00FE97  70                 	db	112	;'p'
  1425  00FE98  20                 	db	32
  1426  00FE99  42                 	db	66	;'B'
  1427  00FE9A  69                 	db	105	;'i'
  1428  00FE9B  74                 	db	116	;'t'
  1429  00FE9C  28                 	db	40
  1430  00FE9D  73                 	db	115	;'s'
  1431  00FE9E  29                 	db	41
  1432  00FE9F  3A                 	db	58	;':'
  1433  00FEA0  20                 	db	32
  1434  00FEA1  20                 	db	32
  1435  00FEA2  20                 	db	32
  1436  00FEA3  20                 	db	32
  1437  00FEA4  31                 	db	49	;'1'
  1438  00FEA5  0D                 	db	13
  1439  00FEA6  0A                 	db	10
  1440  00FEA7  00                 	db	0
  1441  00FEA8                     STR_38:
  1442  00FEA8  20                 	db	32
  1443  00FEA9  20                 	db	32
  1444  00FEAA  20                 	db	32
  1445  00FEAB  20                 	db	32
  1446  00FEAC  42                 	db	66	;'B'
  1447  00FEAD  61                 	db	97	;'a'
  1448  00FEAE  75                 	db	117	;'u'
  1449  00FEAF  64                 	db	100	;'d'
  1450  00FEB0  20                 	db	32
  1451  00FEB1  52                 	db	82	;'R'
  1452  00FEB2  61                 	db	97	;'a'
  1453  00FEB3  74                 	db	116	;'t'
  1454  00FEB4  65                 	db	101	;'e'
  1455  00FEB5  3A                 	db	58	;':'
  1456  00FEB6  20                 	db	32
  1457  00FEB7  20                 	db	32
  1458  00FEB8  39                 	db	57	;'9'
  1459  00FEB9  36                 	db	54	;'6'
  1460  00FEBA  30                 	db	48	;'0'
  1461  00FEBB  30                 	db	48	;'0'
  1462  00FEBC  0D                 	db	13
  1463  00FEBD  0A                 	db	10
  1464  00FEBE  00                 	db	0
  1465  00FEBF                     STR_40:
  1466  00FEBF  20                 	db	32
  1467  00FEC0  20                 	db	32
  1468  00FEC1  20                 	db	32
  1469  00FEC2  20                 	db	32
  1470  00FEC3  50                 	db	80	;'P'
  1471  00FEC4  61                 	db	97	;'a'
  1472  00FEC5  72                 	db	114	;'r'
  1473  00FEC6  69                 	db	105	;'i'
  1474  00FEC7  74                 	db	116	;'t'
  1475  00FEC8  79                 	db	121	;'y'
  1476  00FEC9  3A                 	db	58	;':'
  1477  00FECA  20                 	db	32
  1478  00FECB  20                 	db	32
  1479  00FECC  20                 	db	32
  1480  00FECD  20                 	db	32
  1481  00FECE  20                 	db	32
  1482  00FECF  4E                 	db	78	;'N'
  1483  00FED0  6F                 	db	111	;'o'
  1484  00FED1  6E                 	db	110	;'n'
  1485  00FED2  65                 	db	101	;'e'
  1486  00FED3  0D                 	db	13
  1487  00FED4  0A                 	db	10
  1488  00FED5  00                 	db	0
  1489  00FED6                     STR_6:
  1490  00FED6  20                 	db	32
  1491  00FED7  20                 	db	32
  1492  00FED8  20                 	db	32
  1493  00FED9  20                 	db	32
  1494  00FEDA  4E                 	db	78	;'N'
  1495  00FEDB  6F                 	db	111	;'o'
  1496  00FEDC  6D                 	db	109	;'m'
  1497  00FEDD  69                 	db	105	;'i'
  1498  00FEDE  6E                 	db	110	;'n'
  1499  00FEDF  61                 	db	97	;'a'
  1500  00FEE0  6C                 	db	108	;'l'
  1501  00FEE1  20                 	db	32
  1502  00FEE2  25                 	db	37
  1503  00FEE3  75                 	db	117	;'u'
  1504  00FEE4  20                 	db	32
  1505  00FEE5  74                 	db	116	;'t'
  1506  00FEE6  6F                 	db	111	;'o'
  1507  00FEE7  20                 	db	32
  1508  00FEE8  25                 	db	37
  1509  00FEE9  75                 	db	117	;'u'
  1510  00FEEA  0D                 	db	13
  1511  00FEEB  0A                 	db	10
  1512  00FEEC  00                 	db	0
  1513  00FEED                     STR_3:
  1514  00FEED  4D                 	db	77	;'M'
  1515  00FEEE  49                 	db	73	;'I'
  1516  00FEEF  44                 	db	68	;'D'
  1517  00FEF0  49                 	db	73	;'I'
  1518  00FEF1  20                 	db	32
  1519  00FEF2  2B                 	db	43
  1520  00FEF3  20                 	db	32
  1521  00FEF4  48                 	db	72	;'H'
  1522  00FEF5  61                 	db	97	;'a'
  1523  00FEF6  6C                 	db	108	;'l'
  1524  00FEF7  6C                 	db	108	;'l'
  1525  00FEF8  20                 	db	32
  1526  00FEF9  65                 	db	101	;'e'
  1527  00FEFA  66                 	db	102	;'f'
  1528  00FEFB  66                 	db	102	;'f'
  1529  00FEFC  65                 	db	101	;'e'
  1530  00FEFD  63                 	db	99	;'c'
  1531  00FEFE  74                 	db	116	;'t'
  1532  00FEFF  20                 	db	32
  1533  00FF00  0D                 	db	13
  1534  00FF01  0A                 	db	10
  1535  00FF02  00                 	db	0
  1536  00FF03                     STR_12:
  1537  00FF03  5A                 	db	90	;'Z'
  1538  00FF04  3A                 	db	58	;':'
  1539  00FF05  20                 	db	32
  1540  00FF06  52                 	db	82	;'R'
  1541  00FF07  65                 	db	101	;'e'
  1542  00FF08  73                 	db	115	;'s'
  1543  00FF09  65                 	db	101	;'e'
  1544  00FF0A  74                 	db	116	;'t'
  1545  00FF0B  20                 	db	32
  1546  00FF0C  70                 	db	112	;'p'
  1547  00FF0D  72                 	db	114	;'r'
  1548  00FF0E  6F                 	db	111	;'o'
  1549  00FF0F  63                 	db	99	;'c'
  1550  00FF10  65                 	db	101	;'e'
  1551  00FF11  73                 	db	115	;'s'
  1552  00FF12  73                 	db	115	;'s'
  1553  00FF13  6F                 	db	111	;'o'
  1554  00FF14  72                 	db	114	;'r'
  1555  00FF15  2E                 	db	46
  1556  00FF16  0D                 	db	13
  1557  00FF17  0A                 	db	10
  1558  00FF18  00                 	db	0
  1559  00FF19                     STR_2:
  1560  00FF19  69                 	db	105	;'i'
  1561  00FF1A  6E                 	db	110	;'n'
  1562  00FF1B  4C                 	db	76	;'L'
  1563  00FF1C  61                 	db	97	;'a'
  1564  00FF1D  62                 	db	98	;'b'
  1565  00FF1E  20                 	db	32
  1566  00FF1F  31                 	db	49	;'1'
  1567  00FF20  31                 	db	49	;'1'
  1568  00FF21  20                 	db	32
  1569  00FF22  74                 	db	116	;'t'
  1570  00FF23  65                 	db	101	;'e'
  1571  00FF24  72                 	db	114	;'r'
  1572  00FF25  6D                 	db	109	;'m'
  1573  00FF26  69                 	db	105	;'i'
  1574  00FF27  6E                 	db	110	;'n'
  1575  00FF28  61                 	db	97	;'a'
  1576  00FF29  6C                 	db	108	;'l'
  1577  00FF2A  20                 	db	32
  1578  00FF2B  0D                 	db	13
  1579  00FF2C  0A                 	db	10
  1580  00FF2D  00                 	db	0
  1581  00FF2E                     STR_39:
  1582  00FF2E  20                 	db	32
  1583  00FF2F  20                 	db	32
  1584  00FF30  20                 	db	32
  1585  00FF31  20                 	db	32
  1586  00FF32  44                 	db	68	;'D'
  1587  00FF33  61                 	db	97	;'a'
  1588  00FF34  74                 	db	116	;'t'
  1589  00FF35  61                 	db	97	;'a'
  1590  00FF36  20                 	db	32
  1591  00FF37  42                 	db	66	;'B'
  1592  00FF38  69                 	db	105	;'i'
  1593  00FF39  74                 	db	116	;'t'
  1594  00FF3A  73                 	db	115	;'s'
  1595  00FF3B  3A                 	db	58	;':'
  1596  00FF3C  20                 	db	32
  1597  00FF3D  20                 	db	32
  1598  00FF3E  38                 	db	56	;'8'
  1599  00FF3F  0D                 	db	13
  1600  00FF40  0A                 	db	10
  1601  00FF41  00                 	db	0
  1602  00FF42                     STR_34:
  1603  00FF42  6B                 	db	107	;'k'
  1604  00FF43  65                 	db	101	;'e'
  1605  00FF44  79                 	db	121	;'y'
  1606  00FF45  20                 	db	32
  1607  00FF46  76                 	db	118	;'v'
  1608  00FF47  65                 	db	101	;'e'
  1609  00FF48  6C                 	db	108	;'l'
  1610  00FF49  6F                 	db	111	;'o'
  1611  00FF4A  63                 	db	99	;'c'
  1612  00FF4B  69                 	db	105	;'i'
  1613  00FF4C  74                 	db	116	;'t'
  1614  00FF4D  79                 	db	121	;'y'
  1615  00FF4E  20                 	db	32
  1616  00FF4F  3D                 	db	61	;'='
  1617  00FF50  20                 	db	32
  1618  00FF51  25                 	db	37
  1619  00FF52  64                 	db	100	;'d'
  1620  00FF53  0D                 	db	13
  1621  00FF54  0A                 	db	10
  1622  00FF55  00                 	db	0
  1623  00FF56                     STR_1:
  1624  00FF56  44                 	db	68	;'D'
  1625  00FF57  65                 	db	101	;'e'
  1626  00FF58  76                 	db	118	;'v'
  1627  00FF59  65                 	db	101	;'e'
  1628  00FF5A  6C                 	db	108	;'l'
  1629  00FF5B  6F                 	db	111	;'o'
  1630  00FF5C  70                 	db	112	;'p'
  1631  00FF5D  6D                 	db	109	;'m'
  1632  00FF5E  65                 	db	101	;'e'
  1633  00FF5F  6E                 	db	110	;'n'
  1634  00FF60  74                 	db	116	;'t'
  1635  00FF61  20                 	db	32
  1636  00FF62  42                 	db	66	;'B'
  1637  00FF63  6F                 	db	111	;'o'
  1638  00FF64  61                 	db	97	;'a'
  1639  00FF65  72                 	db	114	;'r'
  1640  00FF66  64                 	db	100	;'d'
  1641  00FF67  0D                 	db	13
  1642  00FF68  0A                 	db	10
  1643  00FF69  00                 	db	0
  1644  00FF6A                     STR_31:
  1645  00FF6A  54                 	db	84	;'T'
  1646  00FF6B  61                 	db	97	;'a'
  1647  00FF6C  70                 	db	112	;'p'
  1648  00FF6D  20                 	db	32
  1649  00FF6E  61                 	db	97	;'a'
  1650  00FF6F  20                 	db	32
  1651  00FF70  70                 	db	112	;'p'
  1652  00FF71  69                 	db	105	;'i'
  1653  00FF72  61                 	db	97	;'a'
  1654  00FF73  6E                 	db	110	;'n'
  1655  00FF74  6F                 	db	111	;'o'
  1656  00FF75  20                 	db	32
  1657  00FF76  6B                 	db	107	;'k'
  1658  00FF77  65                 	db	101	;'e'
  1659  00FF78  79                 	db	121	;'y'
  1660  00FF79  2E                 	db	46
  1661  00FF7A  0D                 	db	13
  1662  00FF7B  0A                 	db	10
  1663  00FF7C  00                 	db	0
  1664  00FF7D                     STR_30:
  1665  00FF7D  48                 	db	72	;'H'
  1666  00FF7E  61                 	db	97	;'a'
  1667  00FF7F  6C                 	db	108	;'l'
  1668  00FF80  6C                 	db	108	;'l'
  1669  00FF81  20                 	db	32
  1670  00FF82  73                 	db	115	;'s'
  1671  00FF83  65                 	db	101	;'e'
  1672  00FF84  6E                 	db	110	;'n'
  1673  00FF85  73                 	db	115	;'s'
  1674  00FF86  6F                 	db	111	;'o'
  1675  00FF87  72                 	db	114	;'r'
  1676  00FF88  20                 	db	32
  1677  00FF89  3D                 	db	61	;'='
  1678  00FF8A  20                 	db	32
  1679  00FF8B  25                 	db	37
  1680  00FF8C  64                 	db	100	;'d'
  1681  00FF8D  0D                 	db	13
  1682  00FF8E  0A                 	db	10
  1683  00FF8F  00                 	db	0
  1684  00FF90                     STR_58:
  1685  00FF90  55                 	db	85	;'U'
  1686  00FF91  6E                 	db	110	;'n'
  1687  00FF92  6B                 	db	107	;'k'
  1688  00FF93  6E                 	db	110	;'n'
  1689  00FF94  6F                 	db	111	;'o'
  1690  00FF95  77                 	db	119	;'w'
  1691  00FF96  6E                 	db	110	;'n'
  1692  00FF97  20                 	db	32
  1693  00FF98  6B                 	db	107	;'k'
  1694  00FF99  65                 	db	101	;'e'
  1695  00FF9A  79                 	db	121	;'y'
  1696  00FF9B  20                 	db	32
  1697  00FF9C  25                 	db	37
  1698  00FF9D  63                 	db	99	;'c'
  1699  00FF9E  0D                 	db	13
  1700  00FF9F  0A                 	db	10
  1701  00FFA0  00                 	db	0
  1702  00FFA1                     STR_7:
  1703  00FFA1  20                 	db	32
  1704  00FFA2  20                 	db	32
  1705  00FFA3  20                 	db	32
  1706  00FFA4  20                 	db	32
  1707  00FFA5  64                 	db	100	;'d'
  1708  00FFA6  65                 	db	101	;'e'
  1709  00FFA7  6C                 	db	108	;'l'
  1710  00FFA8  74                 	db	116	;'t'
  1711  00FFA9  61                 	db	97	;'a'
  1712  00FFAA  20                 	db	32
  1713  00FFAB  3D                 	db	61	;'='
  1714  00FFAC  20                 	db	32
  1715  00FFAD  25                 	db	37
  1716  00FFAE  64                 	db	100	;'d'
  1717  00FFAF  0D                 	db	13
  1718  00FFB0  0A                 	db	10
  1719  00FFB1  00                 	db	0
  1720  00FFB2                     STR_28:
  1721  00FFB2  6E                 	db	110	;'n'
  1722  00FFB3  65                 	db	101	;'e'
  1723  00FFB4  77                 	db	119	;'w'
  1724  00FFB5  20                 	db	32
  1725  00FFB6  64                 	db	100	;'d'
  1726  00FFB7  65                 	db	101	;'e'
  1727  00FFB8  6C                 	db	108	;'l'
  1728  00FFB9  74                 	db	116	;'t'
  1729  00FFBA  61                 	db	97	;'a'
  1730  00FFBB  20                 	db	32
  1731  00FFBC  3D                 	db	61	;'='
  1732  00FFBD  20                 	db	32
  1733  00FFBE  25                 	db	37
  1734  00FFBF  64                 	db	100	;'d'
  1735  00FFC0  0D                 	db	13
  1736  00FFC1  0A                 	db	10
  1737  00FFC2  00                 	db	0
  1738  00FFC3                     STR_43:
  1739  00FFC3  20                 	db	32
  1740  00FFC4  20                 	db	32
  1741  00FFC5  20                 	db	32
  1742  00FFC6  20                 	db	32
  1743  00FFC7  43                 	db	67	;'C'
  1744  00FFC8  6C                 	db	108	;'l'
  1745  00FFC9  69                 	db	105	;'i'
  1746  00FFCA  63                 	db	99	;'c'
  1747  00FFCB  6B                 	db	107	;'k'
  1748  00FFCC  20                 	db	32
  1749  00FFCD  4F                 	db	79	;'O'
  1750  00FFCE  4B                 	db	75	;'K'
  1751  00FFCF  0D                 	db	13
  1752  00FFD0  0A                 	db	10
  1753  00FFD1  00                 	db	0
  1754  00FFD2                     STR_10:
  1755  00FFD2  3F                 	db	63	;'?'
  1756  00FFD3  3A                 	db	58	;':'
  1757  00FFD4  20                 	db	32
  1758  00FFD5  68                 	db	104	;'h'
  1759  00FFD6  65                 	db	101	;'e'
  1760  00FFD7  6C                 	db	108	;'l'
  1761  00FFD8  70                 	db	112	;'p'
  1762  00FFD9  20                 	db	32
  1763  00FFDA  6D                 	db	109	;'m'
  1764  00FFDB  65                 	db	101	;'e'
  1765  00FFDC  6E                 	db	110	;'n'
  1766  00FFDD  75                 	db	117	;'u'
  1767  00FFDE  0D                 	db	13
  1768  00FFDF  0A                 	db	10
  1769  00FFE0  00                 	db	0
  1770  00FFE1                     STR_21:
  1771  00FFE1  6F                 	db	111	;'o'
  1772  00FFE2  3A                 	db	58	;':'
  1773  00FFE3  20                 	db	32
  1774  00FFE4  20                 	db	32
  1775  00FFE5  20                 	db	32
  1776  00FFE6  20                 	db	32
  1777  00FFE7  20                 	db	32
  1778  00FFE8  20                 	db	32
  1779  00FFE9  6F                 	db	111	;'o'
  1780  00FFEA  6B                 	db	107	;'k'
  1781  00FFEB  0D                 	db	13
  1782  00FFEC  0A                 	db	10
  1783  00FFED  00                 	db	0
  1784  00FFEE                     STR_11:
  1785  00FFEE  6F                 	db	111	;'o'
  1786  00FFEF  3A                 	db	58	;':'
  1787  00FFF0  20                 	db	32
  1788  00FFF1  6B                 	db	107	;'k'
  1789  00FFF2  0D                 	db	13
  1790  00FFF3  0A                 	db	10
  1791  00FFF4  00                 	db	0
  1792  00FFF5                     STR_4:
  1793  00FFF5  0D                 	db	13
  1794  00FFF6  0A                 	db	10
  1795  00FFF7  3E                 	db	62	;'>'
  1796  00FFF8  20                 	db	32
  1797  00FFF9  00                 	db	0
  1798  00FFFA                     STR_32:
  1799  00FFFA  25                 	db	37
  1800  00FFFB  34                 	db	52	;'4'
  1801  00FFFC  64                 	db	100	;'d'
  1802  00FFFD  20                 	db	32
  1803  00FFFE  00                 	db	0
  1804  0000                     
  1805                           ; #config settings
  1806  00FFFF  00                 	db	0	; dummy byte at the end
  1807  0000                     
  1808                           	psect	cinit
  1809  00DE1C                     __pcinit:
  1810                           	opt callstack 0
  1811  00DE1C                     start_initialization:
  1812                           	opt callstack 0
  1813  00DE1C                     __initialization:
  1814                           	opt callstack 0
  1815                           
  1816                           ; Clear objects allocated to BANK0 (50 bytes)
  1817  00DE1C  EE00  F0BD         	lfsr	0,__pbssBANK0
  1818  00DE20  0E32               	movlw	50
  1819  00DE22                     clear_0:
  1820  00DE22  6AEE               	clrf	postinc0,c
  1821  00DE24  06E8               	decf	wreg,f,c
  1822  00DE26  E1FD               	bnz	clear_0
  1823                           
  1824                           ; Clear objects allocated to COMRAM (1 bytes)
  1825  00DE28  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1826  00DE2A                     end_of_initialization:
  1827                           	opt callstack 0
  1828  00DE2A                     __end_of__initialization:
  1829                           	opt callstack 0
  1830  00DE2A  0100               	movlb	0
  1831  00DE2C  EF2E  F079         	goto	_main	;jump to C main() function
  1832                           
  1833                           	psect	bssCOMRAM
  1834  00005F                     __pbssCOMRAM:
  1835                           	opt callstack 0
  1836  00005F                     _eusart1RxLastError:
  1837                           	opt callstack 0
  1838  00005F                     	ds	1
  1839                           
  1840                           	psect	bssBANK0
  1841  0000BD                     __pbssBANK0:
  1842                           	opt callstack 0
  1843  0000BD                     _nout:
  1844                           	opt callstack 0
  1845  0000BD                     	ds	2
  1846  0000BF                     _width:
  1847                           	opt callstack 0
  1848  0000BF                     	ds	2
  1849  0000C1                     _prec:
  1850                           	opt callstack 0
  1851  0000C1                     	ds	2
  1852  0000C3                     _flags:
  1853                           	opt callstack 0
  1854  0000C3                     	ds	2
  1855  0000C5                     _EUSART1_ErrorHandler:
  1856                           	opt callstack 0
  1857  0000C5                     	ds	2
  1858  0000C7                     _EUSART1_OverrunErrorHandler:
  1859                           	opt callstack 0
  1860  0000C7                     	ds	2
  1861  0000C9                     _EUSART1_FramingErrorHandler:
  1862                           	opt callstack 0
  1863  0000C9                     	ds	2
  1864  0000CB                     _ADC_InterruptHandler:
  1865                           	opt callstack 0
  1866  0000CB                     	ds	2
  1867  0000CD                     _timer0ReloadVal:
  1868                           	opt callstack 0
  1869  0000CD                     	ds	2
  1870  0000CF                     _dbuf:
  1871                           	opt callstack 0
  1872  0000CF                     	ds	32
  1873                           
  1874                           	psect	cstackBANK0
  1875  000060                     __pcstackBANK0:
  1876                           	opt callstack 0
  1877  000060                     ?_vfprintf:
  1878                           	opt callstack 0
  1879  000060                     vfprintf@fp:
  1880                           	opt callstack 0
  1881                           
  1882                           ; 2 bytes @ 0x0
  1883  000060                     	ds	2
  1884  000062                     vfprintf@fmt:
  1885                           	opt callstack 0
  1886                           
  1887                           ; 2 bytes @ 0x2
  1888  000062                     	ds	2
  1889  000064                     vfprintf@ap:
  1890                           	opt callstack 0
  1891                           
  1892                           ; 2 bytes @ 0x4
  1893  000064                     	ds	2
  1894  000066                     vfprintf@cfmt:
  1895                           	opt callstack 0
  1896                           
  1897                           ; 2 bytes @ 0x6
  1898  000066                     	ds	2
  1899  000068                     ?_printf:
  1900                           	opt callstack 0
  1901  000068                     printf@fmt:
  1902                           	opt callstack 0
  1903                           
  1904                           ; 2 bytes @ 0x8
  1905  000068                     	ds	8
  1906  000070                     printf@ap:
  1907                           	opt callstack 0
  1908                           
  1909                           ; 2 bytes @ 0x10
  1910  000070                     	ds	2
  1911  000072                     ??_main:
  1912                           
  1913                           ; 1 bytes @ 0x12
  1914  000072                     	ds	2
  1915  000074                     main@sample:
  1916                           	opt callstack 0
  1917                           
  1918                           ; 64 bytes @ 0x14
  1919  000074                     	ds	64
  1920  0000B4                     main@nominalHallPressed:
  1921                           	opt callstack 0
  1922                           
  1923                           ; 1 bytes @ 0x54
  1924  0000B4                     	ds	1
  1925  0000B5                     main@instrument:
  1926                           	opt callstack 0
  1927                           
  1928                           ; 1 bytes @ 0x55
  1929  0000B5                     	ds	1
  1930  0000B6                     main@nominalHallUnPressed:
  1931                           	opt callstack 0
  1932                           
  1933                           ; 1 bytes @ 0x56
  1934  0000B6                     	ds	1
  1935  0000B7                     main@delta:
  1936                           	opt callstack 0
  1937                           
  1938                           ; 1 bytes @ 0x57
  1939  0000B7                     	ds	1
  1940  0000B8                     main@cmd:
  1941                           	opt callstack 0
  1942                           
  1943                           ; 1 bytes @ 0x58
  1944  0000B8                     	ds	1
  1945  0000B9                     main@pitch:
  1946                           	opt callstack 0
  1947                           
  1948                           ; 1 bytes @ 0x59
  1949  0000B9                     	ds	1
  1950  0000BA                     main@sampleRate:
  1951                           	opt callstack 0
  1952                           
  1953                           ; 2 bytes @ 0x5A
  1954  0000BA                     	ds	2
  1955  0000BC                     main@i:
  1956                           	opt callstack 0
  1957                           
  1958                           ; 1 bytes @ 0x5C
  1959  0000BC                     	ds	1
  1960                           
  1961                           	psect	cstackCOMRAM
  1962  000001                     __pcstackCOMRAM:
  1963                           	opt callstack 0
  1964  000001                     ??_ADC_SelectChannel:
  1965  000001                     ??_TMR0_Initialize:
  1966  000001                     ?_ADC_GetConversionResult:
  1967                           	opt callstack 0
  1968  000001                     ?_strlen:
  1969                           	opt callstack 0
  1970  000001                     ?_isdigit:
  1971                           	opt callstack 0
  1972  000001                     ?_isspace:
  1973                           	opt callstack 0
  1974  000001                     ?_TMR0_ReadTimer:
  1975                           	opt callstack 0
  1976  000001                     ?___wmul:
  1977                           	opt callstack 0
  1978  000001                     ?___aodiv:
  1979                           	opt callstack 0
  1980  000001                     ?___aomod:
  1981                           	opt callstack 0
  1982  000001                     ?___lodiv:
  1983                           	opt callstack 0
  1984  000001                     ?___lomod:
  1985                           	opt callstack 0
  1986  000001                     putByteSCI@writeByte:
  1987                           	opt callstack 0
  1988  000001                     EUSART1_Write@txData:
  1989                           	opt callstack 0
  1990  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1991                           	opt callstack 0
  1992  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1993                           	opt callstack 0
  1994  000001                     EUSART1_SetErrorHandler@interruptHandler:
  1995                           	opt callstack 0
  1996  000001                     ___wmul@multiplier:
  1997                           	opt callstack 0
  1998  000001                     isdigit@c:
  1999                           	opt callstack 0
  2000  000001                     isspace@c:
  2001                           	opt callstack 0
  2002  000001                     strlen@s:
  2003                           	opt callstack 0
  2004  000001                     ___aodiv@dividend:
  2005                           	opt callstack 0
  2006  000001                     ___aomod@dividend:
  2007                           	opt callstack 0
  2008  000001                     ___lodiv@dividend:
  2009                           	opt callstack 0
  2010  000001                     ___lomod@dividend:
  2011                           	opt callstack 0
  2012                           
  2013                           ; 8 bytes @ 0x0
  2014  000001                     	ds	1
  2015  000002                     noteOn@pitch:
  2016                           	opt callstack 0
  2017  000002                     ADC_SelectChannel@channel:
  2018                           	opt callstack 0
  2019  000002                     putch@txData:
  2020                           	opt callstack 0
  2021                           
  2022                           ; 1 bytes @ 0x1
  2023  000002                     	ds	1
  2024  000003                     ??_ADC_GetConversionResult:
  2025  000003                     ??_isdigit:
  2026  000003                     ??_isspace:
  2027  000003                     ??_TMR0_ReadTimer:
  2028  000003                     noteOn@velocity:
  2029                           	opt callstack 0
  2030  000003                     ___wmul@multiplicand:
  2031                           	opt callstack 0
  2032  000003                     fputc@c:
  2033                           	opt callstack 0
  2034  000003                     strlen@a:
  2035                           	opt callstack 0
  2036                           
  2037                           ; 2 bytes @ 0x2
  2038  000003                     	ds	1
  2039  000004                     noteOn@cmd:
  2040                           	opt callstack 0
  2041                           
  2042                           ; 1 bytes @ 0x3
  2043  000004                     	ds	1
  2044  000005                     TMR0_ReadTimer@readVal:
  2045                           	opt callstack 0
  2046  000005                     ___wmul@product:
  2047                           	opt callstack 0
  2048  000005                     fputc@fp:
  2049                           	opt callstack 0
  2050                           
  2051                           ; 2 bytes @ 0x4
  2052  000005                     	ds	2
  2053  000007                     ??_fputc:
  2054  000007                     TMR0_ReadTimer@readValLow:
  2055                           	opt callstack 0
  2056  000007                     _isspace$1534:
  2057                           	opt callstack 0
  2058                           
  2059                           ; 1 bytes @ 0x6
  2060  000007                     	ds	1
  2061  000008                     ?_atoi:
  2062                           	opt callstack 0
  2063  000008                     TMR0_ReadTimer@readValHigh:
  2064                           	opt callstack 0
  2065  000008                     atoi@s:
  2066                           	opt callstack 0
  2067                           
  2068                           ; 2 bytes @ 0x7
  2069  000008                     	ds	1
  2070  000009                     TMR0_WriteTimer@timerVal:
  2071                           	opt callstack 0
  2072  000009                     ___aodiv@divisor:
  2073                           	opt callstack 0
  2074  000009                     ___aomod@divisor:
  2075                           	opt callstack 0
  2076  000009                     ___lodiv@divisor:
  2077                           	opt callstack 0
  2078  000009                     ___lomod@divisor:
  2079                           	opt callstack 0
  2080                           
  2081                           ; 8 bytes @ 0x8
  2082  000009                     	ds	1
  2083  00000A                     ??_atoi:
  2084                           
  2085                           ; 1 bytes @ 0x9
  2086  00000A                     	ds	1
  2087  00000B                     
  2088                           ; 1 bytes @ 0xA
  2089  00000B                     	ds	1
  2090  00000C                     fputs@s:
  2091                           	opt callstack 0
  2092                           
  2093                           ; 2 bytes @ 0xB
  2094  00000C                     	ds	2
  2095  00000E                     atoi@neg:
  2096                           	opt callstack 0
  2097  00000E                     fputs@fp:
  2098                           	opt callstack 0
  2099                           
  2100                           ; 2 bytes @ 0xD
  2101  00000E                     	ds	2
  2102  000010                     fputs@c:
  2103                           	opt callstack 0
  2104  000010                     _atoi$1516:
  2105                           	opt callstack 0
  2106                           
  2107                           ; 2 bytes @ 0xF
  2108  000010                     	ds	1
  2109  000011                     ___aodiv@counter:
  2110                           	opt callstack 0
  2111  000011                     ___aomod@counter:
  2112                           	opt callstack 0
  2113  000011                     ___lomod@counter:
  2114                           	opt callstack 0
  2115  000011                     fputs@i:
  2116                           	opt callstack 0
  2117  000011                     ___lodiv@quotient:
  2118                           	opt callstack 0
  2119                           
  2120                           ; 8 bytes @ 0x10
  2121  000011                     	ds	1
  2122  000012                     ___aodiv@sign:
  2123                           	opt callstack 0
  2124  000012                     ___aomod@sign:
  2125                           	opt callstack 0
  2126  000012                     _atoi$1518:
  2127                           	opt callstack 0
  2128                           
  2129                           ; 2 bytes @ 0x11
  2130  000012                     	ds	1
  2131  000013                     ?_abs:
  2132                           	opt callstack 0
  2133  000013                     ?_pad:
  2134                           	opt callstack 0
  2135  000013                     pad@fp:
  2136                           	opt callstack 0
  2137  000013                     abs@a:
  2138                           	opt callstack 0
  2139  000013                     ___aodiv@quotient:
  2140                           	opt callstack 0
  2141                           
  2142                           ; 8 bytes @ 0x12
  2143  000013                     	ds	1
  2144  000014                     _atoi$1517:
  2145                           	opt callstack 0
  2146                           
  2147                           ; 1 bytes @ 0x13
  2148  000014                     	ds	1
  2149  000015                     ??_abs:
  2150  000015                     pad@buf:
  2151                           	opt callstack 0
  2152  000015                     atoi@n:
  2153                           	opt callstack 0
  2154                           
  2155                           ; 2 bytes @ 0x14
  2156  000015                     	ds	2
  2157  000017                     pad@p:
  2158                           	opt callstack 0
  2159                           
  2160                           ; 2 bytes @ 0x16
  2161  000017                     	ds	2
  2162  000019                     ??_pad:
  2163  000019                     ___lodiv@counter:
  2164                           	opt callstack 0
  2165                           
  2166                           ; 1 bytes @ 0x18
  2167  000019                     	ds	1
  2168  00001A                     pad@i:
  2169                           	opt callstack 0
  2170                           
  2171                           ; 2 bytes @ 0x19
  2172  00001A                     	ds	2
  2173  00001C                     pad@w:
  2174                           	opt callstack 0
  2175                           
  2176                           ; 2 bytes @ 0x1B
  2177  00001C                     	ds	2
  2178  00001E                     ?_ctoa:
  2179                           	opt callstack 0
  2180  00001E                     ?_dtoa:
  2181                           	opt callstack 0
  2182  00001E                     ?_utoa:
  2183                           	opt callstack 0
  2184  00001E                     ctoa@fp:
  2185                           	opt callstack 0
  2186  00001E                     dtoa@fp:
  2187                           	opt callstack 0
  2188  00001E                     utoa@fp:
  2189                           	opt callstack 0
  2190                           
  2191                           ; 2 bytes @ 0x1D
  2192  00001E                     	ds	2
  2193  000020                     ctoa@c:
  2194                           	opt callstack 0
  2195  000020                     dtoa@d:
  2196                           	opt callstack 0
  2197  000020                     utoa@d:
  2198                           	opt callstack 0
  2199                           
  2200                           ; 8 bytes @ 0x1F
  2201  000020                     	ds	1
  2202  000021                     ctoa@w:
  2203                           	opt callstack 0
  2204                           
  2205                           ; 2 bytes @ 0x20
  2206  000021                     	ds	7
  2207  000028                     ??_dtoa:
  2208  000028                     ??_utoa:
  2209                           
  2210                           ; 1 bytes @ 0x27
  2211  000028                     	ds	8
  2212  000030                     _dtoa$1036:
  2213                           	opt callstack 0
  2214  000030                     utoa@p:
  2215                           	opt callstack 0
  2216                           
  2217                           ; 2 bytes @ 0x2F
  2218  000030                     	ds	2
  2219  000032                     dtoa@p:
  2220                           	opt callstack 0
  2221  000032                     utoa@w:
  2222                           	opt callstack 0
  2223                           
  2224                           ; 2 bytes @ 0x31
  2225  000032                     	ds	2
  2226  000034                     dtoa@w:
  2227                           	opt callstack 0
  2228  000034                     utoa@n:
  2229                           	opt callstack 0
  2230                           
  2231                           ; 8 bytes @ 0x33
  2232  000034                     	ds	2
  2233  000036                     dtoa@s:
  2234                           	opt callstack 0
  2235                           
  2236                           ; 2 bytes @ 0x35
  2237  000036                     	ds	2
  2238  000038                     dtoa@n:
  2239                           	opt callstack 0
  2240                           
  2241                           ; 8 bytes @ 0x37
  2242  000038                     	ds	4
  2243  00003C                     utoa@i:
  2244                           	opt callstack 0
  2245                           
  2246                           ; 2 bytes @ 0x3B
  2247  00003C                     	ds	4
  2248  000040                     dtoa@i:
  2249                           	opt callstack 0
  2250                           
  2251                           ; 2 bytes @ 0x3F
  2252  000040                     	ds	2
  2253  000042                     ?_vfpfcnvrt:
  2254                           	opt callstack 0
  2255  000042                     vfpfcnvrt@fp:
  2256                           	opt callstack 0
  2257                           
  2258                           ; 2 bytes @ 0x41
  2259  000042                     	ds	2
  2260  000044                     vfpfcnvrt@fmt:
  2261                           	opt callstack 0
  2262                           
  2263                           ; 2 bytes @ 0x43
  2264  000044                     	ds	2
  2265  000046                     vfpfcnvrt@ap:
  2266                           	opt callstack 0
  2267                           
  2268                           ; 2 bytes @ 0x45
  2269  000046                     	ds	2
  2270  000048                     ??_vfpfcnvrt:
  2271                           
  2272                           ; 1 bytes @ 0x47
  2273  000048                     	ds	4
  2274  00004C                     vfpfcnvrt@ll:
  2275                           	opt callstack 0
  2276                           
  2277                           ; 8 bytes @ 0x4B
  2278  00004C                     	ds	8
  2279  000054                     vfpfcnvrt@llu:
  2280                           	opt callstack 0
  2281                           
  2282                           ; 8 bytes @ 0x53
  2283  000054                     	ds	8
  2284  00005C                     _vfpfcnvrt$1057:
  2285                           	opt callstack 0
  2286                           
  2287                           ; 2 bytes @ 0x5B
  2288  00005C                     	ds	2
  2289  00005E                     vfpfcnvrt@c:
  2290                           	opt callstack 0
  2291                           
  2292                           ; 1 bytes @ 0x5D
  2293  00005E                     	ds	1
  2294  00005F                     
  2295                           ; 1 bytes @ 0x5E
  2296 ;;
  2297 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2298 ;;
  2299 ;; *************** function _main *****************
  2300 ;; Defined at:
  2301 ;;		line 37 in file "main.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  sample         64   20[BANK0 ] unsigned char [64]
  2306 ;;  sampleRate      2   90[BANK0 ] unsigned short 
  2307 ;;  i               1   92[BANK0 ] unsigned char 
  2308 ;;  pitch           1   89[BANK0 ] unsigned char 
  2309 ;;  cmd             1   88[BANK0 ] unsigned char 
  2310 ;;  delta           1   87[BANK0 ] unsigned char 
  2311 ;;  nominalHallU    1   86[BANK0 ] unsigned char 
  2312 ;;  instrument      1   85[BANK0 ] unsigned char 
  2313 ;;  nominalHallP    1   84[BANK0 ] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Locals:         0      73       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Totals:         0      75       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;Total ram usage:       75 bytes
  2328 ;; Hardware stack levels required when called:    9
  2329 ;; This function calls:
  2330 ;;		_ADC_GetConversionResult
  2331 ;;		_ADC_IsConversionDone
  2332 ;;		_ADC_SelectChannel
  2333 ;;		_ADC_StartConversion
  2334 ;;		_EUSART1_Read
  2335 ;;		_EUSART1_is_rx_ready
  2336 ;;		_SYSTEM_Initialize
  2337 ;;		_TMR0_HasOverflowOccured
  2338 ;;		_TMR0_ReadTimer
  2339 ;;		_TMR0_WriteTimer
  2340 ;;		_noteOn
  2341 ;;		_printf
  2342 ;;		_putByteSCI
  2343 ;; This function is called by:
  2344 ;;		Startup code after reset
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           	psect	text0
  2349  00F25C                     __ptext0:
  2350                           	opt callstack 0
  2351  00F25C                     _main:
  2352                           	opt callstack 22
  2353  00F25C                     
  2354                           ;main.c: 41:     uint8_t instrument=0;
  2355  00F25C  0E00               	movlw	0
  2356  00F25E  0100               	movlb	0	; () banked
  2357  00F260  6FB5               	movwf	main@instrument& (0+255),b
  2358                           
  2359                           ;main.c: 42:     char cmd;;main.c: 43:     uint8_t sample[64];;main.c: 44:     uint8_t n
      +                          ominalHallUnPressed = 63;
  2360  00F262  0E3F               	movlw	63
  2361  00F264  6FB6               	movwf	main@nominalHallUnPressed& (0+255),b
  2362                           
  2363                           ;main.c: 45:     uint8_t nominalHallPressed = 29;
  2364  00F266  0E1D               	movlw	29
  2365  00F268  6FB4               	movwf	main@nominalHallPressed& (0+255),b
  2366                           
  2367                           ;main.c: 46:     uint8_t delta = 5;
  2368  00F26A  0E05               	movlw	5
  2369  00F26C  6FB7               	movwf	main@delta& (0+255),b
  2370                           
  2371                           ;main.c: 47:     uint16_t sampleRate = 1000;
  2372  00F26E  0E03               	movlw	3
  2373  00F270  6FBB               	movwf	(main@sampleRate+1)& (0+255),b
  2374  00F272  0EE8               	movlw	232
  2375  00F274  6FBA               	movwf	main@sampleRate& (0+255),b
  2376  00F276                     
  2377                           ; BSR set to: 0
  2378                           ;main.c: 50:     SYSTEM_Initialize();
  2379  00F276  EC23  F06F         	call	_SYSTEM_Initialize	;wreg free
  2380  00F27A                     
  2381                           ;main.c: 51:     ADC_SelectChannel(HALL_SENSOR);
  2382  00F27A  0E01               	movlw	1
  2383  00F27C  EC44  F06F         	call	_ADC_SelectChannel
  2384  00F280                     
  2385                           ;main.c: 53:     printf("Development Board\r\n");
  2386  00F280  0E56               	movlw	low STR_1
  2387  00F282  0100               	movlb	0	; () banked
  2388  00F284  6F68               	movwf	printf@fmt& (0+255),b
  2389  00F286  0EFF               	movlw	high STR_1
  2390  00F288  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2391  00F28A  ECA0  F06F         	call	_printf	;wreg free
  2392  00F28E                     
  2393                           ;main.c: 54:     printf("inLab 11 terminal \r\n");
  2394  00F28E  0E19               	movlw	low STR_2
  2395  00F290  0100               	movlb	0	; () banked
  2396  00F292  6F68               	movwf	printf@fmt& (0+255),b
  2397  00F294  0EFF               	movlw	high STR_2
  2398  00F296  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2399  00F298  ECA0  F06F         	call	_printf	;wreg free
  2400  00F29C                     
  2401                           ;main.c: 55:     printf("MIDI + Hall effect \r\n");
  2402  00F29C  0EED               	movlw	low STR_3
  2403  00F29E  0100               	movlb	0	; () banked
  2404  00F2A0  6F68               	movwf	printf@fmt& (0+255),b
  2405  00F2A2  0EFE               	movlw	high STR_3
  2406  00F2A4  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2407  00F2A6  ECA0  F06F         	call	_printf	;wreg free
  2408  00F2AA                     
  2409                           ;main.c: 56:     printf("\r\n> ");
  2410  00F2AA  0EF5               	movlw	low STR_4
  2411  00F2AC  0100               	movlb	0	; () banked
  2412  00F2AE  6F68               	movwf	printf@fmt& (0+255),b
  2413  00F2B0  0EFF               	movlw	high STR_4
  2414  00F2B2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2415  00F2B4  ECA0  F06F         	call	_printf	;wreg free
  2416  00F2B8                     
  2417                           ;main.c: 58:     ADC_StartConversion();
  2418  00F2B8  ECCB  F06E         	call	_ADC_StartConversion	;wreg free
  2419  00F2BC                     l2619:
  2420  00F2BC  ECF0  F06E         	call	_ADC_IsConversionDone	;wreg free
  2421  00F2C0  0900               	iorlw	0
  2422  00F2C2  B4D8               	btfsc	status,2,c
  2423  00F2C4  EF66  F079         	goto	u1961
  2424  00F2C8  EF68  F079         	goto	u1960
  2425  00F2CC                     u1961:
  2426  00F2CC  EF5E  F079         	goto	l2619
  2427  00F2D0                     u1960:
  2428  00F2D0                     
  2429                           ;main.c: 60:     nominalHallUnPressed = (ADC_GetConversionResult() >> 8);
  2430  00F2D0  ECE6  F06E         	call	_ADC_GetConversionResult	;wreg free
  2431  00F2D4  C002  F001         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2432  00F2D8  6A02               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2433  00F2DA  5001               	movf	?_ADC_GetConversionResult^0,w,c
  2434  00F2DC  0100               	movlb	0	; () banked
  2435  00F2DE  6FB6               	movwf	main@nominalHallUnPressed& (0+255),b
  2436  00F2E0                     l2623:
  2437                           
  2438                           ;main.c: 63:   if ((EUSART1_is_rx_ready())) {
  2439  00F2E0  ECFA  F06E         	call	_EUSART1_is_rx_ready	;wreg free
  2440  00F2E4  0900               	iorlw	0
  2441  00F2E6  B4D8               	btfsc	status,2,c
  2442  00F2E8  EF78  F079         	goto	u1971
  2443  00F2EC  EF7A  F079         	goto	u1970
  2444  00F2F0                     u1971:
  2445  00F2F0  EF70  F079         	goto	l2623
  2446  00F2F4                     u1970:
  2447  00F2F4                     
  2448                           ;main.c: 64:             cmd = EUSART1_Read();
  2449  00F2F4  EC8C  F06F         	call	_EUSART1_Read	;wreg free
  2450  00F2F8  0100               	movlb	0	; () banked
  2451  00F2FA  6FB8               	movwf	main@cmd& (0+255),b
  2452                           
  2453                           ;main.c: 65:    switch (cmd) {
  2454  00F2FC  EF95  F07C         	goto	l2795
  2455  00F300                     l2627:
  2456                           
  2457                           ; BSR set to: 0
  2458                           ;main.c: 71:     printf("-------------------------------------------------\r\n");
  2459  00F300  0E42               	movlw	low STR_5
  2460  00F302  6F68               	movwf	printf@fmt& (0+255),b
  2461  00F304  0EFB               	movlw	high STR_5
  2462  00F306  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2463  00F308  ECA0  F06F         	call	_printf	;wreg free
  2464                           
  2465                           ;main.c: 72:                 printf("    Nominal %u to %u\r\n",nominalHallUnPressed, nom
      +                          inalHallPressed);
  2466  00F30C  0ED6               	movlw	low STR_6
  2467  00F30E  0100               	movlb	0	; () banked
  2468  00F310  6F68               	movwf	printf@fmt& (0+255),b
  2469  00F312  0EFE               	movlw	high STR_6
  2470  00F314  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2471  00F316  C0B6  F06A         	movff	main@nominalHallUnPressed,?_printf+2
  2472  00F31A  6B6B               	clrf	(?_printf+3)& (0+255),b
  2473  00F31C  C0B4  F06C         	movff	main@nominalHallPressed,?_printf+4
  2474  00F320  6B6D               	clrf	(?_printf+5)& (0+255),b
  2475  00F322  ECA0  F06F         	call	_printf	;wreg free
  2476                           
  2477                           ;main.c: 73:                 printf("    delta = %d\r\n",delta);
  2478  00F326  0EA1               	movlw	low STR_7
  2479  00F328  0100               	movlb	0	; () banked
  2480  00F32A  6F68               	movwf	printf@fmt& (0+255),b
  2481  00F32C  0EFF               	movlw	high STR_7
  2482  00F32E  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2483  00F330  C0B7  F06A         	movff	main@delta,?_printf+2
  2484  00F334  6B6B               	clrf	(?_printf+3)& (0+255),b
  2485  00F336  ECA0  F06F         	call	_printf	;wreg free
  2486                           
  2487                           ;main.c: 74:                 printf("    sampleRate = %d TMR0 counts = %duS\r\n",sampleR
      +                          ate,sampleRate);
  2488  00F33A  0E8C               	movlw	low STR_8
  2489  00F33C  0100               	movlb	0	; () banked
  2490  00F33E  6F68               	movwf	printf@fmt& (0+255),b
  2491  00F340  0EFC               	movlw	high STR_8
  2492  00F342  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2493  00F344  C0BA  F06A         	movff	main@sampleRate,?_printf+2
  2494  00F348  C0BB  F06B         	movff	main@sampleRate+1,?_printf+3
  2495  00F34C  C0BA  F06C         	movff	main@sampleRate,?_printf+4
  2496  00F350  C0BB  F06D         	movff	main@sampleRate+1,?_printf+5
  2497  00F354  ECA0  F06F         	call	_printf	;wreg free
  2498                           
  2499                           ;main.c: 75:     printf("-------------------------------------------------\r\n");
  2500  00F358  0E42               	movlw	low STR_5
  2501  00F35A  0100               	movlb	0	; () banked
  2502  00F35C  6F68               	movwf	printf@fmt& (0+255),b
  2503  00F35E  0EFB               	movlw	high STR_5
  2504  00F360  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2505  00F362  ECA0  F06F         	call	_printf	;wreg free
  2506                           
  2507                           ;main.c: 76:                 printf("?: help menu\r\n");
  2508  00F366  0ED2               	movlw	low STR_10
  2509  00F368  0100               	movlb	0	; () banked
  2510  00F36A  6F68               	movwf	printf@fmt& (0+255),b
  2511  00F36C  0EFF               	movlw	high STR_10
  2512  00F36E  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2513  00F370  ECA0  F06F         	call	_printf	;wreg free
  2514                           
  2515                           ;main.c: 77:                 printf("o: k\r\n");
  2516  00F374  0EEE               	movlw	low STR_11
  2517  00F376  0100               	movlb	0	; () banked
  2518  00F378  6F68               	movwf	printf@fmt& (0+255),b
  2519  00F37A  0EFF               	movlw	high STR_11
  2520  00F37C  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2521  00F37E  ECA0  F06F         	call	_printf	;wreg free
  2522                           
  2523                           ;main.c: 78:                 printf("Z: Reset processor.\r\n");
  2524  00F382  0E03               	movlw	low STR_12
  2525  00F384  0100               	movlb	0	; () banked
  2526  00F386  6F68               	movwf	printf@fmt& (0+255),b
  2527  00F388  0EFF               	movlw	high STR_12
  2528  00F38A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2529  00F38C  ECA0  F06F         	call	_printf	;wreg free
  2530                           
  2531                           ;main.c: 79:                 printf("z: Clear the terminal.\r\n");
  2532  00F390  0E5E               	movlw	low STR_13
  2533  00F392  0100               	movlb	0	; () banked
  2534  00F394  6F68               	movwf	printf@fmt& (0+255),b
  2535  00F396  0EFE               	movlw	high STR_13
  2536  00F398  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2537  00F39A  ECA0  F06F         	call	_printf	;wreg free
  2538                           
  2539                           ;main.c: 80:                 printf("d/D: decrement/increment delta\r\n");
  2540  00F39E  0E97               	movlw	low STR_14
  2541  00F3A0  0100               	movlb	0	; () banked
  2542  00F3A2  6F68               	movwf	printf@fmt& (0+255),b
  2543  00F3A4  0EFD               	movlw	high STR_14
  2544  00F3A6  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2545  00F3A8  ECA0  F06F         	call	_printf	;wreg free
  2546                           
  2547                           ;main.c: 81:                 printf("s/S: decrement/increment sampleRate\r\n");
  2548  00F3AC  0E2A               	movlw	low STR_15
  2549  00F3AE  0100               	movlb	0	; () banked
  2550  00F3B0  6F68               	movwf	printf@fmt& (0+255),b
  2551  00F3B2  0EFD               	movlw	high STR_15
  2552  00F3B4  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2553  00F3B6  ECA0  F06F         	call	_printf	;wreg free
  2554                           
  2555                           ;main.c: 82:                 printf("c/C: calibrate unpressed/pressed hall sensor.\r\n")
      +                          ;
  2556  00F3BA  0E09               	movlw	low STR_16
  2557  00F3BC  0100               	movlb	0	; () banked
  2558  00F3BE  6F68               	movwf	printf@fmt& (0+255),b
  2559  00F3C0  0EFC               	movlw	high STR_16
  2560  00F3C2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2561  00F3C4  ECA0  F06F         	call	_printf	;wreg free
  2562                           
  2563                           ;main.c: 83:                 printf("1: report a single Hall effect sensor reading.\r\n"
      +                          );
  2564  00F3C8  0EA8               	movlw	low STR_17
  2565  00F3CA  0100               	movlb	0	; () banked
  2566  00F3CC  6F68               	movwf	printf@fmt& (0+255),b
  2567  00F3CE  0EFB               	movlw	high STR_17
  2568  00F3D0  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2569  00F3D2  ECA0  F06F         	call	_printf	;wreg free
  2570                           
  2571                           ;main.c: 84:                 printf("t: wait for piano keypress and report %d samples, o
      +                          ne every %dus.\r\n",64, sampleRate);
  2572  00F3D6  0E43               	movlw	low STR_18
  2573  00F3D8  0100               	movlb	0	; () banked
  2574  00F3DA  6F68               	movwf	printf@fmt& (0+255),b
  2575  00F3DC  0EFA               	movlw	high STR_18
  2576  00F3DE  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2577  00F3E0  0E00               	movlw	0
  2578  00F3E2  6F6B               	movwf	(?_printf+3)& (0+255),b
  2579  00F3E4  0E40               	movlw	64
  2580  00F3E6  6F6A               	movwf	(?_printf+2)& (0+255),b
  2581  00F3E8  C0BA  F06C         	movff	main@sampleRate,?_printf+4
  2582  00F3EC  C0BB  F06D         	movff	main@sampleRate+1,?_printf+5
  2583  00F3F0  ECA0  F06F         	call	_printf	;wreg free
  2584                           
  2585                           ;main.c: 85:                 printf("M: enter into Midi mode.\r\n");
  2586  00F3F4  0EF4               	movlw	low STR_19
  2587  00F3F6  0100               	movlb	0	; () banked
  2588  00F3F8  6F68               	movwf	printf@fmt& (0+255),b
  2589  00F3FA  0EFD               	movlw	high STR_19
  2590  00F3FC  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2591  00F3FE  ECA0  F06F         	call	_printf	;wreg free
  2592                           
  2593                           ;main.c: 86:                 printf("-------------------------------------------------\r
      +                          \n");
  2594  00F402  0E42               	movlw	low STR_5
  2595  00F404  0100               	movlb	0	; () banked
  2596  00F406  6F68               	movwf	printf@fmt& (0+255),b
  2597  00F408  0EFB               	movlw	high STR_5
  2598  00F40A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2599  00F40C  ECA0  F06F         	call	_printf	;wreg free
  2600                           
  2601                           ;main.c: 87:     break;
  2602  00F410  EF70  F079         	goto	l2623
  2603  00F414                     l2629:
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;main.c: 93:                 printf("o:      ok\r\n");
  2607  00F414  0EE1               	movlw	low STR_21
  2608  00F416  6F68               	movwf	printf@fmt& (0+255),b
  2609  00F418  0EFF               	movlw	high STR_21
  2610  00F41A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2611  00F41C  ECA0  F06F         	call	_printf	;wreg free
  2612                           
  2613                           ;main.c: 94:                 break;
  2614  00F420  EF70  F079         	goto	l2623
  2615  00F424                     l2631:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;main.c: 100:                 for (i=0; i<40; i++) printf("\n");
  2619  00F424  0E00               	movlw	0
  2620  00F426  6FBC               	movwf	main@i& (0+255),b
  2621  00F428                     l2637:
  2622                           
  2623                           ; BSR set to: 0
  2624  00F428  0E95               	movlw	low (STR_45+33)
  2625  00F42A  6F68               	movwf	printf@fmt& (0+255),b
  2626  00F42C  0EFD               	movlw	high (STR_45+33)
  2627  00F42E  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2628  00F430  ECA0  F06F         	call	_printf	;wreg free
  2629  00F434  0100               	movlb	0	; () banked
  2630  00F436  2BBC               	incf	main@i& (0+255),f,b
  2631  00F438                     
  2632                           ; BSR set to: 0
  2633  00F438  0E27               	movlw	39
  2634  00F43A  65BC               	cpfsgt	main@i& (0+255),b
  2635  00F43C  EF22  F07A         	goto	u1981
  2636  00F440  EF24  F07A         	goto	u1980
  2637  00F444                     u1981:
  2638  00F444  EF14  F07A         	goto	l2637
  2639  00F448                     u1980:
  2640  00F448                     
  2641                           ; BSR set to: 0
  2642  00F448  00FF               	reset		;# 
  2643                           
  2644                           ;main.c: 102:                 break;
  2645  00F44A  EF70  F079         	goto	l2623
  2646  00F44E                     l2643:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;main.c: 108:                 for (i=0; i<40; i++) printf("\n");
  2650  00F44E  0E00               	movlw	0
  2651  00F450  6FBC               	movwf	main@i& (0+255),b
  2652  00F452                     l2649:
  2653                           
  2654                           ; BSR set to: 0
  2655  00F452  0E95               	movlw	low (STR_45+33)
  2656  00F454  6F68               	movwf	printf@fmt& (0+255),b
  2657  00F456  0EFD               	movlw	high (STR_45+33)
  2658  00F458  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2659  00F45A  ECA0  F06F         	call	_printf	;wreg free
  2660  00F45E  0100               	movlb	0	; () banked
  2661  00F460  2BBC               	incf	main@i& (0+255),f,b
  2662  00F462                     
  2663                           ; BSR set to: 0
  2664  00F462  0E27               	movlw	39
  2665  00F464  65BC               	cpfsgt	main@i& (0+255),b
  2666  00F466  EF37  F07A         	goto	u1991
  2667  00F46A  EF39  F07A         	goto	u1990
  2668  00F46E                     u1991:
  2669  00F46E  EF29  F07A         	goto	l2649
  2670  00F472                     u1990:
  2671  00F472  EF70  F079         	goto	l2623
  2672  00F476                     l2655:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;main.c: 115:                 printf("Hands off the piano, press keyboard key to calibra
      +                          te nominalHallUnPressed");
  2676  00F476  0EB1               	movlw	low STR_24
  2677  00F478  6F68               	movwf	printf@fmt& (0+255),b
  2678  00F47A  0EF9               	movlw	high STR_24
  2679  00F47C  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2680  00F47E  ECA0  F06F         	call	_printf	;wreg free
  2681  00F482                     l2657:
  2682  00F482  ECFA  F06E         	call	_EUSART1_is_rx_ready	;wreg free
  2683  00F486  0900               	iorlw	0
  2684  00F488  B4D8               	btfsc	status,2,c
  2685  00F48A  EF49  F07A         	goto	u2001
  2686  00F48E  EF4B  F07A         	goto	u2000
  2687  00F492                     u2001:
  2688  00F492  EF41  F07A         	goto	l2657
  2689  00F496                     u2000:
  2690  00F496                     
  2691                           ;main.c: 117:                 (void) EUSART1_Read();
  2692  00F496  EC8C  F06F         	call	_EUSART1_Read	;wreg free
  2693  00F49A                     
  2694                           ;main.c: 118:                 ADC_StartConversion();
  2695  00F49A  ECCB  F06E         	call	_ADC_StartConversion	;wreg free
  2696  00F49E                     l2663:
  2697  00F49E  ECF0  F06E         	call	_ADC_IsConversionDone	;wreg free
  2698  00F4A2  0900               	iorlw	0
  2699  00F4A4  B4D8               	btfsc	status,2,c
  2700  00F4A6  EF57  F07A         	goto	u2011
  2701  00F4AA  EF59  F07A         	goto	u2010
  2702  00F4AE                     u2011:
  2703  00F4AE  EF4F  F07A         	goto	l2663
  2704  00F4B2                     u2010:
  2705  00F4B2                     
  2706                           ;main.c: 120:                 nominalHallUnPressed = ADC_GetConversionResult()>>8;
  2707  00F4B2  ECE6  F06E         	call	_ADC_GetConversionResult	;wreg free
  2708  00F4B6  C002  F001         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2709  00F4BA  6A02               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2710  00F4BC  5001               	movf	?_ADC_GetConversionResult^0,w,c
  2711  00F4BE  0100               	movlb	0	; () banked
  2712  00F4C0  6FB6               	movwf	main@nominalHallUnPressed& (0+255),b
  2713  00F4C2                     
  2714                           ; BSR set to: 0
  2715                           ;main.c: 121:                 printf("New nominalHallUnPressed value = %d\r\n",nominalHa
      +                          llUnPressed);
  2716  00F4C2  0E04               	movlw	low STR_25
  2717  00F4C4  6F68               	movwf	printf@fmt& (0+255),b
  2718  00F4C6  0EFD               	movlw	high STR_25
  2719  00F4C8  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2720  00F4CA  C0B6  F06A         	movff	main@nominalHallUnPressed,?_printf+2
  2721  00F4CE  6B6B               	clrf	(?_printf+3)& (0+255),b
  2722  00F4D0  ECA0  F06F         	call	_printf	;wreg free
  2723                           
  2724                           ;main.c: 122:                 break;
  2725  00F4D4  EF70  F079         	goto	l2623
  2726  00F4D8                     l2669:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;main.c: 128:                 printf("Press the piano key, press keyboard key to calibra
      +                          te nominalHallPressed");
  2730  00F4D8  0EFB               	movlw	low STR_26
  2731  00F4DA  6F68               	movwf	printf@fmt& (0+255),b
  2732  00F4DC  0EF9               	movlw	high STR_26
  2733  00F4DE  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2734  00F4E0  ECA0  F06F         	call	_printf	;wreg free
  2735  00F4E4                     l2671:
  2736  00F4E4  ECFA  F06E         	call	_EUSART1_is_rx_ready	;wreg free
  2737  00F4E8  0900               	iorlw	0
  2738  00F4EA  B4D8               	btfsc	status,2,c
  2739  00F4EC  EF7A  F07A         	goto	u2021
  2740  00F4F0  EF7C  F07A         	goto	u2020
  2741  00F4F4                     u2021:
  2742  00F4F4  EF72  F07A         	goto	l2671
  2743  00F4F8                     u2020:
  2744  00F4F8                     
  2745                           ;main.c: 130:                 (void) EUSART1_Read();
  2746  00F4F8  EC8C  F06F         	call	_EUSART1_Read	;wreg free
  2747  00F4FC                     
  2748                           ;main.c: 131:                 ADC_StartConversion();
  2749  00F4FC  ECCB  F06E         	call	_ADC_StartConversion	;wreg free
  2750  00F500                     l2677:
  2751  00F500  ECF0  F06E         	call	_ADC_IsConversionDone	;wreg free
  2752  00F504  0900               	iorlw	0
  2753  00F506  B4D8               	btfsc	status,2,c
  2754  00F508  EF88  F07A         	goto	u2031
  2755  00F50C  EF8A  F07A         	goto	u2030
  2756  00F510                     u2031:
  2757  00F510  EF80  F07A         	goto	l2677
  2758  00F514                     u2030:
  2759  00F514                     
  2760                           ;main.c: 133:                 nominalHallPressed = ADC_GetConversionResult()>>8;
  2761  00F514  ECE6  F06E         	call	_ADC_GetConversionResult	;wreg free
  2762  00F518  C002  F001         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2763  00F51C  6A02               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2764  00F51E  5001               	movf	?_ADC_GetConversionResult^0,w,c
  2765  00F520  0100               	movlb	0	; () banked
  2766  00F522  6FB4               	movwf	main@nominalHallPressed& (0+255),b
  2767  00F524                     
  2768                           ; BSR set to: 0
  2769                           ;main.c: 134:                 printf("New nominalHallPressed value = %d\r\n",nominalHall
      +                          Pressed);
  2770  00F524  0E50               	movlw	low STR_27
  2771  00F526  6F68               	movwf	printf@fmt& (0+255),b
  2772  00F528  0EFD               	movlw	high STR_27
  2773  00F52A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2774  00F52C  C0B4  F06A         	movff	main@nominalHallPressed,?_printf+2
  2775  00F530  6B6B               	clrf	(?_printf+3)& (0+255),b
  2776  00F532  ECA0  F06F         	call	_printf	;wreg free
  2777                           
  2778                           ;main.c: 135:                 break;
  2779  00F536  EF70  F079         	goto	l2623
  2780  00F53A                     l2683:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;main.c: 142:                 if (cmd == 'd') delta -= 1;
  2784  00F53A  0E64               	movlw	100
  2785  00F53C  19B8               	xorwf	main@cmd& (0+255),w,b
  2786  00F53E  A4D8               	btfss	status,2,c
  2787  00F540  EFA4  F07A         	goto	u2041
  2788  00F544  EFA6  F07A         	goto	u2040
  2789  00F548                     u2041:
  2790  00F548  EFA9  F07A         	goto	l2687
  2791  00F54C                     u2040:
  2792  00F54C                     
  2793                           ; BSR set to: 0
  2794  00F54C  07B7               	decf	main@delta& (0+255),f,b
  2795  00F54E  EFAA  F07A         	goto	l2689
  2796  00F552                     l2687:
  2797                           
  2798                           ; BSR set to: 0
  2799  00F552  2BB7               	incf	main@delta& (0+255),f,b
  2800  00F554                     l2689:
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;main.c: 144:                 printf("new delta = %d\r\n",delta);
  2804  00F554  0EB2               	movlw	low STR_28
  2805  00F556  6F68               	movwf	printf@fmt& (0+255),b
  2806  00F558  0EFF               	movlw	high STR_28
  2807  00F55A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2808  00F55C  C0B7  F06A         	movff	main@delta,?_printf+2
  2809  00F560  6B6B               	clrf	(?_printf+3)& (0+255),b
  2810  00F562  ECA0  F06F         	call	_printf	;wreg free
  2811                           
  2812                           ;main.c: 145:                 break;
  2813  00F566  EF70  F079         	goto	l2623
  2814  00F56A                     l2691:
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;main.c: 152:                 if (cmd == 's') sampleRate -= 100;
  2818  00F56A  0E73               	movlw	115
  2819  00F56C  19B8               	xorwf	main@cmd& (0+255),w,b
  2820  00F56E  A4D8               	btfss	status,2,c
  2821  00F570  EFBC  F07A         	goto	u2051
  2822  00F574  EFBE  F07A         	goto	u2050
  2823  00F578                     u2051:
  2824  00F578  EFC4  F07A         	goto	l2695
  2825  00F57C                     u2050:
  2826  00F57C                     
  2827                           ; BSR set to: 0
  2828  00F57C  0E64               	movlw	100
  2829  00F57E  5FBA               	subwf	main@sampleRate& (0+255),f,b
  2830  00F580  0E00               	movlw	0
  2831  00F582  5BBB               	subwfb	(main@sampleRate+1)& (0+255),f,b
  2832  00F584  EFC8  F07A         	goto	l2697
  2833  00F588                     l2695:
  2834                           
  2835                           ; BSR set to: 0
  2836  00F588  0E64               	movlw	100
  2837  00F58A  27BA               	addwf	main@sampleRate& (0+255),f,b
  2838  00F58C  0E00               	movlw	0
  2839  00F58E  23BB               	addwfc	(main@sampleRate+1)& (0+255),f,b
  2840  00F590                     l2697:
  2841                           
  2842                           ; BSR set to: 0
  2843                           ;main.c: 154:                 printf("new sampleRate = %d TMR0 counts = %duS\r\n",sample
      +                          Rate, sampleRate);
  2844  00F590  0EB5               	movlw	low STR_29
  2845  00F592  6F68               	movwf	printf@fmt& (0+255),b
  2846  00F594  0EFC               	movlw	high STR_29
  2847  00F596  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2848  00F598  C0BA  F06A         	movff	main@sampleRate,?_printf+2
  2849  00F59C  C0BB  F06B         	movff	main@sampleRate+1,?_printf+3
  2850  00F5A0  C0BA  F06C         	movff	main@sampleRate,?_printf+4
  2851  00F5A4  C0BB  F06D         	movff	main@sampleRate+1,?_printf+5
  2852  00F5A8  ECA0  F06F         	call	_printf	;wreg free
  2853                           
  2854                           ;main.c: 155:                 break;
  2855  00F5AC  EF70  F079         	goto	l2623
  2856  00F5B0                     l112:
  2857                           
  2858                           ; BSR set to: 0
  2859  00F5B0  848B               	bsf	139,2,c	;volatile
  2860  00F5B2                     
  2861                           ; BSR set to: 0
  2862                           ;main.c: 163:                 ADC_StartConversion();
  2863  00F5B2  ECCB  F06E         	call	_ADC_StartConversion	;wreg free
  2864  00F5B6  948B               	bcf	139,2,c	;volatile
  2865  00F5B8                     l2703:
  2866  00F5B8  ECF0  F06E         	call	_ADC_IsConversionDone	;wreg free
  2867  00F5BC  0900               	iorlw	0
  2868  00F5BE  B4D8               	btfsc	status,2,c
  2869  00F5C0  EFE4  F07A         	goto	u2061
  2870  00F5C4  EFE6  F07A         	goto	u2060
  2871  00F5C8                     u2061:
  2872  00F5C8  EFDC  F07A         	goto	l2703
  2873  00F5CC                     u2060:
  2874  00F5CC                     
  2875                           ;main.c: 166:                 printf("Hall sensor = %d\r\n",ADC_GetConversionResult()>>8
      +                          );
  2876  00F5CC  0E7D               	movlw	low STR_30
  2877  00F5CE  0100               	movlb	0	; () banked
  2878  00F5D0  6F68               	movwf	printf@fmt& (0+255),b
  2879  00F5D2  0EFF               	movlw	high STR_30
  2880  00F5D4  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2881  00F5D6  ECE6  F06E         	call	_ADC_GetConversionResult	;wreg free
  2882  00F5DA  5002               	movf	(?_ADC_GetConversionResult+1)^0,w,c
  2883  00F5DC  0100               	movlb	0	; () banked
  2884  00F5DE  6F6A               	movwf	(?_printf+2)& (0+255),b
  2885  00F5E0  6B6B               	clrf	(?_printf+3)& (0+255),b
  2886  00F5E2  ECA0  F06F         	call	_printf	;wreg free
  2887                           
  2888                           ;main.c: 167:                 break;
  2889  00F5E6  EF70  F079         	goto	l2623
  2890  00F5EA                     l2707:
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;main.c: 173:                 printf("Tap a piano key.\r\n");
  2894  00F5EA  0E6A               	movlw	low STR_31
  2895  00F5EC  6F68               	movwf	printf@fmt& (0+255),b
  2896  00F5EE  0EFF               	movlw	high STR_31
  2897  00F5F0  6F69               	movwf	(printf@fmt+1)& (0+255),b
  2898  00F5F2  ECA0  F06F         	call	_printf	;wreg free
  2899                           
  2900                           ;main.c: 177:                 while ( (ADC_GetConversionResult()>>8) > nominalHallUnPres
      +                          sed - delta){
  2901  00F5F6  EF19  F07B         	goto	l2717
  2902  00F5FA                     l2709:
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;main.c: 178:                     TMR0_WriteTimer(TMR0_ReadTimer() + 0xFFFF - sampleRate
      +                          );
  2906  00F5FA  EC6A  F06F         	call	_TMR0_ReadTimer	;wreg free
  2907  00F5FE  0100               	movlb	0	; () banked
  2908  00F600  51BA               	movf	main@sampleRate& (0+255),w,b
  2909  00F602  5E01               	subwf	?_TMR0_ReadTimer^0,f,c
  2910  00F604  51BB               	movf	(main@sampleRate+1)& (0+255),w,b
  2911  00F606  5A02               	subwfb	(?_TMR0_ReadTimer+1)^0,f,c
  2912  00F608  0EFF               	movlw	255
  2913  00F60A  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  2914  00F60C  6E09               	movwf	TMR0_WriteTimer@timerVal^0,c
  2915  00F60E  0EFF               	movlw	255
  2916  00F610  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  2917  00F612  6E0A               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  2918  00F614  ECDC  F06E         	call	_TMR0_WriteTimer	;wreg free
  2919  00F618                     
  2920                           ;main.c: 179:                     INTCONbits.TMR0IF = 0;
  2921  00F618  94F2               	bcf	242,2,c	;volatile
  2922  00F61A                     
  2923                           ;main.c: 180:                     ADC_StartConversion();
  2924  00F61A  ECCB  F06E         	call	_ADC_StartConversion	;wreg free
  2925  00F61E                     l2715:
  2926  00F61E  EC04  F06F         	call	_TMR0_HasOverflowOccured	;wreg free
  2927  00F622  0900               	iorlw	0
  2928  00F624  B4D8               	btfsc	status,2,c
  2929  00F626  EF17  F07B         	goto	u2071
  2930  00F62A  EF19  F07B         	goto	u2070
  2931  00F62E                     u2071:
  2932  00F62E  EF0F  F07B         	goto	l2715
  2933  00F632                     u2070:
  2934  00F632                     l2717:
  2935                           
  2936                           ;main.c: 177:                 while ( (ADC_GetConversionResult()>>8) > nominalHallUnPres
      +                          sed - delta){
  2937  00F632  ECE6  F06E         	call	_ADC_GetConversionResult	;wreg free
  2938  00F636  C002  F001         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2939  00F63A  6A02               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2940  00F63C  0100               	movlb	0	; () banked
  2941  00F63E  51B7               	movf	main@delta& (0+255),w,b
  2942  00F640  C0B6  F072         	movff	main@nominalHallUnPressed,??_main
  2943  00F644  6B73               	clrf	(??_main+1)& (0+255),b
  2944  00F646  5F72               	subwf	??_main& (0+255),f,b
  2945  00F648  0E00               	movlw	0
  2946  00F64A  5B73               	subwfb	(??_main+1)& (0+255),f,b
  2947  00F64C  5001               	movf	?_ADC_GetConversionResult^0,w,c
  2948  00F64E  5D72               	subwf	??_main& (0+255),w,b
  2949  00F650  5002               	movf	(?_ADC_GetConversionResult+1)^0,w,c
  2950  00F652  5973               	subwfb	(??_main+1)& (0+255),w,b
  2951  00F654  A0D8               	btfss	status,0,c
  2952  00F656  EF2F  F07B         	goto	u2081
  2953  00F65A  EF31  F07B         	goto	u2080
  2954  00F65E                     u2081:
  2955  00F65E  EFFD  F07A         	goto	l2709
  2956  00F662                     u2080:
  2957  00F662                     
  2958                           ; BSR set to: 0
  2959                           ;main.c: 185:                 for (i=0; i<64; i++) {
  2960  00F662  0E00               	movlw	0
  2961  00F664  6FBC               	movwf	main@i& (0+255),b
  2962  00F666                     l2725:
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;main.c: 186:                     sample[i] = (ADC_GetConversionResult()>>8);
  2966  00F666  0E74               	movlw	low main@sample
  2967  00F668  25BC               	addwf	main@i& (0+255),w,b
  2968  00F66A  6ED9               	movwf	fsr2l,c
  2969  00F66C  6ADA               	clrf	fsr2h,c
  2970  00F66E  0E00               	movlw	high main@sample
  2971  00F670  22DA               	addwfc	fsr2h,f,c
  2972  00F672  ECE6  F06E         	call	_ADC_GetConversionResult	;wreg free
  2973  00F676  C002  F001         	movff	?_ADC_GetConversionResult+1,?_ADC_GetConversionResult
  2974  00F67A  6A02               	clrf	(?_ADC_GetConversionResult+1)^0,c
  2975  00F67C  5001               	movf	?_ADC_GetConversionResult^0,w,c
  2976  00F67E  6EDF               	movwf	indf2,c
  2977  00F680                     
  2978                           ;main.c: 187:                     TMR0_WriteTimer(TMR0_ReadTimer() + 0xFFFF - sampleRate
      +                          );
  2979  00F680  EC6A  F06F         	call	_TMR0_ReadTimer	;wreg free
  2980  00F684  0100               	movlb	0	; () banked
  2981  00F686  51BA               	movf	main@sampleRate& (0+255),w,b
  2982  00F688  5E01               	subwf	?_TMR0_ReadTimer^0,f,c
  2983  00F68A  51BB               	movf	(main@sampleRate+1)& (0+255),w,b
  2984  00F68C  5A02               	subwfb	(?_TMR0_ReadTimer+1)^0,f,c
  2985  00F68E  0EFF               	movlw	255
  2986  00F690  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  2987  00F692  6E09               	movwf	TMR0_WriteTimer@timerVal^0,c
  2988  00F694  0EFF               	movlw	255
  2989  00F696  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  2990  00F698  6E0A               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  2991  00F69A  ECDC  F06E         	call	_TMR0_WriteTimer	;wreg free
  2992  00F69E                     
  2993                           ;main.c: 188:                     INTCONbits.TMR0IF = 0;
  2994  00F69E  94F2               	bcf	242,2,c	;volatile
  2995  00F6A0  848B               	bsf	139,2,c	;volatile
  2996  00F6A2                     
  2997                           ;main.c: 190:                     ADC_StartConversion();
  2998  00F6A2  ECCB  F06E         	call	_ADC_StartConversion	;wreg free
  2999  00F6A6  948B               	bcf	139,2,c	;volatile
  3000  00F6A8                     l2737:
  3001  00F6A8  EC04  F06F         	call	_TMR0_HasOverflowOccured	;wreg free
  3002  00F6AC  0900               	iorlw	0
  3003  00F6AE  B4D8               	btfsc	status,2,c
  3004  00F6B0  EF5C  F07B         	goto	u2091
  3005  00F6B4  EF5E  F07B         	goto	u2090
  3006  00F6B8                     u2091:
  3007  00F6B8  EF54  F07B         	goto	l2737
  3008  00F6BC                     u2090:
  3009  00F6BC                     
  3010                           ;main.c: 193:                 }
  3011  00F6BC  0100               	movlb	0	; () banked
  3012  00F6BE  2BBC               	incf	main@i& (0+255),f,b
  3013  00F6C0                     
  3014                           ; BSR set to: 0
  3015  00F6C0  0E3F               	movlw	63
  3016  00F6C2  65BC               	cpfsgt	main@i& (0+255),b
  3017  00F6C4  EF66  F07B         	goto	u2101
  3018  00F6C8  EF68  F07B         	goto	u2100
  3019  00F6CC                     u2101:
  3020  00F6CC  EF33  F07B         	goto	l2725
  3021  00F6D0                     u2100:
  3022  00F6D0                     
  3023                           ; BSR set to: 0
  3024                           ;main.c: 196:                 for (i=0; i<64; i++) {
  3025  00F6D0  0E00               	movlw	0
  3026  00F6D2  6FBC               	movwf	main@i& (0+255),b
  3027  00F6D4                     l2749:
  3028                           
  3029                           ; BSR set to: 0
  3030                           ;main.c: 197:                     printf("%4d ",sample[i]);
  3031  00F6D4  0EFA               	movlw	low STR_32
  3032  00F6D6  6F68               	movwf	printf@fmt& (0+255),b
  3033  00F6D8  0EFF               	movlw	high STR_32
  3034  00F6DA  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3035  00F6DC  0E74               	movlw	low main@sample
  3036  00F6DE  25BC               	addwf	main@i& (0+255),w,b
  3037  00F6E0  6ED9               	movwf	fsr2l,c
  3038  00F6E2  6ADA               	clrf	fsr2h,c
  3039  00F6E4  0E00               	movlw	high main@sample
  3040  00F6E6  22DA               	addwfc	fsr2h,f,c
  3041  00F6E8  50DF               	movf	indf2,w,c
  3042  00F6EA  6F72               	movwf	??_main& (0+255),b
  3043  00F6EC  5172               	movf	??_main& (0+255),w,b
  3044  00F6EE  6F6A               	movwf	(?_printf+2)& (0+255),b
  3045  00F6F0  6B6B               	clrf	(?_printf+3)& (0+255),b
  3046  00F6F2  ECA0  F06F         	call	_printf	;wreg free
  3047  00F6F6                     
  3048                           ;main.c: 198:                 }
  3049  00F6F6  0100               	movlb	0	; () banked
  3050  00F6F8  2BBC               	incf	main@i& (0+255),f,b
  3051  00F6FA                     
  3052                           ; BSR set to: 0
  3053  00F6FA  0E3F               	movlw	63
  3054  00F6FC  65BC               	cpfsgt	main@i& (0+255),b
  3055  00F6FE  EF83  F07B         	goto	u2111
  3056  00F702  EF85  F07B         	goto	u2110
  3057  00F706                     u2111:
  3058  00F706  EF6A  F07B         	goto	l2749
  3059  00F70A                     u2110:
  3060  00F70A                     
  3061                           ; BSR set to: 0
  3062                           ;main.c: 199:                 printf("\r\n");
  3063  00F70A  0E3F               	movlw	low (STR_50+49)
  3064  00F70C  6F68               	movwf	printf@fmt& (0+255),b
  3065  00F70E  0EFB               	movlw	high (STR_50+49)
  3066  00F710  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3067  00F712  ECA0  F06F         	call	_printf	;wreg free
  3068  00F716                     
  3069                           ;main.c: 211:                 printf("key velocity = %d\r\n",i);
  3070  00F716  0E42               	movlw	low STR_34
  3071  00F718  0100               	movlb	0	; () banked
  3072  00F71A  6F68               	movwf	printf@fmt& (0+255),b
  3073  00F71C  0EFF               	movlw	high STR_34
  3074  00F71E  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3075  00F720  0E00               	movlw	0
  3076  00F722  6F6B               	movwf	(?_printf+3)& (0+255),b
  3077  00F724  0E00               	movlw	0
  3078  00F726  6F6A               	movwf	(?_printf+2)& (0+255),b
  3079  00F728  ECA0  F06F         	call	_printf	;wreg free
  3080                           
  3081                           ;main.c: 212:                 break;
  3082  00F72C  EF70  F079         	goto	l2623
  3083  00F730                     l2761:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;main.c: 218:                 printf("Launch hairless-midiserial\r\n");
  3087  00F730  0ED7               	movlw	low STR_35
  3088  00F732  6F68               	movwf	printf@fmt& (0+255),b
  3089  00F734  0EFD               	movlw	high STR_35
  3090  00F736  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3091  00F738  ECA0  F06F         	call	_printf	;wreg free
  3092                           
  3093                           ;main.c: 219:                 printf("In the hairless-midiserial program:\r\n");
  3094  00F73C  0E3D               	movlw	low (STR_48+4)
  3095  00F73E  0100               	movlb	0	; () banked
  3096  00F740  6F68               	movwf	printf@fmt& (0+255),b
  3097  00F742  0EFC               	movlw	high (STR_48+4)
  3098  00F744  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3099  00F746  ECA0  F06F         	call	_printf	;wreg free
  3100                           
  3101                           ;main.c: 220:                 printf("    File -> preferences\r\n");
  3102  00F74A  0E44               	movlw	low STR_37
  3103  00F74C  0100               	movlb	0	; () banked
  3104  00F74E  6F68               	movwf	printf@fmt& (0+255),b
  3105  00F750  0EFE               	movlw	high STR_37
  3106  00F752  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3107  00F754  ECA0  F06F         	call	_printf	;wreg free
  3108                           
  3109                           ;main.c: 221:                 printf("    Baud Rate:  9600\r\n");
  3110  00F758  0EA8               	movlw	low STR_38
  3111  00F75A  0100               	movlb	0	; () banked
  3112  00F75C  6F68               	movwf	printf@fmt& (0+255),b
  3113  00F75E  0EFE               	movlw	high STR_38
  3114  00F760  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3115  00F762  ECA0  F06F         	call	_printf	;wreg free
  3116                           
  3117                           ;main.c: 222:                 printf("    Data Bits:  8\r\n");
  3118  00F766  0E2E               	movlw	low STR_39
  3119  00F768  0100               	movlb	0	; () banked
  3120  00F76A  6F68               	movwf	printf@fmt& (0+255),b
  3121  00F76C  0EFF               	movlw	high STR_39
  3122  00F76E  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3123  00F770  ECA0  F06F         	call	_printf	;wreg free
  3124                           
  3125                           ;main.c: 223:                 printf("    Parity:     None\r\n");
  3126  00F774  0EBF               	movlw	low STR_40
  3127  00F776  0100               	movlb	0	; () banked
  3128  00F778  6F68               	movwf	printf@fmt& (0+255),b
  3129  00F77A  0EFE               	movlw	high STR_40
  3130  00F77C  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3131  00F77E  ECA0  F06F         	call	_printf	;wreg free
  3132                           
  3133                           ;main.c: 224:                 printf("    Stop Bit(s):    1\r\n");
  3134  00F782  0E90               	movlw	low STR_41
  3135  00F784  0100               	movlb	0	; () banked
  3136  00F786  6F68               	movwf	printf@fmt& (0+255),b
  3137  00F788  0EFE               	movlw	high STR_41
  3138  00F78A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3139  00F78C  ECA0  F06F         	call	_printf	;wreg free
  3140                           
  3141                           ;main.c: 225:                 printf("    Flow Control:   None\r\n");
  3142  00F790  0E0F               	movlw	low STR_42
  3143  00F792  0100               	movlb	0	; () banked
  3144  00F794  6F68               	movwf	printf@fmt& (0+255),b
  3145  00F796  0EFE               	movlw	high STR_42
  3146  00F798  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3147  00F79A  ECA0  F06F         	call	_printf	;wreg free
  3148                           
  3149                           ;main.c: 226:                 printf("    Click ""OK""\r\n");
  3150  00F79E  0EC3               	movlw	low STR_43
  3151  00F7A0  0100               	movlb	0	; () banked
  3152  00F7A2  6F68               	movwf	printf@fmt& (0+255),b
  3153  00F7A4  0EFF               	movlw	high STR_43
  3154  00F7A6  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3155  00F7A8  ECA0  F06F         	call	_printf	;wreg free
  3156                           
  3157                           ;main.c: 227:                 printf("    Serial Port -> (Not Connected)\r\n");
  3158  00F7AC  0E67               	movlw	low (STR_54+4)
  3159  00F7AE  0100               	movlb	0	; () banked
  3160  00F7B0  6F68               	movwf	printf@fmt& (0+255),b
  3161  00F7B2  0EFC               	movlw	high (STR_54+4)
  3162  00F7B4  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3163  00F7B6  ECA0  F06F         	call	_printf	;wreg free
  3164                           
  3165                           ;main.c: 228:                 printf("    MIDI Out -> (Not Connected)\r\n\n");
  3166  00F7BA  0E74               	movlw	low STR_45
  3167  00F7BC  0100               	movlb	0	; () banked
  3168  00F7BE  6F68               	movwf	printf@fmt& (0+255),b
  3169  00F7C0  0EFD               	movlw	high STR_45
  3170  00F7C2  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3171  00F7C4  ECA0  F06F         	call	_printf	;wreg free
  3172                           
  3173                           ;main.c: 229:                 printf("When you have complete this:\r\n");
  3174  00F7C8  0EB8               	movlw	low STR_46
  3175  00F7CA  0100               	movlb	0	; () banked
  3176  00F7CC  6F68               	movwf	printf@fmt& (0+255),b
  3177  00F7CE  0EFD               	movlw	high STR_46
  3178  00F7D0  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3179  00F7D2  ECA0  F06F         	call	_printf	;wreg free
  3180                           
  3181                           ;main.c: 230:                 printf("    Close out of Putty.\r\n");
  3182  00F7D6  0E2A               	movlw	low STR_47
  3183  00F7D8  0100               	movlb	0	; () banked
  3184  00F7DA  6F68               	movwf	printf@fmt& (0+255),b
  3185  00F7DC  0EFE               	movlw	high STR_47
  3186  00F7DE  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3187  00F7E0  ECA0  F06F         	call	_printf	;wreg free
  3188                           
  3189                           ;main.c: 231:                 printf("    In the hairless-midiserial program:\r\n");
  3190  00F7E4  0E39               	movlw	low STR_48
  3191  00F7E6  0100               	movlb	0	; () banked
  3192  00F7E8  6F68               	movwf	printf@fmt& (0+255),b
  3193  00F7EA  0EFC               	movlw	high STR_48
  3194  00F7EC  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3195  00F7EE  ECA0  F06F         	call	_printf	;wreg free
  3196                           
  3197                           ;main.c: 232:                 printf("        Serial Port -> USB Serial Port (COMx)\r\n"
      +                          );
  3198  00F7F2  0ED9               	movlw	low STR_49
  3199  00F7F4  0100               	movlb	0	; () banked
  3200  00F7F6  6F68               	movwf	printf@fmt& (0+255),b
  3201  00F7F8  0EFB               	movlw	high STR_49
  3202  00F7FA  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3203  00F7FC  ECA0  F06F         	call	_printf	;wreg free
  3204                           
  3205                           ;main.c: 233:                 printf("        MIDI Out -> Microsoft GS Wavetable Synth \
      +                          r\n");
  3206  00F800  0E0E               	movlw	low STR_50
  3207  00F802  0100               	movlb	0	; () banked
  3208  00F804  6F68               	movwf	printf@fmt& (0+255),b
  3209  00F806  0EFB               	movlw	high STR_50
  3210  00F808  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3211  00F80A  ECA0  F06F         	call	_printf	;wreg free
  3212                           
  3213                           ;main.c: 234:                 printf("    Press upper push button on Dev'18 to start MID
      +                          I play sequence\r\n");
  3214  00F80E  0E87               	movlw	low STR_51
  3215  00F810  0100               	movlb	0	; () banked
  3216  00F812  6F68               	movwf	printf@fmt& (0+255),b
  3217  00F814  0EFA               	movlw	high STR_51
  3218  00F816  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3219  00F818  ECA0  F06F         	call	_printf	;wreg free
  3220                           
  3221                           ;main.c: 235:                 printf("    Press lower push button on Dev'18 to exit MIDI
      +                           play sequence\r\n");
  3222  00F81C  0ECB               	movlw	low STR_52
  3223  00F81E  0100               	movlb	0	; () banked
  3224  00F820  6F68               	movwf	printf@fmt& (0+255),b
  3225  00F822  0EFA               	movlw	high STR_52
  3226  00F824  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3227  00F826  ECA0  F06F         	call	_printf	;wreg free
  3228                           
  3229                           ;main.c: 236:                 printf("    In the hairless-midiserial program:\r\n");
  3230  00F82A  0E39               	movlw	low STR_48
  3231  00F82C  0100               	movlb	0	; () banked
  3232  00F82E  6F68               	movwf	printf@fmt& (0+255),b
  3233  00F830  0EFC               	movlw	high STR_48
  3234  00F832  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3235  00F834  ECA0  F06F         	call	_printf	;wreg free
  3236                           
  3237                           ;main.c: 237:                 printf("        Serial Port -> (Not Connected)\r\n");
  3238  00F838  0E63               	movlw	low STR_54
  3239  00F83A  0100               	movlb	0	; () banked
  3240  00F83C  6F68               	movwf	printf@fmt& (0+255),b
  3241  00F83E  0EFC               	movlw	high STR_54
  3242  00F840  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3243  00F842  ECA0  F06F         	call	_printf	;wreg free
  3244                           
  3245                           ;main.c: 238:                 printf("        MIDI Out -> (Not Connected)\r\n");
  3246  00F846  0EDE               	movlw	low STR_55
  3247  00F848  0100               	movlb	0	; () banked
  3248  00F84A  6F68               	movwf	printf@fmt& (0+255),b
  3249  00F84C  0EFC               	movlw	high STR_55
  3250  00F84E  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3251  00F850  ECA0  F06F         	call	_printf	;wreg free
  3252                           
  3253                           ;main.c: 239:                 printf("        close hairless\r\n");
  3254  00F854  0E77               	movlw	low STR_56
  3255  00F856  0100               	movlb	0	; () banked
  3256  00F858  6F68               	movwf	printf@fmt& (0+255),b
  3257  00F85A  0EFE               	movlw	high STR_56
  3258  00F85C  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3259  00F85E  ECA0  F06F         	call	_printf	;wreg free
  3260                           
  3261                           ;main.c: 240:                 printf("    Launch PuTTY and reconnect to the VCOM port\r\
      +                          n");
  3262  00F862  0E76               	movlw	low STR_57
  3263  00F864  0100               	movlb	0	; () banked
  3264  00F866  6F68               	movwf	printf@fmt& (0+255),b
  3265  00F868  0EFB               	movlw	high STR_57
  3266  00F86A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3267  00F86C  ECA0  F06F         	call	_printf	;wreg free
  3268  00F870                     
  3269                           ;main.c: 242:                 pitch=64;
  3270  00F870  0E40               	movlw	64
  3271  00F872  0100               	movlb	0	; () banked
  3272  00F874  6FB9               	movwf	main@pitch& (0+255),b
  3273  00F876                     
  3274                           ; BSR set to: 0
  3275                           ;main.c: 243:                 instrument = 0;
  3276  00F876  0E00               	movlw	0
  3277  00F878  6FB5               	movwf	main@instrument& (0+255),b
  3278  00F87A                     l138:
  3279  00F87A  B480               	btfsc	128,2,c	;volatile
  3280  00F87C  EF42  F07C         	goto	u2121
  3281  00F880  EF44  F07C         	goto	u2120
  3282  00F884                     u2121:
  3283  00F884  EF3D  F07C         	goto	l138
  3284  00F888                     u2120:
  3285  00F888  EF81  F07C         	goto	l2789
  3286  00F88C                     l2767:
  3287                           
  3288                           ;main.c: 247:                     noteOn(0x90, pitch, 105);
  3289  00F88C  C0B9  F002         	movff	main@pitch,noteOn@pitch
  3290  00F890  0E69               	movlw	105
  3291  00F892  6E03               	movwf	noteOn@velocity^0,c
  3292  00F894  0E90               	movlw	144
  3293  00F896  EC2E  F06F         	call	_noteOn
  3294  00F89A                     
  3295                           ;main.c: 248:                     TMR0_WriteTimer(TMR0_ReadTimer() + 0xFFFF - 50000);
  3296  00F89A  EC6A  F06F         	call	_TMR0_ReadTimer	;wreg free
  3297  00F89E  0EAF               	movlw	175
  3298  00F8A0  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  3299  00F8A2  6E09               	movwf	TMR0_WriteTimer@timerVal^0,c
  3300  00F8A4  0E3C               	movlw	60
  3301  00F8A6  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  3302  00F8A8  6E0A               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  3303  00F8AA  ECDC  F06E         	call	_TMR0_WriteTimer	;wreg free
  3304  00F8AE                     
  3305                           ;main.c: 249:                     INTCONbits.TMR0IF = 0;
  3306  00F8AE  94F2               	bcf	242,2,c	;volatile
  3307  00F8B0                     l2773:
  3308  00F8B0  EC04  F06F         	call	_TMR0_HasOverflowOccured	;wreg free
  3309  00F8B4  0900               	iorlw	0
  3310  00F8B6  B4D8               	btfsc	status,2,c
  3311  00F8B8  EF60  F07C         	goto	u2131
  3312  00F8BC  EF62  F07C         	goto	u2130
  3313  00F8C0                     u2131:
  3314  00F8C0  EF58  F07C         	goto	l2773
  3315  00F8C4                     u2130:
  3316  00F8C4                     
  3317                           ;main.c: 251:                     noteOn(0x80, pitch, 105);
  3318  00F8C4  C0B9  F002         	movff	main@pitch,noteOn@pitch
  3319  00F8C8  0E69               	movlw	105
  3320  00F8CA  6E03               	movwf	noteOn@velocity^0,c
  3321  00F8CC  0E80               	movlw	128
  3322  00F8CE  EC2E  F06F         	call	_noteOn
  3323  00F8D2                     
  3324                           ;main.c: 253:                     pitch = pitch + 1;
  3325  00F8D2  0100               	movlb	0	; () banked
  3326  00F8D4  29B9               	incf	main@pitch& (0+255),w,b
  3327  00F8D6  6FB9               	movwf	main@pitch& (0+255),b
  3328  00F8D8                     
  3329                           ; BSR set to: 0
  3330                           ;main.c: 254:                     if (pitch > 76) {
  3331  00F8D8  0E4C               	movlw	76
  3332  00F8DA  65B9               	cpfsgt	main@pitch& (0+255),b
  3333  00F8DC  EF72  F07C         	goto	u2141
  3334  00F8E0  EF74  F07C         	goto	u2140
  3335  00F8E4                     u2141:
  3336  00F8E4  EF81  F07C         	goto	l2789
  3337  00F8E8                     u2140:
  3338  00F8E8                     
  3339                           ; BSR set to: 0
  3340                           ;main.c: 255:                         pitch = 64;
  3341  00F8E8  0E40               	movlw	64
  3342  00F8EA  6FB9               	movwf	main@pitch& (0+255),b
  3343  00F8EC                     
  3344                           ; BSR set to: 0
  3345                           ;main.c: 256:                         instrument = (instrument + 8) & 0x7F;
  3346  00F8EC  51B5               	movf	main@instrument& (0+255),w,b
  3347  00F8EE  0F08               	addlw	8
  3348  00F8F0  0B7F               	andlw	127
  3349  00F8F2  6FB5               	movwf	main@instrument& (0+255),b
  3350  00F8F4                     
  3351                           ; BSR set to: 0
  3352                           ;main.c: 257:                         putByteSCI(0xC0);
  3353  00F8F4  0EC0               	movlw	192
  3354  00F8F6  EC50  F06F         	call	_putByteSCI
  3355  00F8FA                     
  3356                           ;main.c: 258:                         putByteSCI(instrument);
  3357  00F8FA  0100               	movlb	0	; () banked
  3358  00F8FC  51B5               	movf	main@instrument& (0+255),w,b
  3359  00F8FE  EC50  F06F         	call	_putByteSCI
  3360  00F902                     l2789:
  3361                           
  3362                           ;main.c: 245:                 while(PORTAbits.RA3 != 0) {
  3363  00F902  B680               	btfsc	128,3,c	;volatile
  3364  00F904  EF86  F07C         	goto	u2151
  3365  00F908  EF88  F07C         	goto	u2150
  3366  00F90C                     u2151:
  3367  00F90C  EF46  F07C         	goto	l2767
  3368  00F910                     u2150:
  3369  00F910  EF70  F079         	goto	l2623
  3370  00F914                     l2791:
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;main.c: 267:     printf("Unknown key %c\r\n",cmd);
  3374  00F914  0E90               	movlw	low STR_58
  3375  00F916  6F68               	movwf	printf@fmt& (0+255),b
  3376  00F918  0EFF               	movlw	high STR_58
  3377  00F91A  6F69               	movwf	(printf@fmt+1)& (0+255),b
  3378  00F91C  C0B8  F06A         	movff	main@cmd,?_printf+2
  3379  00F920  6B6B               	clrf	(?_printf+3)& (0+255),b
  3380  00F922  ECA0  F06F         	call	_printf	;wreg free
  3381                           
  3382                           ;main.c: 268:     break;
  3383  00F926  EF70  F079         	goto	l2623
  3384  00F92A                     l2795:
  3385                           
  3386                           ; BSR set to: 0
  3387  00F92A  51B8               	movf	main@cmd& (0+255),w,b
  3388  00F92C  6F72               	movwf	??_main& (0+255),b
  3389  00F92E  6B73               	clrf	(??_main+1)& (0+255),b
  3390                           
  3391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3392                           ; Switch size 1, requested type "simple"
  3393                           ; Number of cases is 1, Range of values is 0 to 0
  3394                           ; switch strategies available:
  3395                           ; Name         Instructions Cycles
  3396                           ; simple_byte            4     3 (average)
  3397                           ;	Chosen strategy is simple_byte
  3398  00F930  5173               	movf	(??_main+1)& (0+255),w,b
  3399  00F932  0A00               	xorlw	0	; case 0
  3400  00F934  B4D8               	btfsc	status,2,c
  3401  00F936  EF9F  F07C         	goto	l2857
  3402  00F93A  EF8A  F07C         	goto	l2791
  3403  00F93E                     l2857:
  3404                           
  3405                           ; BSR set to: 0
  3406                           ; Switch size 1, requested type "simple"
  3407                           ; Number of cases is 13, Range of values is 49 to 122
  3408                           ; switch strategies available:
  3409                           ; Name         Instructions Cycles
  3410                           ; simple_byte           40    21 (average)
  3411                           ;	Chosen strategy is simple_byte
  3412  00F93E  5172               	movf	??_main& (0+255),w,b
  3413  00F940  0A31               	xorlw	49	; case 49
  3414  00F942  B4D8               	btfsc	status,2,c
  3415  00F944  EFD8  F07A         	goto	l112
  3416  00F948  0A0E               	xorlw	14	; case 63
  3417  00F94A  B4D8               	btfsc	status,2,c
  3418  00F94C  EF80  F079         	goto	l2627
  3419  00F950  0A7C               	xorlw	124	; case 67
  3420  00F952  B4D8               	btfsc	status,2,c
  3421  00F954  EF6C  F07A         	goto	l2669
  3422  00F958  0A07               	xorlw	7	; case 68
  3423  00F95A  B4D8               	btfsc	status,2,c
  3424  00F95C  EF9D  F07A         	goto	l2683
  3425  00F960  0A09               	xorlw	9	; case 77
  3426  00F962  B4D8               	btfsc	status,2,c
  3427  00F964  EF98  F07B         	goto	l2761
  3428  00F968  0A1E               	xorlw	30	; case 83
  3429  00F96A  B4D8               	btfsc	status,2,c
  3430  00F96C  EFB5  F07A         	goto	l2691
  3431  00F970  0A09               	xorlw	9	; case 90
  3432  00F972  B4D8               	btfsc	status,2,c
  3433  00F974  EF12  F07A         	goto	l2631
  3434  00F978  0A39               	xorlw	57	; case 99
  3435  00F97A  B4D8               	btfsc	status,2,c
  3436  00F97C  EF3B  F07A         	goto	l2655
  3437  00F980  0A07               	xorlw	7	; case 100
  3438  00F982  B4D8               	btfsc	status,2,c
  3439  00F984  EF9D  F07A         	goto	l2683
  3440  00F988  0A0B               	xorlw	11	; case 111
  3441  00F98A  B4D8               	btfsc	status,2,c
  3442  00F98C  EF0A  F07A         	goto	l2629
  3443  00F990  0A1C               	xorlw	28	; case 115
  3444  00F992  B4D8               	btfsc	status,2,c
  3445  00F994  EFB5  F07A         	goto	l2691
  3446  00F998  0A07               	xorlw	7	; case 116
  3447  00F99A  B4D8               	btfsc	status,2,c
  3448  00F99C  EFF5  F07A         	goto	l2707
  3449  00F9A0  0A0E               	xorlw	14	; case 122
  3450  00F9A2  B4D8               	btfsc	status,2,c
  3451  00F9A4  EF27  F07A         	goto	l2643
  3452  00F9A8  EF8A  F07C         	goto	l2791
  3453  00F9AC  EF00  F000         	goto	start
  3454  00F9B0                     __end_of_main:
  3455                           	opt callstack 0
  3456                           
  3457 ;; *************** function _printf *****************
  3458 ;; Defined at:
  3459 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\printf.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  3462 ;;		 -> STR_58(17), STR_57(50), STR_56(25), STR_55(38), 
  3463 ;;		 -> STR_54(41), STR_53(42), STR_52(67), STR_51(68), 
  3464 ;;		 -> STR_50(52), STR_49(48), STR_48(42), STR_47(26), 
  3465 ;;		 -> STR_46(31), STR_45(35), STR_44(37), STR_43(15), 
  3466 ;;		 -> STR_42(27), STR_41(24), STR_40(23), STR_39(20), 
  3467 ;;		 -> STR_38(23), STR_37(26), STR_36(38), STR_35(29), 
  3468 ;;		 -> STR_34(20), STR_33(3), STR_32(5), STR_31(19), 
  3469 ;;		 -> STR_30(19), STR_29(41), STR_28(17), STR_27(36), 
  3470 ;;		 -> STR_26(72), STR_25(38), STR_24(74), STR_23(2), 
  3471 ;;		 -> STR_22(2), STR_21(13), STR_20(52), STR_19(27), 
  3472 ;;		 -> STR_18(68), STR_17(49), STR_16(48), STR_15(38), 
  3473 ;;		 -> STR_14(33), STR_13(25), STR_12(22), STR_11(7), 
  3474 ;;		 -> STR_10(15), STR_9(52), STR_8(41), STR_7(17), 
  3475 ;;		 -> STR_6(23), STR_5(52), STR_4(5), STR_3(22), 
  3476 ;;		 -> STR_2(21), STR_1(20), 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  ap              2   16[BANK0 ] PTR void [1]
  3479 ;;		 -> ?_printf(2), 
  3480 ;;  ret             2    0        int 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  2    8[BANK0 ] int 
  3483 ;; Registers used:
  3484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3490 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;Total ram usage:       10 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    8
  3497 ;; This function calls:
  3498 ;;		_vfprintf
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text1
  3505  00DF40                     __ptext1:
  3506                           	opt callstack 0
  3507  00DF40                     _printf:
  3508                           	opt callstack 22
  3509  00DF40  0E6A               	movlw	low (?_printf+2)
  3510  00DF42  0100               	movlb	0	; () banked
  3511  00DF44  6F70               	movwf	printf@ap& (0+255),b
  3512  00DF46  0E00               	movlw	high (?_printf+2)
  3513  00DF48  6F71               	movwf	(printf@ap+1)& (0+255),b
  3514  00DF4A                     
  3515                           ; BSR set to: 0
  3516  00DF4A  0E00               	movlw	0
  3517  00DF4C  6F60               	movwf	vfprintf@fp& (0+255),b
  3518  00DF4E  0E00               	movlw	0
  3519  00DF50  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
  3520  00DF52  C068  F062         	movff	printf@fmt,vfprintf@fmt
  3521  00DF56  C069  F063         	movff	printf@fmt+1,vfprintf@fmt+1
  3522  00DF5A  0E70               	movlw	low printf@ap
  3523  00DF5C  6F64               	movwf	vfprintf@ap& (0+255),b
  3524  00DF5E  0E00               	movlw	high printf@ap
  3525  00DF60  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
  3526  00DF62  ECCC  F070         	call	_vfprintf	;wreg free
  3527  00DF66  0012               	return		;funcret
  3528  00DF68                     __end_of_printf:
  3529                           	opt callstack 0
  3530                           
  3531 ;; *************** function _vfprintf *****************
  3532 ;; Defined at:
  3533 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3536 ;;		 -> NULL(0), 
  3537 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3538 ;;		 -> STR_58(17), STR_57(50), STR_56(25), STR_55(38), 
  3539 ;;		 -> STR_54(41), STR_53(42), STR_52(67), STR_51(68), 
  3540 ;;		 -> STR_50(52), STR_49(48), STR_48(42), STR_47(26), 
  3541 ;;		 -> STR_46(31), STR_45(35), STR_44(37), STR_43(15), 
  3542 ;;		 -> STR_42(27), STR_41(24), STR_40(23), STR_39(20), 
  3543 ;;		 -> STR_38(23), STR_37(26), STR_36(38), STR_35(29), 
  3544 ;;		 -> STR_34(20), STR_33(3), STR_32(5), STR_31(19), 
  3545 ;;		 -> STR_30(19), STR_29(41), STR_28(17), STR_27(36), 
  3546 ;;		 -> STR_26(72), STR_25(38), STR_24(74), STR_23(2), 
  3547 ;;		 -> STR_22(2), STR_21(13), STR_20(52), STR_19(27), 
  3548 ;;		 -> STR_18(68), STR_17(49), STR_16(48), STR_15(38), 
  3549 ;;		 -> STR_14(33), STR_13(25), STR_12(22), STR_11(7), 
  3550 ;;		 -> STR_10(15), STR_9(52), STR_8(41), STR_7(17), 
  3551 ;;		 -> STR_6(23), STR_5(52), STR_4(5), STR_3(22), 
  3552 ;;		 -> STR_2(21), STR_1(20), 
  3553 ;;  ap              2    4[BANK0 ] PTR PTR void 
  3554 ;;		 -> printf@ap(2), 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
  3557 ;;		 -> STR_58(17), STR_57(50), STR_56(25), STR_55(38), 
  3558 ;;		 -> STR_54(41), STR_53(42), STR_52(67), STR_51(68), 
  3559 ;;		 -> STR_50(52), STR_49(48), STR_48(42), STR_47(26), 
  3560 ;;		 -> STR_46(31), STR_45(35), STR_44(37), STR_43(15), 
  3561 ;;		 -> STR_42(27), STR_41(24), STR_40(23), STR_39(20), 
  3562 ;;		 -> STR_38(23), STR_37(26), STR_36(38), STR_35(29), 
  3563 ;;		 -> STR_34(20), STR_33(3), STR_32(5), STR_31(19), 
  3564 ;;		 -> STR_30(19), STR_29(41), STR_28(17), STR_27(36), 
  3565 ;;		 -> STR_26(72), STR_25(38), STR_24(74), STR_23(2), 
  3566 ;;		 -> STR_22(2), STR_21(13), STR_20(52), STR_19(27), 
  3567 ;;		 -> STR_18(68), STR_17(49), STR_16(48), STR_15(38), 
  3568 ;;		 -> STR_14(33), STR_13(25), STR_12(22), STR_11(7), 
  3569 ;;		 -> STR_10(15), STR_9(52), STR_8(41), STR_7(17), 
  3570 ;;		 -> STR_6(23), STR_5(52), STR_4(5), STR_3(22), 
  3571 ;;		 -> STR_2(21), STR_1(20), 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  2    0[BANK0 ] int 
  3574 ;; Registers used:
  3575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/0
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3581 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;Total ram usage:        8 bytes
  3586 ;; Hardware stack levels used:    1
  3587 ;; Hardware stack levels required when called:    7
  3588 ;; This function calls:
  3589 ;;		_vfpfcnvrt
  3590 ;; This function is called by:
  3591 ;;		_printf
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text2
  3596  00E198                     __ptext2:
  3597                           	opt callstack 0
  3598  00E198                     _vfprintf:
  3599                           	opt callstack 22
  3600  00E198                     
  3601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3602  00E198  C062  F066         	movff	vfprintf@fmt,vfprintf@cfmt
  3603  00E19C  C063  F067         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3604  00E1A0                     
  3605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  3606  00E1A0  0E00               	movlw	0
  3607  00E1A2  0100               	movlb	0	; () banked
  3608  00E1A4  6FBE               	movwf	(_nout+1)& (0+255),b
  3609  00E1A6  0E00               	movlw	0
  3610  00E1A8  6FBD               	movwf	_nout& (0+255),b
  3611                           
  3612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3613  00E1AA  EFEA  F070         	goto	l2537
  3614  00E1AE                     l2535:
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  3618  00E1AE  C060  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  3619  00E1B2  C061  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3620  00E1B6  0E66               	movlw	low vfprintf@cfmt
  3621  00E1B8  6E44               	movwf	vfpfcnvrt@fmt^0,c
  3622  00E1BA  0E00               	movlw	high vfprintf@cfmt
  3623  00E1BC  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3624  00E1BE  C064  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  3625  00E1C2  C065  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3626  00E1C6  EC41  F077         	call	_vfpfcnvrt	;wreg free
  3627  00E1CA  5042               	movf	?_vfpfcnvrt^0,w,c
  3628  00E1CC  0100               	movlb	0	; () banked
  3629  00E1CE  27BD               	addwf	_nout& (0+255),f,b
  3630  00E1D0  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  3631  00E1D2  23BE               	addwfc	(_nout+1)& (0+255),f,b
  3632  00E1D4                     l2537:
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  3636  00E1D4  C066  FFF6         	movff	vfprintf@cfmt,tblptrl
  3637  00E1D8  C067  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3638  00E1DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3639  00E1DC  6AF8               	clrf	tblptru,c
  3640  00E1DE                     	endif
  3641  00E1DE                     	if	0	;tblptru may be non-zero
  3642  00E1DE                     	endif
  3643  00E1DE  0008               	tblrd		*
  3644  00E1E0  50F5               	movf	tablat,w,c
  3645  00E1E2  0900               	iorlw	0
  3646  00E1E4  A4D8               	btfss	status,2,c
  3647  00E1E6  EFF7  F070         	goto	u1891
  3648  00E1EA  EFF9  F070         	goto	u1890
  3649  00E1EE                     u1891:
  3650  00E1EE  EFD7  F070         	goto	l2535
  3651  00E1F2                     u1890:
  3652  00E1F2                     
  3653                           ; BSR set to: 0
  3654                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  3655  00E1F2  C0BD  F060         	movff	_nout,?_vfprintf
  3656  00E1F6  C0BE  F061         	movff	_nout+1,?_vfprintf+1
  3657  00E1FA                     
  3658                           ; BSR set to: 0
  3659  00E1FA  0012               	return		;funcret
  3660  00E1FC                     __end_of_vfprintf:
  3661                           	opt callstack 0
  3662                           
  3663 ;; *************** function _vfpfcnvrt *****************
  3664 ;; Defined at:
  3665 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  3668 ;;		 -> NULL(0), 
  3669 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  3670 ;;		 -> vfprintf@cfmt(2), 
  3671 ;;  ap              2   69[COMRAM] PTR PTR void 
  3672 ;;		 -> printf@ap(2), 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  llu             8   83[COMRAM] unsigned long long 
  3675 ;;  ll              8   75[COMRAM] long long 
  3676 ;;  f               4    0        long long 
  3677 ;;  vp              3    0        PTR void 
  3678 ;;  ct              3    0        unsigned char [3]
  3679 ;;  cp              3    0        PTR unsigned char 
  3680 ;;  i               2    0        int 
  3681 ;;  done            2    0        int 
  3682 ;;  c               1   93[COMRAM] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  2   65[COMRAM] int 
  3685 ;; Registers used:
  3686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3692 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Totals:        29       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;Total ram usage:       29 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    6
  3699 ;; This function calls:
  3700 ;;		_atoi
  3701 ;;		_ctoa
  3702 ;;		_dtoa
  3703 ;;		_fputc
  3704 ;;		_isdigit
  3705 ;;		_utoa
  3706 ;; This function is called by:
  3707 ;;		_vfprintf
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text3
  3712  00EE82                     __ptext3:
  3713                           	opt callstack 0
  3714  00EE82                     _vfpfcnvrt:
  3715                           	opt callstack 22
  3716  00EE82                     
  3717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  3718  00EE82  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3719  00EE86  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3720  00EE8A  CFDE FFF6          	movff	postinc2,tblptrl
  3721  00EE8E  CFDD FFF7          	movff	postdec2,tblptrh
  3722  00EE92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3723  00EE92  6AF8               	clrf	tblptru,c
  3724  00EE94                     	endif
  3725  00EE94                     	if	0	;tblptru may be non-zero
  3726  00EE94                     	endif
  3727  00EE94  0008               	tblrd		*
  3728  00EE96  50F5               	movf	tablat,w,c
  3729  00EE98  0A25               	xorlw	37
  3730  00EE9A  A4D8               	btfss	status,2,c
  3731  00EE9C  EF52  F077         	goto	u1761
  3732  00EEA0  EF54  F077         	goto	u1760
  3733  00EEA4                     u1761:
  3734  00EEA4  EF11  F079         	goto	l2487
  3735  00EEA8                     u1760:
  3736  00EEA8                     
  3737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  3738  00EEA8  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3739  00EEAC  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3740  00EEB0  2ADE               	incf	postinc2,f,c
  3741  00EEB2  0E00               	movlw	0
  3742  00EEB4  22DD               	addwfc	postdec2,f,c
  3743  00EEB6                     
  3744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  3745  00EEB6  0E00               	movlw	0
  3746  00EEB8  0100               	movlb	0	; () banked
  3747  00EEBA  6FC0               	movwf	(_width+1)& (0+255),b
  3748  00EEBC  0E00               	movlw	0
  3749  00EEBE  6FBF               	movwf	_width& (0+255),b
  3750  00EEC0  C0BF  F0C3         	movff	_width,_flags
  3751  00EEC4  C0C0  F0C4         	movff	_width+1,_flags+1
  3752  00EEC8                     
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  3755  00EEC8  69C1               	setf	_prec& (0+255),b
  3756  00EECA  69C2               	setf	(_prec+1)& (0+255),b
  3757  00EECC                     
  3758                           ; BSR set to: 0
  3759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  3760  00EECC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3761  00EED0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3762  00EED4  CFDE FFF6          	movff	postinc2,tblptrl
  3763  00EED8  CFDD FFF7          	movff	postdec2,tblptrh
  3764  00EEDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3765  00EEDC  6AF8               	clrf	tblptru,c
  3766  00EEDE                     	endif
  3767  00EEDE                     	if	0	;tblptru may be non-zero
  3768  00EEDE                     	endif
  3769  00EEDE  0008               	tblrd		*
  3770  00EEE0  50F5               	movf	tablat,w,c
  3771  00EEE2  0A2A               	xorlw	42
  3772  00EEE4  A4D8               	btfss	status,2,c
  3773  00EEE6  EF77  F077         	goto	u1771
  3774  00EEEA  EF79  F077         	goto	u1770
  3775  00EEEE                     u1771:
  3776  00EEEE  EFA2  F077         	goto	l2435
  3777  00EEF2                     u1770:
  3778  00EEF2                     
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  3781  00EEF2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3782  00EEF6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3783  00EEFA  2ADE               	incf	postinc2,f,c
  3784  00EEFC  0E00               	movlw	0
  3785  00EEFE  22DD               	addwfc	postdec2,f,c
  3786                           
  3787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3788  00EF00  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3789  00EF04  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3790  00EF08  CFDF F048          	movff	indf2,??_vfpfcnvrt
  3791  00EF0C  0E02               	movlw	2
  3792  00EF0E  26DE               	addwf	postinc2,f,c
  3793  00EF10  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  3794  00EF14  0E00               	movlw	0
  3795  00EF16  22DD               	addwfc	postdec2,f,c
  3796  00EF18  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3797  00EF1C  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3798  00EF20  CFDE F0BF          	movff	postinc2,_width
  3799  00EF24  CFDD F0C0          	movff	postdec2,_width+1
  3800  00EF28                     
  3801                           ; BSR set to: 0
  3802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  3803  00EF28  BFC0               	btfsc	(_width+1)& (0+255),7,b
  3804  00EF2A  EF9B  F077         	goto	u1780
  3805  00EF2E  EF99  F077         	goto	u1781
  3806  00EF32                     u1781:
  3807  00EF32  EFE6  F077         	goto	l2445
  3808  00EF36                     u1780:
  3809  00EF36                     
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  3812  00EF36  81C3               	bsf	_flags& (0+255),0,b
  3813                           
  3814                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  3815  00EF38  6DBF               	negf	_width& (0+255),b
  3816  00EF3A  1FC0               	comf	(_width+1)& (0+255),f,b
  3817  00EF3C  B0D8               	btfsc	status,0,c
  3818  00EF3E  2BC0               	incf	(_width+1)& (0+255),f,b
  3819  00EF40  EFE6  F077         	goto	l2445
  3820  00EF44                     l2435:
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  3824  00EF44  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3825  00EF48  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3826  00EF4C  CFDE F008          	movff	postinc2,atoi@s
  3827  00EF50  CFDD F009          	movff	postdec2,atoi@s+1
  3828  00EF54  EC02  F074         	call	_atoi	;wreg free
  3829  00EF58  C008  F0BF         	movff	?_atoi,_width
  3830  00EF5C  C009  F0C0         	movff	?_atoi+1,_width+1
  3831                           
  3832                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3833  00EF60  EFB9  F077         	goto	l2439
  3834  00EF64                     l2437:
  3835                           
  3836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  3837  00EF64  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3838  00EF68  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3839  00EF6C  2ADE               	incf	postinc2,f,c
  3840  00EF6E  0E00               	movlw	0
  3841  00EF70  22DD               	addwfc	postdec2,f,c
  3842  00EF72                     l2439:
  3843  00EF72  0ED0               	movlw	208
  3844  00EF74  6E48               	movwf	??_vfpfcnvrt^0,c
  3845  00EF76  0EFF               	movlw	255
  3846  00EF78  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  3847  00EF7A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3848  00EF7E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3849  00EF82  CFDE FFF6          	movff	postinc2,tblptrl
  3850  00EF86  CFDD FFF7          	movff	postdec2,tblptrh
  3851  00EF8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3852  00EF8A  6AF8               	clrf	tblptru,c
  3853  00EF8C                     	endif
  3854  00EF8C                     	if	0	;tblptru may be non-zero
  3855  00EF8C                     	endif
  3856  00EF8C  0008               	tblrd		*
  3857  00EF8E  50F5               	movf	tablat,w,c
  3858  00EF90  6E4A               	movwf	(??_vfpfcnvrt+2)^0,c
  3859  00EF92  6A4B               	clrf	(??_vfpfcnvrt+3)^0,c
  3860  00EF94  5048               	movf	??_vfpfcnvrt^0,w,c
  3861  00EF96  264A               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3862  00EF98  5049               	movf	(??_vfpfcnvrt+1)^0,w,c
  3863  00EF9A  224B               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3864  00EF9C  504B               	movf	(??_vfpfcnvrt+3)^0,w,c
  3865  00EF9E  E10A               	bnz	u1790
  3866  00EFA0  0E0A               	movlw	10
  3867  00EFA2  5C4A               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3868  00EFA4  A0D8               	btfss	status,0,c
  3869  00EFA6  EFD7  F077         	goto	u1791
  3870  00EFAA  EFDA  F077         	goto	u1790
  3871  00EFAE                     u1791:
  3872  00EFAE  0E01               	movlw	1
  3873  00EFB0  EFDB  F077         	goto	u1800
  3874  00EFB4                     u1790:
  3875  00EFB4  0E00               	movlw	0
  3876  00EFB6                     u1800:
  3877  00EFB6  6E5C               	movwf	_vfpfcnvrt$1057^0,c
  3878  00EFB8  6A5D               	clrf	(_vfpfcnvrt$1057+1)^0,c
  3879  00EFBA  505C               	movf	_vfpfcnvrt$1057^0,w,c
  3880  00EFBC  105D               	iorwf	(_vfpfcnvrt$1057+1)^0,w,c
  3881  00EFBE  A4D8               	btfss	status,2,c
  3882  00EFC0  EFE4  F077         	goto	u1811
  3883  00EFC4  EFE6  F077         	goto	u1810
  3884  00EFC8                     u1811:
  3885  00EFC8  EFB2  F077         	goto	l2437
  3886  00EFCC                     u1810:
  3887  00EFCC                     l2445:
  3888                           
  3889                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  3890  00EFCC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3891  00EFD0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3892  00EFD4  CFDE FFF6          	movff	postinc2,tblptrl
  3893  00EFD8  CFDD FFF7          	movff	postdec2,tblptrh
  3894  00EFDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3895  00EFDC  6AF8               	clrf	tblptru,c
  3896  00EFDE                     	endif
  3897  00EFDE                     	if	0	;tblptru may be non-zero
  3898  00EFDE                     	endif
  3899  00EFDE  0008               	tblrd		*
  3900  00EFE0  50F5               	movf	tablat,w,c
  3901  00EFE2  0A63               	xorlw	99
  3902  00EFE4  A4D8               	btfss	status,2,c
  3903  00EFE6  EFF7  F077         	goto	u1821
  3904  00EFEA  EFF9  F077         	goto	u1820
  3905  00EFEE                     u1821:
  3906  00EFEE  EF20  F078         	goto	l2453
  3907  00EFF2                     u1820:
  3908  00EFF2                     
  3909                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  3910  00EFF2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3911  00EFF6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3912  00EFFA  2ADE               	incf	postinc2,f,c
  3913  00EFFC  0E00               	movlw	0
  3914  00EFFE  22DD               	addwfc	postdec2,f,c
  3915                           
  3916                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3917  00F000  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3918  00F004  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3919  00F008  CFDF F048          	movff	indf2,??_vfpfcnvrt
  3920  00F00C  0E02               	movlw	2
  3921  00F00E  26DE               	addwf	postinc2,f,c
  3922  00F010  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  3923  00F014  0E00               	movlw	0
  3924  00F016  22DD               	addwfc	postdec2,f,c
  3925  00F018  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3926  00F01C  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3927  00F020  50DF               	movf	indf2,w,c
  3928  00F022  6E5E               	movwf	vfpfcnvrt@c^0,c
  3929  00F024                     
  3930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  3931  00F024  C042  F01E         	movff	vfpfcnvrt@fp,ctoa@fp
  3932  00F028  C043  F01F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  3933  00F02C  C05E  F020         	movff	vfpfcnvrt@c,ctoa@c
  3934  00F030  EC9F  F070         	call	_ctoa	;wreg free
  3935  00F034  C01E  F042         	movff	?_ctoa,?_vfpfcnvrt
  3936  00F038  C01F  F043         	movff	?_ctoa+1,?_vfpfcnvrt+1
  3937  00F03C  EF2D  F079         	goto	l449
  3938  00F040                     l2453:
  3939                           
  3940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3941  00F040  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3942  00F044  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3943  00F048  CFDE FFF6          	movff	postinc2,tblptrl
  3944  00F04C  CFDD FFF7          	movff	postdec2,tblptrh
  3945  00F050                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3946  00F050  6AF8               	clrf	tblptru,c
  3947  00F052                     	endif
  3948  00F052                     	if	0	;tblptru may be non-zero
  3949  00F052                     	endif
  3950  00F052  0008               	tblrd		*
  3951  00F054  50F5               	movf	tablat,w,c
  3952  00F056  0A64               	xorlw	100
  3953  00F058  B4D8               	btfsc	status,2,c
  3954  00F05A  EF31  F078         	goto	u1831
  3955  00F05E  EF33  F078         	goto	u1830
  3956  00F062                     u1831:
  3957  00F062  EF46  F078         	goto	l2457
  3958  00F066                     u1830:
  3959  00F066  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3960  00F06A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3961  00F06E  CFDE FFF6          	movff	postinc2,tblptrl
  3962  00F072  CFDD FFF7          	movff	postdec2,tblptrh
  3963  00F076                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3964  00F076  6AF8               	clrf	tblptru,c
  3965  00F078                     	endif
  3966  00F078                     	if	0	;tblptru may be non-zero
  3967  00F078                     	endif
  3968  00F078  0008               	tblrd		*
  3969  00F07A  50F5               	movf	tablat,w,c
  3970  00F07C  0A69               	xorlw	105
  3971  00F07E  A4D8               	btfss	status,2,c
  3972  00F080  EF44  F078         	goto	u1841
  3973  00F084  EF46  F078         	goto	u1840
  3974  00F088                     u1841:
  3975  00F088  EF86  F078         	goto	l2463
  3976  00F08C                     u1840:
  3977  00F08C                     l2457:
  3978                           
  3979                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
  3980  00F08C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3981  00F090  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3982  00F094  2ADE               	incf	postinc2,f,c
  3983  00F096  0E00               	movlw	0
  3984  00F098  22DD               	addwfc	postdec2,f,c
  3985                           
  3986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3987  00F09A  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3988  00F09E  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3989  00F0A2  CFDF F048          	movff	indf2,??_vfpfcnvrt
  3990  00F0A6  0E02               	movlw	2
  3991  00F0A8  26DE               	addwf	postinc2,f,c
  3992  00F0AA  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  3993  00F0AE  0E00               	movlw	0
  3994  00F0B0  22DD               	addwfc	postdec2,f,c
  3995  00F0B2  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3996  00F0B6  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3997  00F0BA  CFDE F04C          	movff	postinc2,vfpfcnvrt@ll
  3998  00F0BE  CFDD F04D          	movff	postdec2,vfpfcnvrt@ll+1
  3999  00F0C2  0E00               	movlw	0
  4000  00F0C4  BE4D               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4001  00F0C6  0EFF               	movlw	-1
  4002  00F0C8  6E4E               	movwf	(vfpfcnvrt@ll+2)^0,c
  4003  00F0CA  6E4F               	movwf	(vfpfcnvrt@ll+3)^0,c
  4004  00F0CC  6E50               	movwf	(vfpfcnvrt@ll+4)^0,c
  4005  00F0CE  6E51               	movwf	(vfpfcnvrt@ll+5)^0,c
  4006  00F0D0  6E52               	movwf	(vfpfcnvrt@ll+6)^0,c
  4007  00F0D2  6E53               	movwf	(vfpfcnvrt@ll+7)^0,c
  4008  00F0D4                     
  4009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
  4010  00F0D4  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  4011  00F0D8  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4012  00F0DC  C04C  F020         	movff	vfpfcnvrt@ll,dtoa@d
  4013  00F0E0  C04D  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4014  00F0E4  C04E  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4015  00F0E8  C04F  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4016  00F0EC  C050  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4017  00F0F0  C051  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4018  00F0F4  C052  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4019  00F0F8  C053  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4020  00F0FC  ECD0  F075         	call	_dtoa	;wreg free
  4021  00F100  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  4022  00F104  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4023  00F108  EF2D  F079         	goto	l449
  4024  00F10C                     l2463:
  4025                           
  4026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
  4027  00F10C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4028  00F110  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4029  00F114  CFDE FFF6          	movff	postinc2,tblptrl
  4030  00F118  CFDD FFF7          	movff	postdec2,tblptrh
  4031  00F11C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4032  00F11C  6AF8               	clrf	tblptru,c
  4033  00F11E                     	endif
  4034  00F11E                     	if	0	;tblptru may be non-zero
  4035  00F11E                     	endif
  4036  00F11E  0008               	tblrd		*
  4037  00F120  50F5               	movf	tablat,w,c
  4038  00F122  0A75               	xorlw	117
  4039  00F124  A4D8               	btfss	status,2,c
  4040  00F126  EF97  F078         	goto	u1851
  4041  00F12A  EF99  F078         	goto	u1850
  4042  00F12E                     u1851:
  4043  00F12E  EFDA  F078         	goto	l2471
  4044  00F132                     u1850:
  4045  00F132                     
  4046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
  4047  00F132  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4048  00F136  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4049  00F13A  2ADE               	incf	postinc2,f,c
  4050  00F13C  0E00               	movlw	0
  4051  00F13E  22DD               	addwfc	postdec2,f,c
  4052                           
  4053                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  4054  00F140  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4055  00F144  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4056  00F148  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4057  00F14C  0E02               	movlw	2
  4058  00F14E  26DE               	addwf	postinc2,f,c
  4059  00F150  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4060  00F154  0E00               	movlw	0
  4061  00F156  22DD               	addwfc	postdec2,f,c
  4062  00F158  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4063  00F15C  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4064  00F160  CFDE F04A          	movff	postinc2,??_vfpfcnvrt+2
  4065  00F164  CFDD F04B          	movff	postdec2,??_vfpfcnvrt+3
  4066  00F168  C04A  F054         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  4067  00F16C  C04B  F055         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  4068  00F170  6A56               	clrf	(vfpfcnvrt@llu+2)^0,c
  4069  00F172  6A57               	clrf	(vfpfcnvrt@llu+3)^0,c
  4070  00F174  6A58               	clrf	(vfpfcnvrt@llu+4)^0,c
  4071  00F176  6A59               	clrf	(vfpfcnvrt@llu+5)^0,c
  4072  00F178  6A5A               	clrf	(vfpfcnvrt@llu+6)^0,c
  4073  00F17A  6A5B               	clrf	(vfpfcnvrt@llu+7)^0,c
  4074  00F17C                     
  4075                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
  4076  00F17C  C042  F01E         	movff	vfpfcnvrt@fp,utoa@fp
  4077  00F180  C043  F01F         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  4078  00F184  C054  F020         	movff	vfpfcnvrt@llu,utoa@d
  4079  00F188  C055  F021         	movff	vfpfcnvrt@llu+1,utoa@d+1
  4080  00F18C  C056  F022         	movff	vfpfcnvrt@llu+2,utoa@d+2
  4081  00F190  C057  F023         	movff	vfpfcnvrt@llu+3,utoa@d+3
  4082  00F194  C058  F024         	movff	vfpfcnvrt@llu+4,utoa@d+4
  4083  00F198  C059  F025         	movff	vfpfcnvrt@llu+5,utoa@d+5
  4084  00F19C  C05A  F026         	movff	vfpfcnvrt@llu+6,utoa@d+6
  4085  00F1A0  C05B  F027         	movff	vfpfcnvrt@llu+7,utoa@d+7
  4086  00F1A4  ECCF  F074         	call	_utoa	;wreg free
  4087  00F1A8  C01E  F042         	movff	?_utoa,?_vfpfcnvrt
  4088  00F1AC  C01F  F043         	movff	?_utoa+1,?_vfpfcnvrt+1
  4089  00F1B0  EF2D  F079         	goto	l449
  4090  00F1B4                     l2471:
  4091                           
  4092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4093  00F1B4  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4094  00F1B8  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4095  00F1BC  CFDE FFF6          	movff	postinc2,tblptrl
  4096  00F1C0  CFDD FFF7          	movff	postdec2,tblptrh
  4097  00F1C4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4098  00F1C4  6AF8               	clrf	tblptru,c
  4099  00F1C6                     	endif
  4100  00F1C6                     	if	0	;tblptru may be non-zero
  4101  00F1C6                     	endif
  4102  00F1C6  0008               	tblrd		*
  4103  00F1C8  50F5               	movf	tablat,w,c
  4104  00F1CA  0A25               	xorlw	37
  4105  00F1CC  A4D8               	btfss	status,2,c
  4106  00F1CE  EFEB  F078         	goto	u1861
  4107  00F1D2  EFED  F078         	goto	u1860
  4108  00F1D6                     u1861:
  4109  00F1D6  EF04  F079         	goto	l2481
  4110  00F1DA                     u1860:
  4111  00F1DA                     
  4112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4113  00F1DA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4114  00F1DE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4115  00F1E2  2ADE               	incf	postinc2,f,c
  4116  00F1E4  0E00               	movlw	0
  4117  00F1E6  22DD               	addwfc	postdec2,f,c
  4118  00F1E8                     
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4120  00F1E8  0E00               	movlw	0
  4121  00F1EA  6E04               	movwf	(fputc@c+1)^0,c
  4122  00F1EC  0E25               	movlw	37
  4123  00F1EE  6E03               	movwf	fputc@c^0,c
  4124  00F1F0  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4125  00F1F4  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4126  00F1F8  ECFE  F070         	call	_fputc	;wreg free
  4127  00F1FC                     l2477:
  4128                           
  4129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4130  00F1FC  0E00               	movlw	0
  4131  00F1FE  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4132  00F200  0E01               	movlw	1
  4133  00F202  6E42               	movwf	?_vfpfcnvrt^0,c
  4134  00F204  EF2D  F079         	goto	l449
  4135  00F208                     l2481:
  4136                           
  4137                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4138  00F208  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4139  00F20C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4140  00F210  2ADE               	incf	postinc2,f,c
  4141  00F212  0E00               	movlw	0
  4142  00F214  22DD               	addwfc	postdec2,f,c
  4143  00F216                     
  4144                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4145  00F216  0E00               	movlw	0
  4146  00F218  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4147  00F21A  0E00               	movlw	0
  4148  00F21C  6E42               	movwf	?_vfpfcnvrt^0,c
  4149  00F21E  EF2D  F079         	goto	l449
  4150  00F222                     l2487:
  4151                           
  4152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4153  00F222  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4154  00F226  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4155  00F22A  CFDE FFF6          	movff	postinc2,tblptrl
  4156  00F22E  CFDD FFF7          	movff	postdec2,tblptrh
  4157  00F232                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4158  00F232  6AF8               	clrf	tblptru,c
  4159  00F234                     	endif
  4160  00F234                     	if	0	;tblptru may be non-zero
  4161  00F234                     	endif
  4162  00F234  0008               	tblrd		*
  4163  00F236  50F5               	movf	tablat,w,c
  4164  00F238  6E03               	movwf	fputc@c^0,c
  4165  00F23A  6A04               	clrf	(fputc@c+1)^0,c
  4166  00F23C  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4167  00F240  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4168  00F244  ECFE  F070         	call	_fputc	;wreg free
  4169  00F248                     
  4170                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4171  00F248  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4172  00F24C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4173  00F250  2ADE               	incf	postinc2,f,c
  4174  00F252  0E00               	movlw	0
  4175  00F254  22DD               	addwfc	postdec2,f,c
  4176  00F256  EFFE  F078         	goto	l2477
  4177  00F25A                     l449:
  4178  00F25A  0012               	return		;funcret
  4179  00F25C                     __end_of_vfpfcnvrt:
  4180                           	opt callstack 0
  4181                           
  4182 ;; *************** function _utoa *****************
  4183 ;; Defined at:
  4184 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4187 ;;		 -> NULL(0), 
  4188 ;;  d               8   31[COMRAM] unsigned long long 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  n               8   51[COMRAM] unsigned long long 
  4191 ;;  i               2   59[COMRAM] int 
  4192 ;;  w               2   49[COMRAM] int 
  4193 ;;  p               2   47[COMRAM] int 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  2   29[COMRAM] int 
  4196 ;; Registers used:
  4197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4203 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4204 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;Total ram usage:       32 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    5
  4210 ;; This function calls:
  4211 ;;		___lodiv
  4212 ;;		___lomod
  4213 ;;		_pad
  4214 ;; This function is called by:
  4215 ;;		_vfpfcnvrt
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text4
  4220  00E99E                     __ptext4:
  4221                           	opt callstack 0
  4222  00E99E                     _utoa:
  4223                           	opt callstack 22
  4224  00E99E                     
  4225                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  4226  00E99E  0100               	movlb	0	; () banked
  4227  00E9A0  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  4228  00E9A2  EFD5  F074         	goto	u1621
  4229  00E9A6  EFD7  F074         	goto	u1620
  4230  00E9AA                     u1621:
  4231  00E9AA  EFD8  F074         	goto	l2339
  4232  00E9AE                     u1620:
  4233  00E9AE                     
  4234                           ; BSR set to: 0
  4235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  4236  00E9AE  93C3               	bcf	_flags& (0+255),1,b
  4237  00E9B0                     l2339:
  4238                           
  4239                           ; BSR set to: 0
  4240                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  4241  00E9B0  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  4242  00E9B2  EFE5  F074         	goto	u1630
  4243  00E9B6  51C2               	movf	(_prec+1)& (0+255),w,b
  4244  00E9B8  E106               	bnz	u1631
  4245  00E9BA  05C1               	decf	_prec& (0+255),w,b
  4246  00E9BC  B0D8               	btfsc	status,0,c
  4247  00E9BE  EFE3  F074         	goto	u1631
  4248  00E9C2  EFE5  F074         	goto	u1630
  4249  00E9C6                     u1631:
  4250  00E9C6  EFEB  F074         	goto	l424
  4251  00E9CA                     u1630:
  4252  00E9CA                     
  4253                           ; BSR set to: 0
  4254  00E9CA  0E00               	movlw	0
  4255  00E9CC  6E31               	movwf	(utoa@p+1)^0,c
  4256  00E9CE  0E01               	movlw	1
  4257  00E9D0  6E30               	movwf	utoa@p^0,c
  4258  00E9D2  EFEF  F074         	goto	l426
  4259  00E9D6                     l424:
  4260                           
  4261                           ; BSR set to: 0
  4262  00E9D6  C0C1  F030         	movff	_prec,utoa@p
  4263  00E9DA  C0C2  F031         	movff	_prec+1,utoa@p+1
  4264  00E9DE                     l426:
  4265                           
  4266                           ; BSR set to: 0
  4267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  4268  00E9DE  C0BF  F032         	movff	_width,utoa@w
  4269  00E9E2  C0C0  F033         	movff	_width+1,utoa@w+1
  4270                           
  4271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  4272  00E9E6  C020  F034         	movff	utoa@d,utoa@n
  4273  00E9EA  C021  F035         	movff	utoa@d+1,utoa@n+1
  4274  00E9EE  C022  F036         	movff	utoa@d+2,utoa@n+2
  4275  00E9F2  C023  F037         	movff	utoa@d+3,utoa@n+3
  4276  00E9F6  C024  F038         	movff	utoa@d+4,utoa@n+4
  4277  00E9FA  C025  F039         	movff	utoa@d+5,utoa@n+5
  4278  00E9FE  C026  F03A         	movff	utoa@d+6,utoa@n+6
  4279  00EA02  C027  F03B         	movff	utoa@d+7,utoa@n+7
  4280  00EA06                     
  4281                           ; BSR set to: 0
  4282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  4283  00EA06  0E00               	movlw	0
  4284  00EA08  6E3D               	movwf	(utoa@i+1)^0,c
  4285  00EA0A  0E1F               	movlw	31
  4286  00EA0C  6E3C               	movwf	utoa@i^0,c
  4287  00EA0E                     
  4288                           ; BSR set to: 0
  4289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  4290  00EA0E  0E00               	movlw	0
  4291  00EA10  6FEE               	movwf	(_dbuf+31)& (0+255),b
  4292                           
  4293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4294  00EA12  EF81  F075         	goto	l2357
  4295  00EA16                     l2347:
  4296                           
  4297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  4298  00EA16  063C               	decf	utoa@i^0,f,c
  4299  00EA18  A0D8               	btfss	status,0,c
  4300  00EA1A  063D               	decf	(utoa@i+1)^0,f,c
  4301  00EA1C                     
  4302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  4303  00EA1C  0ECF               	movlw	low _dbuf
  4304  00EA1E  243C               	addwf	utoa@i^0,w,c
  4305  00EA20  6ED9               	movwf	fsr2l,c
  4306  00EA22  0E00               	movlw	high _dbuf
  4307  00EA24  203D               	addwfc	(utoa@i+1)^0,w,c
  4308  00EA26  6EDA               	movwf	fsr2h,c
  4309  00EA28  C034  F001         	movff	utoa@n,___lomod@dividend
  4310  00EA2C  C035  F002         	movff	utoa@n+1,___lomod@dividend+1
  4311  00EA30  C036  F003         	movff	utoa@n+2,___lomod@dividend+2
  4312  00EA34  C037  F004         	movff	utoa@n+3,___lomod@dividend+3
  4313  00EA38  C038  F005         	movff	utoa@n+4,___lomod@dividend+4
  4314  00EA3C  C039  F006         	movff	utoa@n+5,___lomod@dividend+5
  4315  00EA40  C03A  F007         	movff	utoa@n+6,___lomod@dividend+6
  4316  00EA44  C03B  F008         	movff	utoa@n+7,___lomod@dividend+7
  4317  00EA48  0E0A               	movlw	10
  4318  00EA4A  6E09               	movwf	___lomod@divisor^0,c
  4319  00EA4C  0E00               	movlw	0
  4320  00EA4E  6E0A               	movwf	(___lomod@divisor+1)^0,c
  4321  00EA50  0E00               	movlw	0
  4322  00EA52  6E0B               	movwf	(___lomod@divisor+2)^0,c
  4323  00EA54  0E00               	movlw	0
  4324  00EA56  6E0C               	movwf	(___lomod@divisor+3)^0,c
  4325  00EA58  0E00               	movlw	0
  4326  00EA5A  6E0D               	movwf	(___lomod@divisor+4)^0,c
  4327  00EA5C  0E00               	movlw	0
  4328  00EA5E  6E0E               	movwf	(___lomod@divisor+5)^0,c
  4329  00EA60  0E00               	movlw	0
  4330  00EA62  6E0F               	movwf	(___lomod@divisor+6)^0,c
  4331  00EA64  0E00               	movlw	0
  4332  00EA66  6E10               	movwf	(___lomod@divisor+7)^0,c
  4333  00EA68  ECAC  F071         	call	___lomod	;wreg free
  4334  00EA6C  C001  F028         	movff	?___lomod,??_utoa
  4335  00EA70  C002  F029         	movff	?___lomod+1,??_utoa+1
  4336  00EA74  C003  F02A         	movff	?___lomod+2,??_utoa+2
  4337  00EA78  C004  F02B         	movff	?___lomod+3,??_utoa+3
  4338  00EA7C  C005  F02C         	movff	?___lomod+4,??_utoa+4
  4339  00EA80  C006  F02D         	movff	?___lomod+5,??_utoa+5
  4340  00EA84  C007  F02E         	movff	?___lomod+6,??_utoa+6
  4341  00EA88  C008  F02F         	movff	?___lomod+7,??_utoa+7
  4342  00EA8C  5028               	movf	??_utoa^0,w,c
  4343  00EA8E  0F30               	addlw	48
  4344  00EA90  6EDF               	movwf	indf2,c
  4345  00EA92                     
  4346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  4347  00EA92  0630               	decf	utoa@p^0,f,c
  4348  00EA94  A0D8               	btfss	status,0,c
  4349  00EA96  0631               	decf	(utoa@p+1)^0,f,c
  4350  00EA98                     
  4351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  4352  00EA98  0632               	decf	utoa@w^0,f,c
  4353  00EA9A  A0D8               	btfss	status,0,c
  4354  00EA9C  0633               	decf	(utoa@w+1)^0,f,c
  4355  00EA9E                     
  4356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  4357  00EA9E  C034  F001         	movff	utoa@n,___lodiv@dividend
  4358  00EAA2  C035  F002         	movff	utoa@n+1,___lodiv@dividend+1
  4359  00EAA6  C036  F003         	movff	utoa@n+2,___lodiv@dividend+2
  4360  00EAAA  C037  F004         	movff	utoa@n+3,___lodiv@dividend+3
  4361  00EAAE  C038  F005         	movff	utoa@n+4,___lodiv@dividend+4
  4362  00EAB2  C039  F006         	movff	utoa@n+5,___lodiv@dividend+5
  4363  00EAB6  C03A  F007         	movff	utoa@n+6,___lodiv@dividend+6
  4364  00EABA  C03B  F008         	movff	utoa@n+7,___lodiv@dividend+7
  4365  00EABE  0E0A               	movlw	10
  4366  00EAC0  6E09               	movwf	___lodiv@divisor^0,c
  4367  00EAC2  0E00               	movlw	0
  4368  00EAC4  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  4369  00EAC6  0E00               	movlw	0
  4370  00EAC8  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  4371  00EACA  0E00               	movlw	0
  4372  00EACC  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  4373  00EACE  0E00               	movlw	0
  4374  00EAD0  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  4375  00EAD2  0E00               	movlw	0
  4376  00EAD4  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  4377  00EAD6  0E00               	movlw	0
  4378  00EAD8  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  4379  00EADA  0E00               	movlw	0
  4380  00EADC  6E10               	movwf	(___lodiv@divisor+7)^0,c
  4381  00EADE  EC14  F072         	call	___lodiv	;wreg free
  4382  00EAE2  C001  F034         	movff	?___lodiv,utoa@n
  4383  00EAE6  C002  F035         	movff	?___lodiv+1,utoa@n+1
  4384  00EAEA  C003  F036         	movff	?___lodiv+2,utoa@n+2
  4385  00EAEE  C004  F037         	movff	?___lodiv+3,utoa@n+3
  4386  00EAF2  C005  F038         	movff	?___lodiv+4,utoa@n+4
  4387  00EAF6  C006  F039         	movff	?___lodiv+5,utoa@n+5
  4388  00EAFA  C007  F03A         	movff	?___lodiv+6,utoa@n+6
  4389  00EAFE  C008  F03B         	movff	?___lodiv+7,utoa@n+7
  4390  00EB02                     l2357:
  4391                           
  4392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4393  00EB02  503C               	movf	utoa@i^0,w,c
  4394  00EB04  103D               	iorwf	(utoa@i+1)^0,w,c
  4395  00EB06  B4D8               	btfsc	status,2,c
  4396  00EB08  EF88  F075         	goto	u1641
  4397  00EB0C  EF8A  F075         	goto	u1640
  4398  00EB10                     u1641:
  4399  00EB10  EFBB  F075         	goto	l2367
  4400  00EB14                     u1640:
  4401  00EB14  5034               	movf	utoa@n^0,w,c
  4402  00EB16  1035               	iorwf	(utoa@n+1)^0,w,c
  4403  00EB18  1036               	iorwf	(utoa@n+2)^0,w,c
  4404  00EB1A  1037               	iorwf	(utoa@n+3)^0,w,c
  4405  00EB1C  1038               	iorwf	(utoa@n+4)^0,w,c
  4406  00EB1E  1039               	iorwf	(utoa@n+5)^0,w,c
  4407  00EB20  103A               	iorwf	(utoa@n+6)^0,w,c
  4408  00EB22  103B               	iorwf	(utoa@n+7)^0,w,c
  4409  00EB24  A4D8               	btfss	status,2,c
  4410  00EB26  EF97  F075         	goto	u1651
  4411  00EB2A  EF99  F075         	goto	u1650
  4412  00EB2E                     u1651:
  4413  00EB2E  EF0B  F075         	goto	l2347
  4414  00EB32                     u1650:
  4415  00EB32  BE31               	btfsc	(utoa@p+1)^0,7,c
  4416  00EB34  EFA6  F075         	goto	u1660
  4417  00EB38  5031               	movf	(utoa@p+1)^0,w,c
  4418  00EB3A  E106               	bnz	u1661
  4419  00EB3C  0430               	decf	utoa@p^0,w,c
  4420  00EB3E  B0D8               	btfsc	status,0,c
  4421  00EB40  EFA4  F075         	goto	u1661
  4422  00EB44  EFA6  F075         	goto	u1660
  4423  00EB48                     u1661:
  4424  00EB48  EF0B  F075         	goto	l2347
  4425  00EB4C                     u1660:
  4426  00EB4C  BE33               	btfsc	(utoa@w+1)^0,7,c
  4427  00EB4E  EFB1  F075         	goto	u1671
  4428  00EB52  5033               	movf	(utoa@w+1)^0,w,c
  4429  00EB54  E108               	bnz	u1670
  4430  00EB56  0432               	decf	utoa@w^0,w,c
  4431  00EB58  A0D8               	btfss	status,0,c
  4432  00EB5A  EFB1  F075         	goto	u1671
  4433  00EB5E  EFB3  F075         	goto	u1670
  4434  00EB62                     u1671:
  4435  00EB62  EFBB  F075         	goto	l2367
  4436  00EB66                     u1670:
  4437  00EB66  0100               	movlb	0	; () banked
  4438  00EB68  B3C3               	btfsc	_flags& (0+255),1,b
  4439  00EB6A  EFB9  F075         	goto	u1681
  4440  00EB6E  EFBB  F075         	goto	u1680
  4441  00EB72                     u1681:
  4442  00EB72  EF0B  F075         	goto	l2347
  4443  00EB76                     u1680:
  4444  00EB76                     l2367:
  4445                           
  4446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  4447  00EB76  C01E  F013         	movff	utoa@fp,pad@fp
  4448  00EB7A  C01F  F014         	movff	utoa@fp+1,pad@fp+1
  4449  00EB7E  0ECF               	movlw	low _dbuf
  4450  00EB80  243C               	addwf	utoa@i^0,w,c
  4451  00EB82  6E15               	movwf	pad@buf^0,c
  4452  00EB84  0E00               	movlw	high _dbuf
  4453  00EB86  203D               	addwfc	(utoa@i+1)^0,w,c
  4454  00EB88  6E16               	movwf	(pad@buf+1)^0,c
  4455  00EB8A  C032  F017         	movff	utoa@w,pad@p
  4456  00EB8E  C033  F018         	movff	utoa@w+1,pad@p+1
  4457  00EB92  EC49  F071         	call	_pad	;wreg free
  4458  00EB96  C013  F01E         	movff	?_pad,?_utoa
  4459  00EB9A  C014  F01F         	movff	?_pad+1,?_utoa+1
  4460  00EB9E  0012               	return		;funcret
  4461  00EBA0                     __end_of_utoa:
  4462                           	opt callstack 0
  4463                           
  4464 ;; *************** function ___lomod *****************
  4465 ;; Defined at:
  4466 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lomod.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  dividend        8    0[COMRAM] unsigned long long 
  4469 ;;  divisor         8    8[COMRAM] unsigned long long 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  counter         1   16[COMRAM] unsigned char 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  8    0[COMRAM] unsigned long long 
  4474 ;; Registers used:
  4475 ;;		wreg, status,2, status,0
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4481 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;Total ram usage:       17 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_utoa
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text5
  4495  00E358                     __ptext5:
  4496                           	opt callstack 0
  4497  00E358                     ___lomod:
  4498                           	opt callstack 26
  4499  00E358  5009               	movf	___lomod@divisor^0,w,c
  4500  00E35A  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  4501  00E35C  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  4502  00E35E  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  4503  00E360  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  4504  00E362  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  4505  00E364  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  4506  00E366  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  4507  00E368  B4D8               	btfsc	status,2,c
  4508  00E36A  EFB9  F071         	goto	u1411
  4509  00E36E  EFBB  F071         	goto	u1410
  4510  00E372                     u1411:
  4511  00E372  EF03  F072         	goto	l911
  4512  00E376                     u1410:
  4513  00E376  0E01               	movlw	1
  4514  00E378  6E11               	movwf	___lomod@counter^0,c
  4515  00E37A  EFC9  F071         	goto	l2237
  4516  00E37E                     l2235:
  4517  00E37E  90D8               	bcf	status,0,c
  4518  00E380  3609               	rlcf	___lomod@divisor^0,f,c
  4519  00E382  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  4520  00E384  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  4521  00E386  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  4522  00E388  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  4523  00E38A  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  4524  00E38C  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  4525  00E38E  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  4526  00E390  2A11               	incf	___lomod@counter^0,f,c
  4527  00E392                     l2237:
  4528  00E392  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  4529  00E394  EFCE  F071         	goto	u1421
  4530  00E398  EFD0  F071         	goto	u1420
  4531  00E39C                     u1421:
  4532  00E39C  EFBF  F071         	goto	l2235
  4533  00E3A0                     u1420:
  4534  00E3A0                     l2239:
  4535  00E3A0  5009               	movf	___lomod@divisor^0,w,c
  4536  00E3A2  5C01               	subwf	___lomod@dividend^0,w,c
  4537  00E3A4  500A               	movf	(___lomod@divisor+1)^0,w,c
  4538  00E3A6  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  4539  00E3A8  500B               	movf	(___lomod@divisor+2)^0,w,c
  4540  00E3AA  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  4541  00E3AC  500C               	movf	(___lomod@divisor+3)^0,w,c
  4542  00E3AE  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  4543  00E3B0  500D               	movf	(___lomod@divisor+4)^0,w,c
  4544  00E3B2  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  4545  00E3B4  500E               	movf	(___lomod@divisor+5)^0,w,c
  4546  00E3B6  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  4547  00E3B8  500F               	movf	(___lomod@divisor+6)^0,w,c
  4548  00E3BA  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  4549  00E3BC  5010               	movf	(___lomod@divisor+7)^0,w,c
  4550  00E3BE  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  4551  00E3C0  A0D8               	btfss	status,0,c
  4552  00E3C2  EFE5  F071         	goto	u1431
  4553  00E3C6  EFE7  F071         	goto	u1430
  4554  00E3CA                     u1431:
  4555  00E3CA  EFF7  F071         	goto	l2243
  4556  00E3CE                     u1430:
  4557  00E3CE  5009               	movf	___lomod@divisor^0,w,c
  4558  00E3D0  5E01               	subwf	___lomod@dividend^0,f,c
  4559  00E3D2  500A               	movf	(___lomod@divisor+1)^0,w,c
  4560  00E3D4  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  4561  00E3D6  500B               	movf	(___lomod@divisor+2)^0,w,c
  4562  00E3D8  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  4563  00E3DA  500C               	movf	(___lomod@divisor+3)^0,w,c
  4564  00E3DC  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  4565  00E3DE  500D               	movf	(___lomod@divisor+4)^0,w,c
  4566  00E3E0  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  4567  00E3E2  500E               	movf	(___lomod@divisor+5)^0,w,c
  4568  00E3E4  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  4569  00E3E6  500F               	movf	(___lomod@divisor+6)^0,w,c
  4570  00E3E8  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  4571  00E3EA  5010               	movf	(___lomod@divisor+7)^0,w,c
  4572  00E3EC  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  4573  00E3EE                     l2243:
  4574  00E3EE  90D8               	bcf	status,0,c
  4575  00E3F0  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  4576  00E3F2  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  4577  00E3F4  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  4578  00E3F6  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  4579  00E3F8  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  4580  00E3FA  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  4581  00E3FC  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  4582  00E3FE  3209               	rrcf	___lomod@divisor^0,f,c
  4583  00E400  2E11               	decfsz	___lomod@counter^0,f,c
  4584  00E402  EFD0  F071         	goto	l2239
  4585  00E406                     l911:
  4586  00E406  C001  F001         	movff	___lomod@dividend,?___lomod
  4587  00E40A  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  4588  00E40E  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  4589  00E412  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  4590  00E416  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  4591  00E41A  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  4592  00E41E  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  4593  00E422  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  4594  00E426  0012               	return		;funcret
  4595  00E428                     __end_of___lomod:
  4596                           	opt callstack 0
  4597                           
  4598 ;; *************** function ___lodiv *****************
  4599 ;; Defined at:
  4600 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\lodiv.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  dividend        8    0[COMRAM] unsigned long long 
  4603 ;;  divisor         8    8[COMRAM] unsigned long long 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  quotient        8   16[COMRAM] unsigned long long 
  4606 ;;  counter         1   24[COMRAM] unsigned char 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  8    0[COMRAM] unsigned long long 
  4609 ;; Registers used:
  4610 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4616 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;Total ram usage:       25 bytes
  4621 ;; Hardware stack levels used:    1
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_utoa
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text6
  4630  00E428                     __ptext6:
  4631                           	opt callstack 0
  4632  00E428                     ___lodiv:
  4633                           	opt callstack 26
  4634  00E428  EE20  F011         	lfsr	2,___lodiv@quotient
  4635  00E42C  0E07               	movlw	7
  4636  00E42E                     u1371:
  4637  00E42E  6ADE               	clrf	postinc2,c
  4638  00E430  06E8               	decf	wreg,f,c
  4639  00E432  E2FD               	bc	u1371
  4640  00E434  5009               	movf	___lodiv@divisor^0,w,c
  4641  00E436  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  4642  00E438  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  4643  00E43A  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  4644  00E43C  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  4645  00E43E  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  4646  00E440  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  4647  00E442  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  4648  00E444  B4D8               	btfsc	status,2,c
  4649  00E446  EF27  F072         	goto	u1381
  4650  00E44A  EF29  F072         	goto	u1380
  4651  00E44E                     u1381:
  4652  00E44E  EF7B  F072         	goto	l901
  4653  00E452                     u1380:
  4654  00E452  0E01               	movlw	1
  4655  00E454  6E19               	movwf	___lodiv@counter^0,c
  4656  00E456  EF37  F072         	goto	l2217
  4657  00E45A                     l2215:
  4658  00E45A  90D8               	bcf	status,0,c
  4659  00E45C  3609               	rlcf	___lodiv@divisor^0,f,c
  4660  00E45E  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  4661  00E460  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  4662  00E462  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  4663  00E464  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  4664  00E466  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  4665  00E468  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  4666  00E46A  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  4667  00E46C  2A19               	incf	___lodiv@counter^0,f,c
  4668  00E46E                     l2217:
  4669  00E46E  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  4670  00E470  EF3C  F072         	goto	u1391
  4671  00E474  EF3E  F072         	goto	u1390
  4672  00E478                     u1391:
  4673  00E478  EF2D  F072         	goto	l2215
  4674  00E47C                     u1390:
  4675  00E47C                     l2219:
  4676  00E47C  90D8               	bcf	status,0,c
  4677  00E47E  3611               	rlcf	___lodiv@quotient^0,f,c
  4678  00E480  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  4679  00E482  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  4680  00E484  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  4681  00E486  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  4682  00E488  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  4683  00E48A  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  4684  00E48C  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  4685  00E48E  5009               	movf	___lodiv@divisor^0,w,c
  4686  00E490  5C01               	subwf	___lodiv@dividend^0,w,c
  4687  00E492  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4688  00E494  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  4689  00E496  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4690  00E498  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  4691  00E49A  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4692  00E49C  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  4693  00E49E  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4694  00E4A0  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  4695  00E4A2  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4696  00E4A4  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  4697  00E4A6  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4698  00E4A8  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  4699  00E4AA  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4700  00E4AC  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  4701  00E4AE  A0D8               	btfss	status,0,c
  4702  00E4B0  EF5C  F072         	goto	u1401
  4703  00E4B4  EF5E  F072         	goto	u1400
  4704  00E4B8                     u1401:
  4705  00E4B8  EF6F  F072         	goto	l2227
  4706  00E4BC                     u1400:
  4707  00E4BC  5009               	movf	___lodiv@divisor^0,w,c
  4708  00E4BE  5E01               	subwf	___lodiv@dividend^0,f,c
  4709  00E4C0  500A               	movf	(___lodiv@divisor+1)^0,w,c
  4710  00E4C2  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  4711  00E4C4  500B               	movf	(___lodiv@divisor+2)^0,w,c
  4712  00E4C6  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  4713  00E4C8  500C               	movf	(___lodiv@divisor+3)^0,w,c
  4714  00E4CA  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  4715  00E4CC  500D               	movf	(___lodiv@divisor+4)^0,w,c
  4716  00E4CE  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  4717  00E4D0  500E               	movf	(___lodiv@divisor+5)^0,w,c
  4718  00E4D2  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  4719  00E4D4  500F               	movf	(___lodiv@divisor+6)^0,w,c
  4720  00E4D6  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  4721  00E4D8  5010               	movf	(___lodiv@divisor+7)^0,w,c
  4722  00E4DA  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  4723  00E4DC  8011               	bsf	___lodiv@quotient^0,0,c
  4724  00E4DE                     l2227:
  4725  00E4DE  90D8               	bcf	status,0,c
  4726  00E4E0  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  4727  00E4E2  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  4728  00E4E4  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  4729  00E4E6  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  4730  00E4E8  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  4731  00E4EA  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  4732  00E4EC  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  4733  00E4EE  3209               	rrcf	___lodiv@divisor^0,f,c
  4734  00E4F0  2E19               	decfsz	___lodiv@counter^0,f,c
  4735  00E4F2  EF3E  F072         	goto	l2219
  4736  00E4F6                     l901:
  4737  00E4F6  C011  F001         	movff	___lodiv@quotient,?___lodiv
  4738  00E4FA  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  4739  00E4FE  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  4740  00E502  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  4741  00E506  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  4742  00E50A  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  4743  00E50E  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  4744  00E512  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  4745  00E516  0012               	return		;funcret
  4746  00E518                     __end_of___lodiv:
  4747                           	opt callstack 0
  4748                           
  4749 ;; *************** function _dtoa *****************
  4750 ;; Defined at:
  4751 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4754 ;;		 -> NULL(0), 
  4755 ;;  d               8   31[COMRAM] long long 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  n               8   55[COMRAM] long long 
  4758 ;;  i               2   63[COMRAM] int 
  4759 ;;  s               2   53[COMRAM] int 
  4760 ;;  w               2   51[COMRAM] int 
  4761 ;;  p               2   49[COMRAM] int 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  2   29[COMRAM] int 
  4764 ;; Registers used:
  4765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4771 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;Total ram usage:       36 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    5
  4778 ;; This function calls:
  4779 ;;		___aodiv
  4780 ;;		___aomod
  4781 ;;		_abs
  4782 ;;		_pad
  4783 ;; This function is called by:
  4784 ;;		_vfpfcnvrt
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text7
  4789  00EBA0                     __ptext7:
  4790                           	opt callstack 0
  4791  00EBA0                     _dtoa:
  4792                           	opt callstack 22
  4793  00EBA0                     
  4794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.10\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4795  00EBA0  C020  F038         	movff	dtoa@d,dtoa@n
  4796  00EBA4  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  4797  00EBA8  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  4798  00EBAC  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  4799  00EBB0  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  4800  00EBB4  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  4801  00EBB8  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  4802  00EBBC  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  4803  00EBC0                     
  4804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  4805  00EBC0  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  4806  00EBC2  EFE5  F075         	goto	u1471
  4807  00EBC6  EFE8  F075         	goto	u1470
  4808  00EBCA                     u1471:
  4809  00EBCA  0E01               	movlw	1
  4810  00EBCC  EFE9  F075         	goto	u1480
  4811  00EBD0                     u1470:
  4812  00EBD0  0E00               	movlw	0
  4813  00EBD2                     u1480:
  4814  00EBD2  6E36               	movwf	dtoa@s^0,c
  4815  00EBD4  6A37               	clrf	(dtoa@s+1)^0,c
  4816                           
  4817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  4818  00EBD6  5036               	movf	dtoa@s^0,w,c
  4819  00EBD8  1037               	iorwf	(dtoa@s+1)^0,w,c
  4820  00EBDA  B4D8               	btfsc	status,2,c
  4821  00EBDC  EFF2  F075         	goto	u1491
  4822  00EBE0  EFF4  F075         	goto	u1490
  4823  00EBE4                     u1491:
  4824  00EBE4  EF04  F076         	goto	l2279
  4825  00EBE8                     u1490:
  4826  00EBE8                     
  4827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  4828  00EBE8  1E3F               	comf	(dtoa@n+7)^0,f,c
  4829  00EBEA  1E3E               	comf	(dtoa@n+6)^0,f,c
  4830  00EBEC  1E3D               	comf	(dtoa@n+5)^0,f,c
  4831  00EBEE  1E3C               	comf	(dtoa@n+4)^0,f,c
  4832  00EBF0  1E3B               	comf	(dtoa@n+3)^0,f,c
  4833  00EBF2  1E3A               	comf	(dtoa@n+2)^0,f,c
  4834  00EBF4  1E39               	comf	(dtoa@n+1)^0,f,c
  4835  00EBF6  6C38               	negf	dtoa@n^0,c
  4836  00EBF8  0E00               	movlw	0
  4837  00EBFA  2239               	addwfc	(dtoa@n+1)^0,f,c
  4838  00EBFC  223A               	addwfc	(dtoa@n+2)^0,f,c
  4839  00EBFE  223B               	addwfc	(dtoa@n+3)^0,f,c
  4840  00EC00  223C               	addwfc	(dtoa@n+4)^0,f,c
  4841  00EC02  223D               	addwfc	(dtoa@n+5)^0,f,c
  4842  00EC04  223E               	addwfc	(dtoa@n+6)^0,f,c
  4843  00EC06  223F               	addwfc	(dtoa@n+7)^0,f,c
  4844  00EC08                     l2279:
  4845                           
  4846                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  4847  00EC08  0100               	movlb	0	; () banked
  4848  00EC0A  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  4849  00EC0C  EF0A  F076         	goto	u1501
  4850  00EC10  EF0C  F076         	goto	u1500
  4851  00EC14                     u1501:
  4852  00EC14  EF0D  F076         	goto	l2283
  4853  00EC18                     u1500:
  4854  00EC18                     
  4855                           ; BSR set to: 0
  4856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  4857  00EC18  93C3               	bcf	_flags& (0+255),1,b
  4858  00EC1A                     l2283:
  4859                           
  4860                           ; BSR set to: 0
  4861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  4862  00EC1A  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  4863  00EC1C  EF1A  F076         	goto	u1510
  4864  00EC20  51C2               	movf	(_prec+1)& (0+255),w,b
  4865  00EC22  E106               	bnz	u1511
  4866  00EC24  05C1               	decf	_prec& (0+255),w,b
  4867  00EC26  B0D8               	btfsc	status,0,c
  4868  00EC28  EF18  F076         	goto	u1511
  4869  00EC2C  EF1A  F076         	goto	u1510
  4870  00EC30                     u1511:
  4871  00EC30  EF20  F076         	goto	l399
  4872  00EC34                     u1510:
  4873  00EC34                     
  4874                           ; BSR set to: 0
  4875  00EC34  0E00               	movlw	0
  4876  00EC36  6E33               	movwf	(dtoa@p+1)^0,c
  4877  00EC38  0E01               	movlw	1
  4878  00EC3A  6E32               	movwf	dtoa@p^0,c
  4879  00EC3C  EF24  F076         	goto	l401
  4880  00EC40                     l399:
  4881                           
  4882                           ; BSR set to: 0
  4883  00EC40  C0C1  F032         	movff	_prec,dtoa@p
  4884  00EC44  C0C2  F033         	movff	_prec+1,dtoa@p+1
  4885  00EC48                     l401:
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  4889  00EC48  C0BF  F034         	movff	_width,dtoa@w
  4890  00EC4C  C0C0  F035         	movff	_width+1,dtoa@w+1
  4891  00EC50                     
  4892                           ; BSR set to: 0
  4893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  4894  00EC50  5036               	movf	dtoa@s^0,w,c
  4895  00EC52  1037               	iorwf	(dtoa@s+1)^0,w,c
  4896  00EC54  A4D8               	btfss	status,2,c
  4897  00EC56  EF2F  F076         	goto	u1521
  4898  00EC5A  EF31  F076         	goto	u1520
  4899  00EC5E                     u1521:
  4900  00EC5E  EF38  F076         	goto	l2291
  4901  00EC62                     u1520:
  4902  00EC62                     
  4903                           ; BSR set to: 0
  4904  00EC62  A5C3               	btfss	_flags& (0+255),2,b
  4905  00EC64  EF36  F076         	goto	u1531
  4906  00EC68  EF38  F076         	goto	u1530
  4907  00EC6C                     u1531:
  4908  00EC6C  EF3B  F076         	goto	l2293
  4909  00EC70                     u1530:
  4910  00EC70                     l2291:
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  4914  00EC70  0634               	decf	dtoa@w^0,f,c
  4915  00EC72  A0D8               	btfss	status,0,c
  4916  00EC74  0635               	decf	(dtoa@w+1)^0,f,c
  4917  00EC76                     l2293:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  4921  00EC76  0E00               	movlw	0
  4922  00EC78  6E41               	movwf	(dtoa@i+1)^0,c
  4923  00EC7A  0E1F               	movlw	31
  4924  00EC7C  6E40               	movwf	dtoa@i^0,c
  4925  00EC7E                     
  4926                           ; BSR set to: 0
  4927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  4928  00EC7E  0E00               	movlw	0
  4929  00EC80  6FEE               	movwf	(_dbuf+31)& (0+255),b
  4930                           
  4931                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4932  00EC82  EFBF  F076         	goto	l2307
  4933  00EC86                     l2297:
  4934                           
  4935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  4936  00EC86  0640               	decf	dtoa@i^0,f,c
  4937  00EC88  A0D8               	btfss	status,0,c
  4938  00EC8A  0641               	decf	(dtoa@i+1)^0,f,c
  4939  00EC8C                     
  4940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  4941  00EC8C  0ECF               	movlw	low _dbuf
  4942  00EC8E  2440               	addwf	dtoa@i^0,w,c
  4943  00EC90  6ED9               	movwf	fsr2l,c
  4944  00EC92  0E00               	movlw	high _dbuf
  4945  00EC94  2041               	addwfc	(dtoa@i+1)^0,w,c
  4946  00EC96  6EDA               	movwf	fsr2h,c
  4947  00EC98  C038  F001         	movff	dtoa@n,___aomod@dividend
  4948  00EC9C  C039  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4949  00ECA0  C03A  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4950  00ECA4  C03B  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4951  00ECA8  C03C  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4952  00ECAC  C03D  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4953  00ECB0  C03E  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4954  00ECB4  C03F  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4955  00ECB8  0E0A               	movlw	10
  4956  00ECBA  6E09               	movwf	___aomod@divisor^0,c
  4957  00ECBC  0E00               	movlw	0
  4958  00ECBE  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4959  00ECC0  0E00               	movlw	0
  4960  00ECC2  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4961  00ECC4  0E00               	movlw	0
  4962  00ECC6  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4963  00ECC8  0E00               	movlw	0
  4964  00ECCA  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4965  00ECCC  0E00               	movlw	0
  4966  00ECCE  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4967  00ECD0  0E00               	movlw	0
  4968  00ECD2  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4969  00ECD4  0E00               	movlw	0
  4970  00ECD6  6E10               	movwf	(___aomod@divisor+7)^0,c
  4971  00ECD8  EC8C  F072         	call	___aomod	;wreg free
  4972  00ECDC  C001  F028         	movff	?___aomod,??_dtoa
  4973  00ECE0  C002  F029         	movff	?___aomod+1,??_dtoa+1
  4974  00ECE4  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  4975  00ECE8  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  4976  00ECEC  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  4977  00ECF0  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  4978  00ECF4  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  4979  00ECF8  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  4980  00ECFC  C028  F013         	movff	??_dtoa,abs@a
  4981  00ED00  C02A  F014         	movff	??_dtoa+2,abs@a+1
  4982  00ED04  EC34  F070         	call	_abs	;wreg free
  4983  00ED08  5013               	movf	?_abs^0,w,c
  4984  00ED0A  0F30               	addlw	48
  4985  00ED0C  6EDF               	movwf	indf2,c
  4986  00ED0E                     
  4987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  4988  00ED0E  0632               	decf	dtoa@p^0,f,c
  4989  00ED10  A0D8               	btfss	status,0,c
  4990  00ED12  0633               	decf	(dtoa@p+1)^0,f,c
  4991  00ED14                     
  4992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  4993  00ED14  0634               	decf	dtoa@w^0,f,c
  4994  00ED16  A0D8               	btfss	status,0,c
  4995  00ED18  0635               	decf	(dtoa@w+1)^0,f,c
  4996  00ED1A                     
  4997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  4998  00ED1A  C038  F001         	movff	dtoa@n,___aodiv@dividend
  4999  00ED1E  C039  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5000  00ED22  C03A  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5001  00ED26  C03B  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5002  00ED2A  C03C  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5003  00ED2E  C03D  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5004  00ED32  C03E  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5005  00ED36  C03F  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5006  00ED3A  0E0A               	movlw	10
  5007  00ED3C  6E09               	movwf	___aodiv@divisor^0,c
  5008  00ED3E  0E00               	movlw	0
  5009  00ED40  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5010  00ED42  0E00               	movlw	0
  5011  00ED44  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5012  00ED46  0E00               	movlw	0
  5013  00ED48  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5014  00ED4A  0E00               	movlw	0
  5015  00ED4C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5016  00ED4E  0E00               	movlw	0
  5017  00ED50  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5018  00ED52  0E00               	movlw	0
  5019  00ED54  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5020  00ED56  0E00               	movlw	0
  5021  00ED58  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5022  00ED5A  EC3E  F073         	call	___aodiv	;wreg free
  5023  00ED5E  C001  F038         	movff	?___aodiv,dtoa@n
  5024  00ED62  C002  F039         	movff	?___aodiv+1,dtoa@n+1
  5025  00ED66  C003  F03A         	movff	?___aodiv+2,dtoa@n+2
  5026  00ED6A  C004  F03B         	movff	?___aodiv+3,dtoa@n+3
  5027  00ED6E  C005  F03C         	movff	?___aodiv+4,dtoa@n+4
  5028  00ED72  C006  F03D         	movff	?___aodiv+5,dtoa@n+5
  5029  00ED76  C007  F03E         	movff	?___aodiv+6,dtoa@n+6
  5030  00ED7A  C008  F03F         	movff	?___aodiv+7,dtoa@n+7
  5031  00ED7E                     l2307:
  5032                           
  5033                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5034  00ED7E  BE41               	btfsc	(dtoa@i+1)^0,7,c
  5035  00ED80  EFCA  F076         	goto	u1541
  5036  00ED84  5041               	movf	(dtoa@i+1)^0,w,c
  5037  00ED86  E108               	bnz	u1540
  5038  00ED88  0440               	decf	dtoa@i^0,w,c
  5039  00ED8A  A0D8               	btfss	status,0,c
  5040  00ED8C  EFCA  F076         	goto	u1541
  5041  00ED90  EFCC  F076         	goto	u1540
  5042  00ED94                     u1541:
  5043  00ED94  EFFD  F076         	goto	l2317
  5044  00ED98                     u1540:
  5045  00ED98  5038               	movf	dtoa@n^0,w,c
  5046  00ED9A  1039               	iorwf	(dtoa@n+1)^0,w,c
  5047  00ED9C  103A               	iorwf	(dtoa@n+2)^0,w,c
  5048  00ED9E  103B               	iorwf	(dtoa@n+3)^0,w,c
  5049  00EDA0  103C               	iorwf	(dtoa@n+4)^0,w,c
  5050  00EDA2  103D               	iorwf	(dtoa@n+5)^0,w,c
  5051  00EDA4  103E               	iorwf	(dtoa@n+6)^0,w,c
  5052  00EDA6  103F               	iorwf	(dtoa@n+7)^0,w,c
  5053  00EDA8  A4D8               	btfss	status,2,c
  5054  00EDAA  EFD9  F076         	goto	u1551
  5055  00EDAE  EFDB  F076         	goto	u1550
  5056  00EDB2                     u1551:
  5057  00EDB2  EF43  F076         	goto	l2297
  5058  00EDB6                     u1550:
  5059  00EDB6  BE33               	btfsc	(dtoa@p+1)^0,7,c
  5060  00EDB8  EFE8  F076         	goto	u1560
  5061  00EDBC  5033               	movf	(dtoa@p+1)^0,w,c
  5062  00EDBE  E106               	bnz	u1561
  5063  00EDC0  0432               	decf	dtoa@p^0,w,c
  5064  00EDC2  B0D8               	btfsc	status,0,c
  5065  00EDC4  EFE6  F076         	goto	u1561
  5066  00EDC8  EFE8  F076         	goto	u1560
  5067  00EDCC                     u1561:
  5068  00EDCC  EF43  F076         	goto	l2297
  5069  00EDD0                     u1560:
  5070  00EDD0  BE35               	btfsc	(dtoa@w+1)^0,7,c
  5071  00EDD2  EFF3  F076         	goto	u1571
  5072  00EDD6  5035               	movf	(dtoa@w+1)^0,w,c
  5073  00EDD8  E108               	bnz	u1570
  5074  00EDDA  0434               	decf	dtoa@w^0,w,c
  5075  00EDDC  A0D8               	btfss	status,0,c
  5076  00EDDE  EFF3  F076         	goto	u1571
  5077  00EDE2  EFF5  F076         	goto	u1570
  5078  00EDE6                     u1571:
  5079  00EDE6  EFFD  F076         	goto	l2317
  5080  00EDEA                     u1570:
  5081  00EDEA  0100               	movlb	0	; () banked
  5082  00EDEC  B3C3               	btfsc	_flags& (0+255),1,b
  5083  00EDEE  EFFB  F076         	goto	u1581
  5084  00EDF2  EFFD  F076         	goto	u1580
  5085  00EDF6                     u1581:
  5086  00EDF6  EF43  F076         	goto	l2297
  5087  00EDFA                     u1580:
  5088  00EDFA                     l2317:
  5089                           
  5090                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  5091  00EDFA  5036               	movf	dtoa@s^0,w,c
  5092  00EDFC  1037               	iorwf	(dtoa@s+1)^0,w,c
  5093  00EDFE  A4D8               	btfss	status,2,c
  5094  00EE00  EF04  F077         	goto	u1591
  5095  00EE04  EF06  F077         	goto	u1590
  5096  00EE08                     u1591:
  5097  00EE08  EF0E  F077         	goto	l2321
  5098  00EE0C                     u1590:
  5099  00EE0C  0100               	movlb	0	; () banked
  5100  00EE0E  A5C3               	btfss	_flags& (0+255),2,b
  5101  00EE10  EF0C  F077         	goto	u1601
  5102  00EE14  EF0E  F077         	goto	u1600
  5103  00EE18                     u1601:
  5104  00EE18  EF2C  F077         	goto	l2331
  5105  00EE1C                     u1600:
  5106  00EE1C                     l2321:
  5107                           
  5108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  5109  00EE1C  0640               	decf	dtoa@i^0,f,c
  5110  00EE1E  A0D8               	btfss	status,0,c
  5111  00EE20  0641               	decf	(dtoa@i+1)^0,f,c
  5112  00EE22                     
  5113                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  5114  00EE22  5036               	movf	dtoa@s^0,w,c
  5115  00EE24  1037               	iorwf	(dtoa@s+1)^0,w,c
  5116  00EE26  A4D8               	btfss	status,2,c
  5117  00EE28  EF18  F077         	goto	u1611
  5118  00EE2C  EF1A  F077         	goto	u1610
  5119  00EE30                     u1611:
  5120  00EE30  EF20  F077         	goto	l2327
  5121  00EE34                     u1610:
  5122  00EE34  0E00               	movlw	0
  5123  00EE36  6E31               	movwf	(_dtoa$1036+1)^0,c
  5124  00EE38  0E2B               	movlw	43
  5125  00EE3A  6E30               	movwf	_dtoa$1036^0,c
  5126  00EE3C  EF24  F077         	goto	l2329
  5127  00EE40                     l2327:
  5128  00EE40  0E00               	movlw	0
  5129  00EE42  6E31               	movwf	(_dtoa$1036+1)^0,c
  5130  00EE44  0E2D               	movlw	45
  5131  00EE46  6E30               	movwf	_dtoa$1036^0,c
  5132  00EE48                     l2329:
  5133  00EE48  0ECF               	movlw	low _dbuf
  5134  00EE4A  2440               	addwf	dtoa@i^0,w,c
  5135  00EE4C  6ED9               	movwf	fsr2l,c
  5136  00EE4E  0E00               	movlw	high _dbuf
  5137  00EE50  2041               	addwfc	(dtoa@i+1)^0,w,c
  5138  00EE52  6EDA               	movwf	fsr2h,c
  5139  00EE54  C030  FFDF         	movff	_dtoa$1036,indf2
  5140  00EE58                     l2331:
  5141                           
  5142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  5143  00EE58  C01E  F013         	movff	dtoa@fp,pad@fp
  5144  00EE5C  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  5145  00EE60  0ECF               	movlw	low _dbuf
  5146  00EE62  2440               	addwf	dtoa@i^0,w,c
  5147  00EE64  6E15               	movwf	pad@buf^0,c
  5148  00EE66  0E00               	movlw	high _dbuf
  5149  00EE68  2041               	addwfc	(dtoa@i+1)^0,w,c
  5150  00EE6A  6E16               	movwf	(pad@buf+1)^0,c
  5151  00EE6C  C034  F017         	movff	dtoa@w,pad@p
  5152  00EE70  C035  F018         	movff	dtoa@w+1,pad@p+1
  5153  00EE74  EC49  F071         	call	_pad	;wreg free
  5154  00EE78  C013  F01E         	movff	?_pad,?_dtoa
  5155  00EE7C  C014  F01F         	movff	?_pad+1,?_dtoa+1
  5156  00EE80  0012               	return		;funcret
  5157  00EE82                     __end_of_dtoa:
  5158                           	opt callstack 0
  5159                           
  5160 ;; *************** function _abs *****************
  5161 ;; Defined at:
  5162 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\abs.c"
  5163 ;; Parameters:    Size  Location     Type
  5164 ;;  a               2   18[COMRAM] int 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;		None
  5167 ;; Return value:  Size  Location     Type
  5168 ;;                  2   18[COMRAM] int 
  5169 ;; Registers used:
  5170 ;;		wreg, status,2, status,0
  5171 ;; Tracked objects:
  5172 ;;		On entry : 0/0
  5173 ;;		On exit  : 0/0
  5174 ;;		Unchanged: 0/0
  5175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5180 ;;Total ram usage:        4 bytes
  5181 ;; Hardware stack levels used:    1
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_dtoa
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text8
  5190  00E068                     __ptext8:
  5191                           	opt callstack 0
  5192  00E068                     _abs:
  5193                           	opt callstack 26
  5194  00E068  BE14               	btfsc	(abs@a+1)^0,7,c
  5195  00E06A  EF41  F070         	goto	u1210
  5196  00E06E  5014               	movf	(abs@a+1)^0,w,c
  5197  00E070  E106               	bnz	u1211
  5198  00E072  0413               	decf	abs@a^0,w,c
  5199  00E074  B0D8               	btfsc	status,0,c
  5200  00E076  EF3F  F070         	goto	u1211
  5201  00E07A  EF41  F070         	goto	u1210
  5202  00E07E                     u1211:
  5203  00E07E  EF4F  F070         	goto	l1138
  5204  00E082                     u1210:
  5205  00E082  C013  F015         	movff	abs@a,??_abs
  5206  00E086  C014  F016         	movff	abs@a+1,??_abs+1
  5207  00E08A  1E15               	comf	??_abs^0,f,c
  5208  00E08C  1E16               	comf	(??_abs+1)^0,f,c
  5209  00E08E  4A15               	infsnz	??_abs^0,f,c
  5210  00E090  2A16               	incf	(??_abs+1)^0,f,c
  5211  00E092  C015  F013         	movff	??_abs,?_abs
  5212  00E096  C016  F014         	movff	??_abs+1,?_abs+1
  5213  00E09A  EF53  F070         	goto	l1141
  5214  00E09E                     l1138:
  5215  00E09E  C013  F013         	movff	abs@a,?_abs
  5216  00E0A2  C014  F014         	movff	abs@a+1,?_abs+1
  5217  00E0A6                     l1141:
  5218  00E0A6  0012               	return		;funcret
  5219  00E0A8                     __end_of_abs:
  5220                           	opt callstack 0
  5221                           
  5222 ;; *************** function ___aomod *****************
  5223 ;; Defined at:
  5224 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aomod.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  dividend        8    0[COMRAM] long long 
  5227 ;;  divisor         8    8[COMRAM] long long 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  sign            1   17[COMRAM] unsigned char 
  5230 ;;  counter         1   16[COMRAM] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  8    0[COMRAM] long long 
  5233 ;; Registers used:
  5234 ;;		wreg, status,2, status,0
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5240 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5243 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;Total ram usage:       18 bytes
  5245 ;; Hardware stack levels used:    1
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_dtoa
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           	psect	text9
  5254  00E518                     __ptext9:
  5255                           	opt callstack 0
  5256  00E518                     ___aomod:
  5257                           	opt callstack 26
  5258  00E518  0E00               	movlw	0
  5259  00E51A  6E12               	movwf	___aomod@sign^0,c
  5260  00E51C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5261  00E51E  EF95  F072         	goto	u1310
  5262  00E522  EF93  F072         	goto	u1311
  5263  00E526                     u1311:
  5264  00E526  EFA7  F072         	goto	l2181
  5265  00E52A                     u1310:
  5266  00E52A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5267  00E52C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5268  00E52E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5269  00E530  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5270  00E532  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5271  00E534  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5272  00E536  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5273  00E538  6C01               	negf	___aomod@dividend^0,c
  5274  00E53A  0E00               	movlw	0
  5275  00E53C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5276  00E53E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5277  00E540  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5278  00E542  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5279  00E544  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5280  00E546  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5281  00E548  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5282  00E54A  0E01               	movlw	1
  5283  00E54C  6E12               	movwf	___aomod@sign^0,c
  5284  00E54E                     l2181:
  5285  00E54E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5286  00E550  EFAE  F072         	goto	u1320
  5287  00E554  EFAC  F072         	goto	u1321
  5288  00E558                     u1321:
  5289  00E558  EFBE  F072         	goto	l2185
  5290  00E55C                     u1320:
  5291  00E55C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5292  00E55E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5293  00E560  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5294  00E562  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5295  00E564  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5296  00E566  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5297  00E568  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5298  00E56A  6C09               	negf	___aomod@divisor^0,c
  5299  00E56C  0E00               	movlw	0
  5300  00E56E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5301  00E570  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5302  00E572  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5303  00E574  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5304  00E576  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5305  00E578  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5306  00E57A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5307  00E57C                     l2185:
  5308  00E57C  5009               	movf	___aomod@divisor^0,w,c
  5309  00E57E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5310  00E580  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5311  00E582  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5312  00E584  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5313  00E586  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5314  00E588  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5315  00E58A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5316  00E58C  B4D8               	btfsc	status,2,c
  5317  00E58E  EFCB  F072         	goto	u1331
  5318  00E592  EFCD  F072         	goto	u1330
  5319  00E596                     u1331:
  5320  00E596  EF15  F073         	goto	l2201
  5321  00E59A                     u1330:
  5322  00E59A  0E01               	movlw	1
  5323  00E59C  6E11               	movwf	___aomod@counter^0,c
  5324  00E59E  EFDB  F072         	goto	l2191
  5325  00E5A2                     l2189:
  5326  00E5A2  90D8               	bcf	status,0,c
  5327  00E5A4  3609               	rlcf	___aomod@divisor^0,f,c
  5328  00E5A6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5329  00E5A8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5330  00E5AA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5331  00E5AC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5332  00E5AE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5333  00E5B0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5334  00E5B2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5335  00E5B4  2A11               	incf	___aomod@counter^0,f,c
  5336  00E5B6                     l2191:
  5337  00E5B6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5338  00E5B8  EFE0  F072         	goto	u1341
  5339  00E5BC  EFE2  F072         	goto	u1340
  5340  00E5C0                     u1341:
  5341  00E5C0  EFD1  F072         	goto	l2189
  5342  00E5C4                     u1340:
  5343  00E5C4                     l2193:
  5344  00E5C4  5009               	movf	___aomod@divisor^0,w,c
  5345  00E5C6  5C01               	subwf	___aomod@dividend^0,w,c
  5346  00E5C8  500A               	movf	(___aomod@divisor+1)^0,w,c
  5347  00E5CA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5348  00E5CC  500B               	movf	(___aomod@divisor+2)^0,w,c
  5349  00E5CE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5350  00E5D0  500C               	movf	(___aomod@divisor+3)^0,w,c
  5351  00E5D2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5352  00E5D4  500D               	movf	(___aomod@divisor+4)^0,w,c
  5353  00E5D6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5354  00E5D8  500E               	movf	(___aomod@divisor+5)^0,w,c
  5355  00E5DA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5356  00E5DC  500F               	movf	(___aomod@divisor+6)^0,w,c
  5357  00E5DE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5358  00E5E0  5010               	movf	(___aomod@divisor+7)^0,w,c
  5359  00E5E2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5360  00E5E4  A0D8               	btfss	status,0,c
  5361  00E5E6  EFF7  F072         	goto	u1351
  5362  00E5EA  EFF9  F072         	goto	u1350
  5363  00E5EE                     u1351:
  5364  00E5EE  EF09  F073         	goto	l2197
  5365  00E5F2                     u1350:
  5366  00E5F2  5009               	movf	___aomod@divisor^0,w,c
  5367  00E5F4  5E01               	subwf	___aomod@dividend^0,f,c
  5368  00E5F6  500A               	movf	(___aomod@divisor+1)^0,w,c
  5369  00E5F8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5370  00E5FA  500B               	movf	(___aomod@divisor+2)^0,w,c
  5371  00E5FC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5372  00E5FE  500C               	movf	(___aomod@divisor+3)^0,w,c
  5373  00E600  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5374  00E602  500D               	movf	(___aomod@divisor+4)^0,w,c
  5375  00E604  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5376  00E606  500E               	movf	(___aomod@divisor+5)^0,w,c
  5377  00E608  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5378  00E60A  500F               	movf	(___aomod@divisor+6)^0,w,c
  5379  00E60C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5380  00E60E  5010               	movf	(___aomod@divisor+7)^0,w,c
  5381  00E610  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5382  00E612                     l2197:
  5383  00E612  90D8               	bcf	status,0,c
  5384  00E614  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5385  00E616  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5386  00E618  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5387  00E61A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5388  00E61C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5389  00E61E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5390  00E620  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5391  00E622  3209               	rrcf	___aomod@divisor^0,f,c
  5392  00E624  2E11               	decfsz	___aomod@counter^0,f,c
  5393  00E626  EFE2  F072         	goto	l2193
  5394  00E62A                     l2201:
  5395  00E62A  5012               	movf	___aomod@sign^0,w,c
  5396  00E62C  B4D8               	btfsc	status,2,c
  5397  00E62E  EF1B  F073         	goto	u1361
  5398  00E632  EF1D  F073         	goto	u1360
  5399  00E636                     u1361:
  5400  00E636  EF2D  F073         	goto	l2205
  5401  00E63A                     u1360:
  5402  00E63A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5403  00E63C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5404  00E63E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5405  00E640  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5406  00E642  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5407  00E644  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5408  00E646  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5409  00E648  6C01               	negf	___aomod@dividend^0,c
  5410  00E64A  0E00               	movlw	0
  5411  00E64C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5412  00E64E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5413  00E650  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5414  00E652  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5415  00E654  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5416  00E656  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5417  00E658  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5418  00E65A                     l2205:
  5419  00E65A  C001  F001         	movff	___aomod@dividend,?___aomod
  5420  00E65E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5421  00E662  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5422  00E666  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5423  00E66A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5424  00E66E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5425  00E672  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5426  00E676  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5427  00E67A  0012               	return		;funcret
  5428  00E67C                     __end_of___aomod:
  5429                           	opt callstack 0
  5430                           
  5431 ;; *************** function ___aodiv *****************
  5432 ;; Defined at:
  5433 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aodiv.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  dividend        8    0[COMRAM] long long 
  5436 ;;  divisor         8    8[COMRAM] long long 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  quotient        8   18[COMRAM] long long 
  5439 ;;  sign            1   17[COMRAM] unsigned char 
  5440 ;;  counter         1   16[COMRAM] unsigned char 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  8    0[COMRAM] long long 
  5443 ;; Registers used:
  5444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5450 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;Total ram usage:       26 bytes
  5455 ;; Hardware stack levels used:    1
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_dtoa
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text10
  5464  00E67C                     __ptext10:
  5465                           	opt callstack 0
  5466  00E67C                     ___aodiv:
  5467                           	opt callstack 26
  5468  00E67C  0E00               	movlw	0
  5469  00E67E  6E12               	movwf	___aodiv@sign^0,c
  5470  00E680  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5471  00E682  EF47  F073         	goto	u1240
  5472  00E686  EF45  F073         	goto	u1241
  5473  00E68A                     u1241:
  5474  00E68A  EF59  F073         	goto	l2137
  5475  00E68E                     u1240:
  5476  00E68E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5477  00E690  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5478  00E692  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5479  00E694  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5480  00E696  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5481  00E698  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5482  00E69A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5483  00E69C  6C09               	negf	___aodiv@divisor^0,c
  5484  00E69E  0E00               	movlw	0
  5485  00E6A0  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5486  00E6A2  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5487  00E6A4  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5488  00E6A6  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5489  00E6A8  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5490  00E6AA  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5491  00E6AC  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5492  00E6AE  0E01               	movlw	1
  5493  00E6B0  6E12               	movwf	___aodiv@sign^0,c
  5494  00E6B2                     l2137:
  5495  00E6B2  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5496  00E6B4  EF60  F073         	goto	u1250
  5497  00E6B8  EF5E  F073         	goto	u1251
  5498  00E6BC                     u1251:
  5499  00E6BC  EF72  F073         	goto	l2143
  5500  00E6C0                     u1250:
  5501  00E6C0  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5502  00E6C2  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5503  00E6C4  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5504  00E6C6  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5505  00E6C8  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5506  00E6CA  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5507  00E6CC  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5508  00E6CE  6C01               	negf	___aodiv@dividend^0,c
  5509  00E6D0  0E00               	movlw	0
  5510  00E6D2  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5511  00E6D4  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5512  00E6D6  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5513  00E6D8  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5514  00E6DA  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5515  00E6DC  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5516  00E6DE  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5517  00E6E0  0E01               	movlw	1
  5518  00E6E2  1A12               	xorwf	___aodiv@sign^0,f,c
  5519  00E6E4                     l2143:
  5520  00E6E4  EE20  F013         	lfsr	2,___aodiv@quotient
  5521  00E6E8  0E07               	movlw	7
  5522  00E6EA                     u1261:
  5523  00E6EA  6ADE               	clrf	postinc2,c
  5524  00E6EC  06E8               	decf	wreg,f,c
  5525  00E6EE  E2FD               	bc	u1261
  5526  00E6F0  5009               	movf	___aodiv@divisor^0,w,c
  5527  00E6F2  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5528  00E6F4  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5529  00E6F6  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5530  00E6F8  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5531  00E6FA  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5532  00E6FC  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5533  00E6FE  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5534  00E700  B4D8               	btfsc	status,2,c
  5535  00E702  EF85  F073         	goto	u1271
  5536  00E706  EF87  F073         	goto	u1270
  5537  00E70A                     u1271:
  5538  00E70A  EFD9  F073         	goto	l2165
  5539  00E70E                     u1270:
  5540  00E70E  0E01               	movlw	1
  5541  00E710  6E11               	movwf	___aodiv@counter^0,c
  5542  00E712  EF95  F073         	goto	l2151
  5543  00E716                     l2149:
  5544  00E716  90D8               	bcf	status,0,c
  5545  00E718  3609               	rlcf	___aodiv@divisor^0,f,c
  5546  00E71A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5547  00E71C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5548  00E71E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5549  00E720  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5550  00E722  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5551  00E724  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5552  00E726  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5553  00E728  2A11               	incf	___aodiv@counter^0,f,c
  5554  00E72A                     l2151:
  5555  00E72A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5556  00E72C  EF9A  F073         	goto	u1281
  5557  00E730  EF9C  F073         	goto	u1280
  5558  00E734                     u1281:
  5559  00E734  EF8B  F073         	goto	l2149
  5560  00E738                     u1280:
  5561  00E738                     l2153:
  5562  00E738  90D8               	bcf	status,0,c
  5563  00E73A  3613               	rlcf	___aodiv@quotient^0,f,c
  5564  00E73C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5565  00E73E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5566  00E740  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5567  00E742  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5568  00E744  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5569  00E746  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5570  00E748  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5571  00E74A  5009               	movf	___aodiv@divisor^0,w,c
  5572  00E74C  5C01               	subwf	___aodiv@dividend^0,w,c
  5573  00E74E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5574  00E750  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5575  00E752  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5576  00E754  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5577  00E756  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5578  00E758  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5579  00E75A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5580  00E75C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5581  00E75E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5582  00E760  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5583  00E762  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5584  00E764  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5585  00E766  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5586  00E768  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5587  00E76A  A0D8               	btfss	status,0,c
  5588  00E76C  EFBA  F073         	goto	u1291
  5589  00E770  EFBC  F073         	goto	u1290
  5590  00E774                     u1291:
  5591  00E774  EFCD  F073         	goto	l2161
  5592  00E778                     u1290:
  5593  00E778  5009               	movf	___aodiv@divisor^0,w,c
  5594  00E77A  5E01               	subwf	___aodiv@dividend^0,f,c
  5595  00E77C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5596  00E77E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5597  00E780  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5598  00E782  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5599  00E784  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5600  00E786  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5601  00E788  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5602  00E78A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5603  00E78C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5604  00E78E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5605  00E790  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5606  00E792  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5607  00E794  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5608  00E796  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5609  00E798  8013               	bsf	___aodiv@quotient^0,0,c
  5610  00E79A                     l2161:
  5611  00E79A  90D8               	bcf	status,0,c
  5612  00E79C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5613  00E79E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5614  00E7A0  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5615  00E7A2  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5616  00E7A4  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5617  00E7A6  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5618  00E7A8  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5619  00E7AA  3209               	rrcf	___aodiv@divisor^0,f,c
  5620  00E7AC  2E11               	decfsz	___aodiv@counter^0,f,c
  5621  00E7AE  EF9C  F073         	goto	l2153
  5622  00E7B2                     l2165:
  5623  00E7B2  5012               	movf	___aodiv@sign^0,w,c
  5624  00E7B4  B4D8               	btfsc	status,2,c
  5625  00E7B6  EFDF  F073         	goto	u1301
  5626  00E7BA  EFE1  F073         	goto	u1300
  5627  00E7BE                     u1301:
  5628  00E7BE  EFF1  F073         	goto	l2169
  5629  00E7C2                     u1300:
  5630  00E7C2  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5631  00E7C4  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5632  00E7C6  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5633  00E7C8  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5634  00E7CA  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5635  00E7CC  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5636  00E7CE  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5637  00E7D0  6C13               	negf	___aodiv@quotient^0,c
  5638  00E7D2  0E00               	movlw	0
  5639  00E7D4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5640  00E7D6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5641  00E7D8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5642  00E7DA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5643  00E7DC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5644  00E7DE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5645  00E7E0  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5646  00E7E2                     l2169:
  5647  00E7E2  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5648  00E7E6  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5649  00E7EA  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5650  00E7EE  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5651  00E7F2  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5652  00E7F6  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5653  00E7FA  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5654  00E7FE  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5655  00E802  0012               	return		;funcret
  5656  00E804                     __end_of___aodiv:
  5657                           	opt callstack 0
  5658                           
  5659 ;; *************** function _ctoa *****************
  5660 ;; Defined at:
  5661 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5664 ;;		 -> NULL(0), 
  5665 ;;  c               1   31[COMRAM] unsigned char 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  w               2   32[COMRAM] int 
  5668 ;;  l               2    0        int 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  2   29[COMRAM] int 
  5671 ;; Registers used:
  5672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5678 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;Total ram usage:        5 bytes
  5683 ;; Hardware stack levels used:    1
  5684 ;; Hardware stack levels required when called:    5
  5685 ;; This function calls:
  5686 ;;		_pad
  5687 ;; This function is called by:
  5688 ;;		_vfpfcnvrt
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text11
  5693  00E13E                     __ptext11:
  5694                           	opt callstack 0
  5695  00E13E                     _ctoa:
  5696                           	opt callstack 22
  5697  00E13E                     
  5698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  5699  00E13E  0100               	movlb	0	; () banked
  5700  00E140  51BF               	movf	_width& (0+255),w,b
  5701  00E142  11C0               	iorwf	(_width+1)& (0+255),w,b
  5702  00E144  A4D8               	btfss	status,2,c
  5703  00E146  EFA7  F070         	goto	u1461
  5704  00E14A  EFA9  F070         	goto	u1460
  5705  00E14E                     u1461:
  5706  00E14E  EFAF  F070         	goto	l2263
  5707  00E152                     u1460:
  5708  00E152                     
  5709                           ; BSR set to: 0
  5710  00E152  C0BF  F021         	movff	_width,ctoa@w
  5711  00E156  C0C0  F022         	movff	_width+1,ctoa@w+1
  5712  00E15A  EFB5  F070         	goto	l2265
  5713  00E15E                     l2263:
  5714                           
  5715                           ; BSR set to: 0
  5716  00E15E  0EFF               	movlw	255
  5717  00E160  25BF               	addwf	_width& (0+255),w,b
  5718  00E162  6E21               	movwf	ctoa@w^0,c
  5719  00E164  0EFF               	movlw	255
  5720  00E166  21C0               	addwfc	(_width+1)& (0+255),w,b
  5721  00E168  6E22               	movwf	(ctoa@w+1)^0,c
  5722  00E16A                     l2265:
  5723                           
  5724                           ; BSR set to: 0
  5725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  5726  00E16A  C020  F0CF         	movff	ctoa@c,_dbuf
  5727  00E16E                     
  5728                           ; BSR set to: 0
  5729                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  5730  00E16E  0E00               	movlw	0
  5731  00E170  6FD0               	movwf	(_dbuf+1)& (0+255),b
  5732  00E172                     
  5733                           ; BSR set to: 0
  5734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  5735  00E172  C01E  F013         	movff	ctoa@fp,pad@fp
  5736  00E176  C01F  F014         	movff	ctoa@fp+1,pad@fp+1
  5737  00E17A  0ECF               	movlw	low _dbuf
  5738  00E17C  6E15               	movwf	pad@buf^0,c
  5739  00E17E  0E00               	movlw	high _dbuf
  5740  00E180  6E16               	movwf	(pad@buf+1)^0,c
  5741  00E182  C021  F017         	movff	ctoa@w,pad@p
  5742  00E186  C022  F018         	movff	ctoa@w+1,pad@p+1
  5743  00E18A  EC49  F071         	call	_pad	;wreg free
  5744  00E18E  C013  F01E         	movff	?_pad,?_ctoa
  5745  00E192  C014  F01F         	movff	?_pad+1,?_ctoa+1
  5746  00E196  0012               	return		;funcret
  5747  00E198                     __end_of_ctoa:
  5748                           	opt callstack 0
  5749                           
  5750 ;; *************** function _pad *****************
  5751 ;; Defined at:
  5752 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  5755 ;;		 -> NULL(0), 
  5756 ;;  buf             2   20[COMRAM] PTR unsigned char 
  5757 ;;		 -> dbuf(32), 
  5758 ;;  p               2   22[COMRAM] int 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  w               2   27[COMRAM] int 
  5761 ;;  i               2   25[COMRAM] int 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  2   18[COMRAM] int 
  5764 ;; Registers used:
  5765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5771 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;Total ram usage:       11 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; Hardware stack levels required when called:    4
  5778 ;; This function calls:
  5779 ;;		_fputc
  5780 ;;		_fputs
  5781 ;;		_strlen
  5782 ;; This function is called by:
  5783 ;;		_ctoa
  5784 ;;		_dtoa
  5785 ;;		_utoa
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text12
  5790  00E292                     __ptext12:
  5791                           	opt callstack 0
  5792  00E292                     _pad:
  5793                           	opt callstack 22
  5794  00E292                     
  5795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  5796  00E292  0100               	movlb	0	; () banked
  5797  00E294  A1C3               	btfss	_flags& (0+255),0,b
  5798  00E296  EF4F  F071         	goto	u1171
  5799  00E29A  EF51  F071         	goto	u1170
  5800  00E29E                     u1171:
  5801  00E29E  EF5B  F071         	goto	l2097
  5802  00E2A2                     u1170:
  5803  00E2A2                     
  5804                           ; BSR set to: 0
  5805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  5806  00E2A2  C015  F00C         	movff	pad@buf,fputs@s
  5807  00E2A6  C016  F00D         	movff	pad@buf+1,fputs@s+1
  5808  00E2AA  C013  F00E         	movff	pad@fp,fputs@fp
  5809  00E2AE  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  5810  00E2B2  EC54  F070         	call	_fputs	;wreg free
  5811  00E2B6                     l2097:
  5812                           
  5813                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  5814  00E2B6  BE18               	btfsc	(pad@p+1)^0,7,c
  5815  00E2B8  EF60  F071         	goto	u1181
  5816  00E2BC  EF62  F071         	goto	u1180
  5817  00E2C0                     u1181:
  5818  00E2C0  EF68  F071         	goto	l2101
  5819  00E2C4                     u1180:
  5820  00E2C4  C017  F01C         	movff	pad@p,pad@w
  5821  00E2C8  C018  F01D         	movff	pad@p+1,pad@w+1
  5822  00E2CC  EF6C  F071         	goto	l381
  5823  00E2D0                     l2101:
  5824  00E2D0  0E00               	movlw	0
  5825  00E2D2  6E1D               	movwf	(pad@w+1)^0,c
  5826  00E2D4  0E00               	movlw	0
  5827  00E2D6  6E1C               	movwf	pad@w^0,c
  5828  00E2D8                     l381:
  5829                           
  5830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  5831  00E2D8  0E00               	movlw	0
  5832  00E2DA  6E1B               	movwf	(pad@i+1)^0,c
  5833  00E2DC  0E00               	movlw	0
  5834  00E2DE  6E1A               	movwf	pad@i^0,c
  5835                           
  5836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5837  00E2E0  EF7E  F071         	goto	l2107
  5838  00E2E4                     l2103:
  5839                           
  5840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  5841  00E2E4  0E00               	movlw	0
  5842  00E2E6  6E04               	movwf	(fputc@c+1)^0,c
  5843  00E2E8  0E20               	movlw	32
  5844  00E2EA  6E03               	movwf	fputc@c^0,c
  5845  00E2EC  C013  F005         	movff	pad@fp,fputc@fp
  5846  00E2F0  C014  F006         	movff	pad@fp+1,fputc@fp+1
  5847  00E2F4  ECFE  F070         	call	_fputc	;wreg free
  5848  00E2F8                     
  5849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  5850  00E2F8  4A1A               	infsnz	pad@i^0,f,c
  5851  00E2FA  2A1B               	incf	(pad@i+1)^0,f,c
  5852  00E2FC                     l2107:
  5853                           
  5854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  5855  00E2FC  501C               	movf	pad@w^0,w,c
  5856  00E2FE  5C1A               	subwf	pad@i^0,w,c
  5857  00E300  501B               	movf	(pad@i+1)^0,w,c
  5858  00E302  0A80               	xorlw	128
  5859  00E304  6E19               	movwf	??_pad^0,c
  5860  00E306  501D               	movf	(pad@w+1)^0,w,c
  5861  00E308  0A80               	xorlw	128
  5862  00E30A  5819               	subwfb	??_pad^0,w,c
  5863  00E30C  A0D8               	btfss	status,0,c
  5864  00E30E  EF8B  F071         	goto	u1191
  5865  00E312  EF8D  F071         	goto	u1190
  5866  00E316                     u1191:
  5867  00E316  EF72  F071         	goto	l2103
  5868  00E31A                     u1190:
  5869  00E31A                     
  5870                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  5871  00E31A  0100               	movlb	0	; () banked
  5872  00E31C  B1C3               	btfsc	_flags& (0+255),0,b
  5873  00E31E  EF93  F071         	goto	u1201
  5874  00E322  EF95  F071         	goto	u1200
  5875  00E326                     u1201:
  5876  00E326  EF9F  F071         	goto	l2111
  5877  00E32A                     u1200:
  5878  00E32A                     
  5879                           ; BSR set to: 0
  5880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  5881  00E32A  C015  F00C         	movff	pad@buf,fputs@s
  5882  00E32E  C016  F00D         	movff	pad@buf+1,fputs@s+1
  5883  00E332  C013  F00E         	movff	pad@fp,fputs@fp
  5884  00E336  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  5885  00E33A  EC54  F070         	call	_fputs	;wreg free
  5886  00E33E                     l2111:
  5887                           
  5888                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  5889  00E33E  C015  F001         	movff	pad@buf,strlen@s
  5890  00E342  C016  F002         	movff	pad@buf+1,strlen@s+1
  5891  00E346  ECDE  F06F         	call	_strlen	;wreg free
  5892  00E34A  501C               	movf	pad@w^0,w,c
  5893  00E34C  2401               	addwf	?_strlen^0,w,c
  5894  00E34E  6E13               	movwf	?_pad^0,c
  5895  00E350  501D               	movf	(pad@w+1)^0,w,c
  5896  00E352  2002               	addwfc	(?_strlen+1)^0,w,c
  5897  00E354  6E14               	movwf	(?_pad+1)^0,c
  5898  00E356  0012               	return		;funcret
  5899  00E358                     __end_of_pad:
  5900                           	opt callstack 0
  5901                           
  5902 ;; *************** function _strlen *****************
  5903 ;; Defined at:
  5904 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5907 ;;		 -> dbuf(32), 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5910 ;;		 -> dbuf(32), 
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  2    0[COMRAM] unsigned int 
  5913 ;; Registers used:
  5914 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;Total ram usage:        4 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_pad
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text13
  5934  00DFBC                     __ptext13:
  5935                           	opt callstack 0
  5936  00DFBC                     _strlen:
  5937                           	opt callstack 25
  5938  00DFBC  C001  F003         	movff	strlen@s,strlen@a
  5939  00DFC0  C002  F004         	movff	strlen@s+1,strlen@a+1
  5940  00DFC4  EFE6  F06F         	goto	l2087
  5941  00DFC8                     l2085:
  5942  00DFC8  4A01               	infsnz	strlen@s^0,f,c
  5943  00DFCA  2A02               	incf	(strlen@s+1)^0,f,c
  5944  00DFCC                     l2087:
  5945  00DFCC  C001  FFD9         	movff	strlen@s,fsr2l
  5946  00DFD0  C002  FFDA         	movff	strlen@s+1,fsr2h
  5947  00DFD4  50DF               	movf	indf2,w,c
  5948  00DFD6  A4D8               	btfss	status,2,c
  5949  00DFD8  EFF0  F06F         	goto	u1161
  5950  00DFDC  EFF2  F06F         	goto	u1160
  5951  00DFE0                     u1161:
  5952  00DFE0  EFE4  F06F         	goto	l2085
  5953  00DFE4                     u1160:
  5954  00DFE4  5003               	movf	strlen@a^0,w,c
  5955  00DFE6  5C01               	subwf	strlen@s^0,w,c
  5956  00DFE8  6E01               	movwf	?_strlen^0,c
  5957  00DFEA  5004               	movf	(strlen@a+1)^0,w,c
  5958  00DFEC  5802               	subwfb	(strlen@s+1)^0,w,c
  5959  00DFEE  6E02               	movwf	(?_strlen+1)^0,c
  5960  00DFF0  0012               	return		;funcret
  5961  00DFF2                     __end_of_strlen:
  5962                           	opt callstack 0
  5963                           
  5964 ;; *************** function _fputs *****************
  5965 ;; Defined at:
  5966 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  5967 ;; Parameters:    Size  Location     Type
  5968 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5969 ;;		 -> dbuf(32), 
  5970 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  5971 ;;		 -> NULL(0), 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  i               2   16[COMRAM] int 
  5974 ;;  c               1   15[COMRAM] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  2   11[COMRAM] int 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5984 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5985 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;Total ram usage:        7 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    3
  5991 ;; This function calls:
  5992 ;;		_fputc
  5993 ;; This function is called by:
  5994 ;;		_pad
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text14
  5999  00E0A8                     __ptext14:
  6000                           	opt callstack 0
  6001  00E0A8                     _fputs:
  6002                           	opt callstack 22
  6003  00E0A8  0E00               	movlw	0
  6004  00E0AA  6E12               	movwf	(fputs@i+1)^0,c
  6005  00E0AC  0E00               	movlw	0
  6006  00E0AE  6E11               	movwf	fputs@i^0,c
  6007  00E0B0  EF65  F070         	goto	l2081
  6008  00E0B4                     l2077:
  6009  00E0B4  C010  F003         	movff	fputs@c,fputc@c
  6010  00E0B8  6A04               	clrf	(fputc@c+1)^0,c
  6011  00E0BA  C00E  F005         	movff	fputs@fp,fputc@fp
  6012  00E0BE  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  6013  00E0C2  ECFE  F070         	call	_fputc	;wreg free
  6014  00E0C6  4A11               	infsnz	fputs@i^0,f,c
  6015  00E0C8  2A12               	incf	(fputs@i+1)^0,f,c
  6016  00E0CA                     l2081:
  6017  00E0CA  5011               	movf	fputs@i^0,w,c
  6018  00E0CC  240C               	addwf	fputs@s^0,w,c
  6019  00E0CE  6ED9               	movwf	fsr2l,c
  6020  00E0D0  5012               	movf	(fputs@i+1)^0,w,c
  6021  00E0D2  200D               	addwfc	(fputs@s+1)^0,w,c
  6022  00E0D4  6EDA               	movwf	fsr2h,c
  6023  00E0D6  50DF               	movf	indf2,w,c
  6024  00E0D8  6E10               	movwf	fputs@c^0,c
  6025  00E0DA  5010               	movf	fputs@c^0,w,c
  6026  00E0DC  A4D8               	btfss	status,2,c
  6027  00E0DE  EF73  F070         	goto	u1151
  6028  00E0E2  EF75  F070         	goto	u1150
  6029  00E0E6                     u1151:
  6030  00E0E6  EF5A  F070         	goto	l2077
  6031  00E0EA                     u1150:
  6032  00E0EA  0012               	return		;funcret
  6033  00E0EC                     __end_of_fputs:
  6034                           	opt callstack 0
  6035                           
  6036 ;; *************** function _fputc *****************
  6037 ;; Defined at:
  6038 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  c               2    2[COMRAM] int 
  6041 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  6042 ;;		 -> NULL(0), 
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  2    2[COMRAM] int 
  6047 ;; Registers used:
  6048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;Total ram usage:        9 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:    2
  6061 ;; This function calls:
  6062 ;;		_putch
  6063 ;; This function is called by:
  6064 ;;		_pad
  6065 ;;		_vfpfcnvrt
  6066 ;;		_fputs
  6067 ;; This function uses a non-reentrant model
  6068 ;;
  6069                           
  6070                           	psect	text15
  6071  00E1FC                     __ptext15:
  6072                           	opt callstack 0
  6073  00E1FC                     _fputc:
  6074                           	opt callstack 22
  6075  00E1FC  5005               	movf	fputc@fp^0,w,c
  6076  00E1FE  1006               	iorwf	(fputc@fp+1)^0,w,c
  6077  00E200  B4D8               	btfsc	status,2,c
  6078  00E202  EF05  F071         	goto	u1111
  6079  00E206  EF07  F071         	goto	u1110
  6080  00E20A                     u1111:
  6081  00E20A  EF10  F071         	goto	l2065
  6082  00E20E                     u1110:
  6083  00E20E  5005               	movf	fputc@fp^0,w,c
  6084  00E210  1006               	iorwf	(fputc@fp+1)^0,w,c
  6085  00E212  A4D8               	btfss	status,2,c
  6086  00E214  EF0E  F071         	goto	u1121
  6087  00E218  EF10  F071         	goto	u1120
  6088  00E21C                     u1121:
  6089  00E21C  EF15  F071         	goto	l2067
  6090  00E220                     u1120:
  6091  00E220                     l2065:
  6092  00E220  5003               	movf	fputc@c^0,w,c
  6093  00E222  ECE1  F06E         	call	_putch
  6094  00E226  EF48  F071         	goto	l1198
  6095  00E22A                     l2067:
  6096  00E22A  EE20 F004          	lfsr	2,4
  6097  00E22E  5005               	movf	fputc@fp^0,w,c
  6098  00E230  26D9               	addwf	fsr2l,f,c
  6099  00E232  5006               	movf	(fputc@fp+1)^0,w,c
  6100  00E234  22DA               	addwfc	fsr2h,f,c
  6101  00E236  50DE               	movf	postinc2,w,c
  6102  00E238  10DE               	iorwf	postinc2,w,c
  6103  00E23A  B4D8               	btfsc	status,2,c
  6104  00E23C  EF22  F071         	goto	u1131
  6105  00E240  EF24  F071         	goto	u1130
  6106  00E244                     u1131:
  6107  00E244  EF3F  F071         	goto	l2071
  6108  00E248                     u1130:
  6109  00E248  EE20 F004          	lfsr	2,4
  6110  00E24C  5005               	movf	fputc@fp^0,w,c
  6111  00E24E  26D9               	addwf	fsr2l,f,c
  6112  00E250  5006               	movf	(fputc@fp+1)^0,w,c
  6113  00E252  22DA               	addwfc	fsr2h,f,c
  6114  00E254  EE10 F002          	lfsr	1,2
  6115  00E258  5005               	movf	fputc@fp^0,w,c
  6116  00E25A  26E1               	addwf	fsr1l,f,c
  6117  00E25C  5006               	movf	(fputc@fp+1)^0,w,c
  6118  00E25E  22E2               	addwfc	fsr1h,f,c
  6119  00E260  50DE               	movf	postinc2,w,c
  6120  00E262  5CE6               	subwf	postinc1,w,c
  6121  00E264  50E6               	movf	postinc1,w,c
  6122  00E266  0A80               	xorlw	128
  6123  00E268  6E0B               	movwf	(??_fputc+4)^0,c
  6124  00E26A  50DE               	movf	postinc2,w,c
  6125  00E26C  0A80               	xorlw	128
  6126  00E26E  580B               	subwfb	(??_fputc+4)^0,w,c
  6127  00E270  B0D8               	btfsc	status,0,c
  6128  00E272  EF3D  F071         	goto	u1141
  6129  00E276  EF3F  F071         	goto	u1140
  6130  00E27A                     u1141:
  6131  00E27A  EF48  F071         	goto	l1198
  6132  00E27E                     u1140:
  6133  00E27E                     l2071:
  6134  00E27E  EE20 F002          	lfsr	2,2
  6135  00E282  5005               	movf	fputc@fp^0,w,c
  6136  00E284  26D9               	addwf	fsr2l,f,c
  6137  00E286  5006               	movf	(fputc@fp+1)^0,w,c
  6138  00E288  22DA               	addwfc	fsr2h,f,c
  6139  00E28A  2ADE               	incf	postinc2,f,c
  6140  00E28C  0E00               	movlw	0
  6141  00E28E  22DD               	addwfc	postdec2,f,c
  6142  00E290                     l1198:
  6143  00E290  0012               	return		;funcret
  6144  00E292                     __end_of_fputc:
  6145                           	opt callstack 0
  6146                           
  6147 ;; *************** function _putch *****************
  6148 ;; Defined at:
  6149 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;  txData          1    wreg     unsigned char 
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;  txData          1    1[COMRAM] unsigned char 
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      void 
  6156 ;; Registers used:
  6157 ;;		wreg, status,2, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6164 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6166 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;Total ram usage:        1 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    1
  6170 ;; This function calls:
  6171 ;;		_EUSART1_Write
  6172 ;; This function is called by:
  6173 ;;		_fputc
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text16
  6178  00DDC2                     __ptext16:
  6179                           	opt callstack 0
  6180  00DDC2                     _putch:
  6181                           	opt callstack 22
  6182                           
  6183                           ;incstack = 0
  6184                           ;putch@txData stored from wreg
  6185  00DDC2  6E02               	movwf	putch@txData^0,c
  6186  00DDC4                     
  6187                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  6188  00DDC4  5002               	movf	putch@txData^0,w,c
  6189  00DDC6  EC39  F06F         	call	_EUSART1_Write
  6190  00DDCA  0012               	return		;funcret
  6191  00DDCC                     __end_of_putch:
  6192                           	opt callstack 0
  6193                           
  6194 ;; *************** function _EUSART1_Write *****************
  6195 ;; Defined at:
  6196 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  txData          1    wreg     unsigned char 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;  txData          1    0[COMRAM] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		wreg
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6214 ;;Total ram usage:        1 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_putch
  6220 ;; This function uses a non-reentrant model
  6221 ;;
  6222                           
  6223                           	psect	text17
  6224  00DE72                     __ptext17:
  6225                           	opt callstack 0
  6226  00DE72                     _EUSART1_Write:
  6227                           	opt callstack 22
  6228                           
  6229                           ;incstack = 0
  6230                           ;EUSART1_Write@txData stored from wreg
  6231  00DE72  6E01               	movwf	EUSART1_Write@txData^0,c
  6232  00DE74                     l266:
  6233                           
  6234                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  6235  00DE74  A89E               	btfss	158,4,c	;volatile
  6236  00DE76  EF3F  F06F         	goto	u1101
  6237  00DE7A  EF41  F06F         	goto	u1100
  6238  00DE7E                     u1101:
  6239  00DE7E  EF3A  F06F         	goto	l266
  6240  00DE82                     u1100:
  6241  00DE82                     
  6242                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  6243  00DE82  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  6244  00DE86  0012               	return		;funcret
  6245  00DE88                     __end_of_EUSART1_Write:
  6246                           	opt callstack 0
  6247                           
  6248 ;; *************** function _atoi *****************
  6249 ;; Defined at:
  6250 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  6251 ;; Parameters:    Size  Location     Type
  6252 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6253 ;;		 -> STR_58(17), STR_57(50), STR_56(25), STR_55(38), 
  6254 ;;		 -> STR_54(41), STR_53(42), STR_52(67), STR_51(68), 
  6255 ;;		 -> STR_50(52), STR_49(48), STR_48(42), STR_47(26), 
  6256 ;;		 -> STR_46(31), STR_45(35), STR_44(37), STR_43(15), 
  6257 ;;		 -> STR_42(27), STR_41(24), STR_40(23), STR_39(20), 
  6258 ;;		 -> STR_38(23), STR_37(26), STR_36(38), STR_35(29), 
  6259 ;;		 -> STR_34(20), STR_33(3), STR_32(5), STR_31(19), 
  6260 ;;		 -> STR_30(19), STR_29(41), STR_28(17), STR_27(36), 
  6261 ;;		 -> STR_26(72), STR_25(38), STR_24(74), STR_23(2), 
  6262 ;;		 -> STR_22(2), STR_21(13), STR_20(52), STR_19(27), 
  6263 ;;		 -> STR_18(68), STR_17(49), STR_16(48), STR_15(38), 
  6264 ;;		 -> STR_14(33), STR_13(25), STR_12(22), STR_11(7), 
  6265 ;;		 -> STR_10(15), STR_9(52), STR_8(41), STR_7(17), 
  6266 ;;		 -> STR_6(23), STR_5(52), STR_4(5), STR_3(22), 
  6267 ;;		 -> STR_2(21), STR_1(20), 
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;  n               2   20[COMRAM] int 
  6270 ;;  neg             2   13[COMRAM] int 
  6271 ;; Return value:  Size  Location     Type
  6272 ;;                  2    7[COMRAM] int 
  6273 ;; Registers used:
  6274 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6275 ;; Tracked objects:
  6276 ;;		On entry : 0/0
  6277 ;;		On exit  : 0/0
  6278 ;;		Unchanged: 0/0
  6279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6280 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;Total ram usage:       15 bytes
  6285 ;; Hardware stack levels used:    1
  6286 ;; Hardware stack levels required when called:    1
  6287 ;; This function calls:
  6288 ;;		___wmul
  6289 ;;		_isdigit
  6290 ;;		_isspace
  6291 ;; This function is called by:
  6292 ;;		_vfpfcnvrt
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text18
  6297  00E804                     __ptext18:
  6298                           	opt callstack 0
  6299  00E804                     _atoi:
  6300                           	opt callstack 26
  6301  00E804  0E00               	movlw	0
  6302  00E806  6E16               	movwf	(atoi@n+1)^0,c
  6303  00E808  0E00               	movlw	0
  6304  00E80A  6E15               	movwf	atoi@n^0,c
  6305  00E80C  0E00               	movlw	0
  6306  00E80E  6E0F               	movwf	(atoi@neg+1)^0,c
  6307  00E810  0E00               	movlw	0
  6308  00E812  6E0E               	movwf	atoi@neg^0,c
  6309  00E814  EF0E  F074         	goto	l2375
  6310  00E818                     l2373:
  6311  00E818  4A08               	infsnz	atoi@s^0,f,c
  6312  00E81A  2A09               	incf	(atoi@s+1)^0,f,c
  6313  00E81C                     l2375:
  6314  00E81C  0E01               	movlw	1
  6315  00E81E  6E14               	movwf	_atoi$1517^0,c
  6316  00E820  C008  FFF6         	movff	atoi@s,tblptrl
  6317  00E824  C009  FFF7         	movff	atoi@s+1,tblptrh
  6318  00E828                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6319  00E828  6AF8               	clrf	tblptru,c
  6320  00E82A                     	endif
  6321  00E82A                     	if	0	;tblptru may be non-zero
  6322  00E82A                     	endif
  6323  00E82A  0008               	tblrd		*
  6324  00E82C  50F5               	movf	tablat,w,c
  6325  00E82E  0A20               	xorlw	32
  6326  00E830  B4D8               	btfsc	status,2,c
  6327  00E832  EF1D  F074         	goto	u1691
  6328  00E836  EF1F  F074         	goto	u1690
  6329  00E83A                     u1691:
  6330  00E83A  EF3D  F074         	goto	l2383
  6331  00E83E                     u1690:
  6332  00E83E  0EF7               	movlw	247
  6333  00E840  6E0A               	movwf	??_atoi^0,c
  6334  00E842  0EFF               	movlw	255
  6335  00E844  6E0B               	movwf	(??_atoi+1)^0,c
  6336  00E846  C008  FFF6         	movff	atoi@s,tblptrl
  6337  00E84A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6338  00E84E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6339  00E84E  6AF8               	clrf	tblptru,c
  6340  00E850                     	endif
  6341  00E850                     	if	0	;tblptru may be non-zero
  6342  00E850                     	endif
  6343  00E850  0008               	tblrd		*
  6344  00E852  50F5               	movf	tablat,w,c
  6345  00E854  6E0C               	movwf	(??_atoi+2)^0,c
  6346  00E856  6A0D               	clrf	(??_atoi+3)^0,c
  6347  00E858  500A               	movf	??_atoi^0,w,c
  6348  00E85A  260C               	addwf	(??_atoi+2)^0,f,c
  6349  00E85C  500B               	movf	(??_atoi+1)^0,w,c
  6350  00E85E  220D               	addwfc	(??_atoi+3)^0,f,c
  6351  00E860  500D               	movf	(??_atoi+3)^0,w,c
  6352  00E862  E109               	bnz	u1700
  6353  00E864  0E05               	movlw	5
  6354  00E866  5C0C               	subwf	(??_atoi+2)^0,w,c
  6355  00E868  A0D8               	btfss	status,0,c
  6356  00E86A  EF39  F074         	goto	u1701
  6357  00E86E  EF3B  F074         	goto	u1700
  6358  00E872                     u1701:
  6359  00E872  EF3D  F074         	goto	l2383
  6360  00E876                     u1700:
  6361  00E876  0E00               	movlw	0
  6362  00E878  6E14               	movwf	_atoi$1517^0,c
  6363  00E87A                     l2383:
  6364  00E87A  C014  F010         	movff	_atoi$1517,_atoi$1516
  6365  00E87E  6A11               	clrf	(_atoi$1516+1)^0,c
  6366  00E880  5010               	movf	_atoi$1516^0,w,c
  6367  00E882  1011               	iorwf	(_atoi$1516+1)^0,w,c
  6368  00E884  A4D8               	btfss	status,2,c
  6369  00E886  EF47  F074         	goto	u1711
  6370  00E88A  EF49  F074         	goto	u1710
  6371  00E88E                     u1711:
  6372  00E88E  EF0C  F074         	goto	l2373
  6373  00E892                     u1710:
  6374  00E892  EF53  F074         	goto	l2393
  6375  00E896                     l2389:
  6376  00E896  0E00               	movlw	0
  6377  00E898  6E0F               	movwf	(atoi@neg+1)^0,c
  6378  00E89A  0E01               	movlw	1
  6379  00E89C  6E0E               	movwf	atoi@neg^0,c
  6380  00E89E                     l2391:
  6381  00E89E  4A08               	infsnz	atoi@s^0,f,c
  6382  00E8A0  2A09               	incf	(atoi@s+1)^0,f,c
  6383  00E8A2  EF8A  F074         	goto	l2399
  6384  00E8A6                     l2393:
  6385  00E8A6  C008  FFF6         	movff	atoi@s,tblptrl
  6386  00E8AA  C009  FFF7         	movff	atoi@s+1,tblptrh
  6387  00E8AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6388  00E8AE  6AF8               	clrf	tblptru,c
  6389  00E8B0                     	endif
  6390  00E8B0                     	if	0	;tblptru may be non-zero
  6391  00E8B0                     	endif
  6392  00E8B0  0008               	tblrd		*
  6393  00E8B2  50F5               	movf	tablat,w,c
  6394  00E8B4  6E0A               	movwf	??_atoi^0,c
  6395  00E8B6  6A0B               	clrf	(??_atoi+1)^0,c
  6396                           
  6397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6398                           ; Switch size 1, requested type "simple"
  6399                           ; Number of cases is 1, Range of values is 0 to 0
  6400                           ; switch strategies available:
  6401                           ; Name         Instructions Cycles
  6402                           ; simple_byte            4     3 (average)
  6403                           ;	Chosen strategy is simple_byte
  6404  00E8B8  500B               	movf	(??_atoi+1)^0,w,c
  6405  00E8BA  0A00               	xorlw	0	; case 0
  6406  00E8BC  B4D8               	btfsc	status,2,c
  6407  00E8BE  EF63  F074         	goto	l2859
  6408  00E8C2  EF8A  F074         	goto	l2399
  6409  00E8C6                     l2859:
  6410                           
  6411                           ; Switch size 1, requested type "simple"
  6412                           ; Number of cases is 2, Range of values is 43 to 45
  6413                           ; switch strategies available:
  6414                           ; Name         Instructions Cycles
  6415                           ; simple_byte            7     4 (average)
  6416                           ;	Chosen strategy is simple_byte
  6417  00E8C6  500A               	movf	??_atoi^0,w,c
  6418  00E8C8  0A2B               	xorlw	43	; case 43
  6419  00E8CA  B4D8               	btfsc	status,2,c
  6420  00E8CC  EF4F  F074         	goto	l2391
  6421  00E8D0  0A06               	xorlw	6	; case 45
  6422  00E8D2  B4D8               	btfsc	status,2,c
  6423  00E8D4  EF4B  F074         	goto	l2389
  6424  00E8D8  EF8A  F074         	goto	l2399
  6425  00E8DC                     l2395:
  6426  00E8DC  C015  F001         	movff	atoi@n,___wmul@multiplier
  6427  00E8E0  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6428  00E8E4  0E00               	movlw	0
  6429  00E8E6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6430  00E8E8  0E0A               	movlw	10
  6431  00E8EA  6E03               	movwf	___wmul@multiplicand^0,c
  6432  00E8EC  EC79  F06F         	call	___wmul	;wreg free
  6433  00E8F0  C008  FFF6         	movff	atoi@s,tblptrl
  6434  00E8F4  C009  FFF7         	movff	atoi@s+1,tblptrh
  6435  00E8F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6436  00E8F8  6AF8               	clrf	tblptru,c
  6437  00E8FA                     	endif
  6438  00E8FA                     	if	0	;tblptru may be non-zero
  6439  00E8FA                     	endif
  6440  00E8FA  0008               	tblrd		*
  6441  00E8FC  50F5               	movf	tablat,w,c
  6442  00E8FE  5E01               	subwf	?___wmul^0,f,c
  6443  00E900  0E00               	movlw	0
  6444  00E902  5A02               	subwfb	(?___wmul+1)^0,f,c
  6445  00E904  0E30               	movlw	48
  6446  00E906  2401               	addwf	?___wmul^0,w,c
  6447  00E908  6E15               	movwf	atoi@n^0,c
  6448  00E90A  0E00               	movlw	0
  6449  00E90C  2002               	addwfc	(?___wmul+1)^0,w,c
  6450  00E90E  6E16               	movwf	(atoi@n+1)^0,c
  6451  00E910  EF4F  F074         	goto	l2391
  6452  00E914                     l2399:
  6453  00E914  0ED0               	movlw	208
  6454  00E916  6E0A               	movwf	??_atoi^0,c
  6455  00E918  0EFF               	movlw	255
  6456  00E91A  6E0B               	movwf	(??_atoi+1)^0,c
  6457  00E91C  C008  FFF6         	movff	atoi@s,tblptrl
  6458  00E920  C009  FFF7         	movff	atoi@s+1,tblptrh
  6459  00E924                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6460  00E924  6AF8               	clrf	tblptru,c
  6461  00E926                     	endif
  6462  00E926                     	if	0	;tblptru may be non-zero
  6463  00E926                     	endif
  6464  00E926  0008               	tblrd		*
  6465  00E928  50F5               	movf	tablat,w,c
  6466  00E92A  6E0C               	movwf	(??_atoi+2)^0,c
  6467  00E92C  6A0D               	clrf	(??_atoi+3)^0,c
  6468  00E92E  500A               	movf	??_atoi^0,w,c
  6469  00E930  260C               	addwf	(??_atoi+2)^0,f,c
  6470  00E932  500B               	movf	(??_atoi+1)^0,w,c
  6471  00E934  220D               	addwfc	(??_atoi+3)^0,f,c
  6472  00E936  500D               	movf	(??_atoi+3)^0,w,c
  6473  00E938  E10A               	bnz	u1720
  6474  00E93A  0E0A               	movlw	10
  6475  00E93C  5C0C               	subwf	(??_atoi+2)^0,w,c
  6476  00E93E  A0D8               	btfss	status,0,c
  6477  00E940  EFA4  F074         	goto	u1721
  6478  00E944  EFA7  F074         	goto	u1720
  6479  00E948                     u1721:
  6480  00E948  0E01               	movlw	1
  6481  00E94A  EFA8  F074         	goto	u1730
  6482  00E94E                     u1720:
  6483  00E94E  0E00               	movlw	0
  6484  00E950                     u1730:
  6485  00E950  6E12               	movwf	_atoi$1518^0,c
  6486  00E952  6A13               	clrf	(_atoi$1518+1)^0,c
  6487  00E954  5012               	movf	_atoi$1518^0,w,c
  6488  00E956  1013               	iorwf	(_atoi$1518+1)^0,w,c
  6489  00E958  A4D8               	btfss	status,2,c
  6490  00E95A  EFB1  F074         	goto	u1741
  6491  00E95E  EFB3  F074         	goto	u1740
  6492  00E962                     u1741:
  6493  00E962  EF6E  F074         	goto	l2395
  6494  00E966                     u1740:
  6495  00E966  500E               	movf	atoi@neg^0,w,c
  6496  00E968  100F               	iorwf	(atoi@neg+1)^0,w,c
  6497  00E96A  A4D8               	btfss	status,2,c
  6498  00E96C  EFBA  F074         	goto	u1751
  6499  00E970  EFBC  F074         	goto	u1750
  6500  00E974                     u1751:
  6501  00E974  EFCA  F074         	goto	l1169
  6502  00E978                     u1750:
  6503  00E978  C015  F00A         	movff	atoi@n,??_atoi
  6504  00E97C  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6505  00E980  1E0A               	comf	??_atoi^0,f,c
  6506  00E982  1E0B               	comf	(??_atoi+1)^0,f,c
  6507  00E984  4A0A               	infsnz	??_atoi^0,f,c
  6508  00E986  2A0B               	incf	(??_atoi+1)^0,f,c
  6509  00E988  C00A  F008         	movff	??_atoi,?_atoi
  6510  00E98C  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6511  00E990  EFCE  F074         	goto	l1172
  6512  00E994                     l1169:
  6513  00E994  C015  F008         	movff	atoi@n,?_atoi
  6514  00E998  C016  F009         	movff	atoi@n+1,?_atoi+1
  6515  00E99C                     l1172:
  6516  00E99C  0012               	return		;funcret
  6517  00E99E                     __end_of_atoi:
  6518                           	opt callstack 0
  6519                           
  6520 ;; *************** function _isspace *****************
  6521 ;; Defined at:
  6522 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  c               2    0[COMRAM] int 
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;		None
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  2    0[COMRAM] int 
  6529 ;; Registers used:
  6530 ;;		wreg, status,2, status,0
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6539 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6540 ;;Total ram usage:        7 bytes
  6541 ;; Hardware stack levels used:    1
  6542 ;; This function calls:
  6543 ;;		Nothing
  6544 ;; This function is called by:
  6545 ;;		_atoi
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           	psect	text19
  6550  00E0EC                     __ptext19:
  6551                           	opt callstack 0
  6552  00E0EC                     _isspace:
  6553                           	opt callstack 26
  6554  00E0EC  0E01               	movlw	1
  6555  00E0EE  6E07               	movwf	_isspace$1534^0,c
  6556  00E0F0  0E20               	movlw	32
  6557  00E0F2  1801               	xorwf	isspace@c^0,w,c
  6558  00E0F4  1002               	iorwf	(isspace@c+1)^0,w,c
  6559  00E0F6  B4D8               	btfsc	status,2,c
  6560  00E0F8  EF80  F070         	goto	u1441
  6561  00E0FC  EF82  F070         	goto	u1440
  6562  00E100                     u1441:
  6563  00E100  EF9B  F070         	goto	l2255
  6564  00E104                     u1440:
  6565  00E104  0EF7               	movlw	247
  6566  00E106  6E03               	movwf	??_isspace^0,c
  6567  00E108  0EFF               	movlw	255
  6568  00E10A  6E04               	movwf	(??_isspace+1)^0,c
  6569  00E10C  C001  F005         	movff	isspace@c,??_isspace+2
  6570  00E110  C002  F006         	movff	isspace@c+1,??_isspace+3
  6571  00E114  5003               	movf	??_isspace^0,w,c
  6572  00E116  2605               	addwf	(??_isspace+2)^0,f,c
  6573  00E118  5004               	movf	(??_isspace+1)^0,w,c
  6574  00E11A  2206               	addwfc	(??_isspace+3)^0,f,c
  6575  00E11C  5006               	movf	(??_isspace+3)^0,w,c
  6576  00E11E  E109               	bnz	u1450
  6577  00E120  0E05               	movlw	5
  6578  00E122  5C05               	subwf	(??_isspace+2)^0,w,c
  6579  00E124  A0D8               	btfss	status,0,c
  6580  00E126  EF97  F070         	goto	u1451
  6581  00E12A  EF99  F070         	goto	u1450
  6582  00E12E                     u1451:
  6583  00E12E  EF9B  F070         	goto	l2255
  6584  00E132                     u1450:
  6585  00E132  0E00               	movlw	0
  6586  00E134  6E07               	movwf	_isspace$1534^0,c
  6587  00E136                     l2255:
  6588  00E136  C007  F001         	movff	_isspace$1534,?_isspace
  6589  00E13A  6A02               	clrf	(?_isspace+1)^0,c
  6590  00E13C  0012               	return		;funcret
  6591  00E13E                     __end_of_isspace:
  6592                           	opt callstack 0
  6593                           
  6594 ;; *************** function _isdigit *****************
  6595 ;; Defined at:
  6596 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  c               2    0[COMRAM] int 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;		None
  6601 ;; Return value:  Size  Location     Type
  6602 ;;                  2    0[COMRAM] int 
  6603 ;; Registers used:
  6604 ;;		wreg, status,2, status,0
  6605 ;; Tracked objects:
  6606 ;;		On entry : 0/0
  6607 ;;		On exit  : 0/0
  6608 ;;		Unchanged: 0/0
  6609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;Total ram usage:        6 bytes
  6615 ;; Hardware stack levels used:    1
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_vfpfcnvrt
  6620 ;;		_atoi
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text20
  6625  00DFF2                     __ptext20:
  6626                           	opt callstack 0
  6627  00DFF2                     _isdigit:
  6628                           	opt callstack 27
  6629  00DFF2  0ED0               	movlw	208
  6630  00DFF4  6E03               	movwf	??_isdigit^0,c
  6631  00DFF6  0EFF               	movlw	255
  6632  00DFF8  6E04               	movwf	(??_isdigit+1)^0,c
  6633  00DFFA  C001  F005         	movff	isdigit@c,??_isdigit+2
  6634  00DFFE  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  6635  00E002  5003               	movf	??_isdigit^0,w,c
  6636  00E004  2605               	addwf	(??_isdigit+2)^0,f,c
  6637  00E006  5004               	movf	(??_isdigit+1)^0,w,c
  6638  00E008  2206               	addwfc	(??_isdigit+3)^0,f,c
  6639  00E00A  5006               	movf	(??_isdigit+3)^0,w,c
  6640  00E00C  E10A               	bnz	u1220
  6641  00E00E  0E0A               	movlw	10
  6642  00E010  5C05               	subwf	(??_isdigit+2)^0,w,c
  6643  00E012  A0D8               	btfss	status,0,c
  6644  00E014  EF0E  F070         	goto	u1221
  6645  00E018  EF11  F070         	goto	u1220
  6646  00E01C                     u1221:
  6647  00E01C  0E01               	movlw	1
  6648  00E01E  EF12  F070         	goto	u1230
  6649  00E022                     u1220:
  6650  00E022  0E00               	movlw	0
  6651  00E024                     u1230:
  6652  00E024  6E01               	movwf	?_isdigit^0,c
  6653  00E026  6A02               	clrf	(?_isdigit+1)^0,c
  6654  00E028  0012               	return		;funcret
  6655  00E02A                     __end_of_isdigit:
  6656                           	opt callstack 0
  6657                           
  6658 ;; *************** function ___wmul *****************
  6659 ;; Defined at:
  6660 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;  multiplier      2    0[COMRAM] unsigned int 
  6663 ;;  multiplicand    2    2[COMRAM] unsigned int 
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;  product         2    4[COMRAM] unsigned int 
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  2    0[COMRAM] unsigned int 
  6668 ;; Registers used:
  6669 ;;		wreg, status,2, status,0, prodl, prodh
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6679 ;;Total ram usage:        6 bytes
  6680 ;; Hardware stack levels used:    1
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_atoi
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text21
  6689  00DEF2                     __ptext21:
  6690                           	opt callstack 0
  6691  00DEF2                     ___wmul:
  6692                           	opt callstack 26
  6693  00DEF2  5001               	movf	___wmul@multiplier^0,w,c
  6694  00DEF4  0203               	mulwf	___wmul@multiplicand^0,c
  6695  00DEF6  CFF3 F005          	movff	prodl,___wmul@product
  6696  00DEFA  CFF4 F006          	movff	prodh,___wmul@product+1
  6697  00DEFE  5001               	movf	___wmul@multiplier^0,w,c
  6698  00DF00  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  6699  00DF02  50F3               	movf	243,w,c
  6700  00DF04  2606               	addwf	(___wmul@product+1)^0,f,c
  6701  00DF06  5002               	movf	(___wmul@multiplier+1)^0,w,c
  6702  00DF08  0203               	mulwf	___wmul@multiplicand^0,c
  6703  00DF0A  50F3               	movf	243,w,c
  6704  00DF0C  2606               	addwf	(___wmul@product+1)^0,f,c
  6705  00DF0E  C005  F001         	movff	___wmul@product,?___wmul
  6706  00DF12  C006  F002         	movff	___wmul@product+1,?___wmul+1
  6707  00DF16  0012               	return		;funcret
  6708  00DF18                     __end_of___wmul:
  6709                           	opt callstack 0
  6710                           
  6711 ;; *************** function _noteOn *****************
  6712 ;; Defined at:
  6713 ;;		line 288 in file "main.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  cmd             1    wreg     unsigned char 
  6716 ;;  pitch           1    1[COMRAM] unsigned char 
  6717 ;;  velocity        1    2[COMRAM] unsigned char 
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;  cmd             1    3[COMRAM] unsigned char 
  6720 ;; Return value:  Size  Location     Type
  6721 ;;                  1    wreg      void 
  6722 ;; Registers used:
  6723 ;;		wreg, status,2, cstack
  6724 ;; Tracked objects:
  6725 ;;		On entry : 0/0
  6726 ;;		On exit  : 0/0
  6727 ;;		Unchanged: 0/0
  6728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;Total ram usage:        3 bytes
  6734 ;; Hardware stack levels used:    1
  6735 ;; Hardware stack levels required when called:    1
  6736 ;; This function calls:
  6737 ;;		_putByteSCI
  6738 ;; This function is called by:
  6739 ;;		_main
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text22
  6744  00DE5C                     __ptext22:
  6745                           	opt callstack 0
  6746  00DE5C                     _noteOn:
  6747                           	opt callstack 29
  6748                           
  6749                           ;incstack = 0
  6750                           ;noteOn@cmd stored from wreg
  6751  00DE5C  6E04               	movwf	noteOn@cmd^0,c
  6752  00DE5E                     
  6753                           ;main.c: 289:   putByteSCI(cmd);
  6754  00DE5E  5004               	movf	noteOn@cmd^0,w,c
  6755  00DE60  EC50  F06F         	call	_putByteSCI
  6756                           
  6757                           ;main.c: 290:   putByteSCI(pitch);
  6758  00DE64  5002               	movf	noteOn@pitch^0,w,c
  6759  00DE66  EC50  F06F         	call	_putByteSCI
  6760                           
  6761                           ;main.c: 291:   putByteSCI(velocity);
  6762  00DE6A  5003               	movf	noteOn@velocity^0,w,c
  6763  00DE6C  EC50  F06F         	call	_putByteSCI
  6764  00DE70  0012               	return		;funcret
  6765  00DE72                     __end_of_noteOn:
  6766                           	opt callstack 0
  6767                           
  6768 ;; *************** function _putByteSCI *****************
  6769 ;; Defined at:
  6770 ;;		line 280 in file "main.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;  writeByte       1    wreg     unsigned char 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;  writeByte       1    0[COMRAM] unsigned char 
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  1    wreg      void 
  6777 ;; Registers used:
  6778 ;;		wreg
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;Total ram usage:        1 bytes
  6789 ;; Hardware stack levels used:    1
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_main
  6794 ;;		_noteOn
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           	psect	text23
  6799  00DEA0                     __ptext23:
  6800                           	opt callstack 0
  6801  00DEA0                     _putByteSCI:
  6802                           	opt callstack 30
  6803                           
  6804                           ;incstack = 0
  6805                           ;putByteSCI@writeByte stored from wreg
  6806  00DEA0  6E01               	movwf	putByteSCI@writeByte^0,c
  6807  00DEA2                     l153:
  6808  00DEA2  A89E               	btfss	158,4,c	;volatile
  6809  00DEA4  EF56  F06F         	goto	u1871
  6810  00DEA8  EF58  F06F         	goto	u1870
  6811  00DEAC                     u1871:
  6812  00DEAC  EF51  F06F         	goto	l153
  6813  00DEB0                     u1870:
  6814  00DEB0                     
  6815                           ;main.c: 282:         PIR1bits.TX1IF = 0;
  6816  00DEB0  989E               	bcf	158,4,c	;volatile
  6817  00DEB2                     
  6818                           ;main.c: 283:         TX1REG = writeByte;
  6819  00DEB2  C001  FFAD         	movff	putByteSCI@writeByte,4013	;volatile
  6820  00DEB6  0012               	return		;funcret
  6821  00DEB8                     __end_of_putByteSCI:
  6822                           	opt callstack 0
  6823                           
  6824 ;; *************** function _TMR0_WriteTimer *****************
  6825 ;; Defined at:
  6826 ;;		line 115 in file "mcc_generated_files/tmr0.c"
  6827 ;; Parameters:    Size  Location     Type
  6828 ;;  timerVal        2    8[COMRAM] unsigned short 
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;		None
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      void 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6840 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6844 ;;Total ram usage:        2 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; This function calls:
  6847 ;;		Nothing
  6848 ;; This function is called by:
  6849 ;;		_main
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           
  6853                           	psect	text24
  6854  00DDB8                     __ptext24:
  6855                           	opt callstack 0
  6856  00DDB8                     _TMR0_WriteTimer:
  6857                           	opt callstack 30
  6858  00DDB8                     
  6859                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
  6860  00DDB8  500A               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  6861  00DDBA  6ED7               	movwf	215,c	;volatile
  6862  00DDBC                     
  6863                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
  6864  00DDBC  C009  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  6865  00DDC0  0012               	return		;funcret
  6866  00DDC2                     __end_of_TMR0_WriteTimer:
  6867                           	opt callstack 0
  6868                           
  6869 ;; *************** function _TMR0_ReadTimer *****************
  6870 ;; Defined at:
  6871 ;;		line 102 in file "mcc_generated_files/tmr0.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  readVal         2    4[COMRAM] unsigned short 
  6876 ;;  readValHigh     1    7[COMRAM] unsigned char 
  6877 ;;  readValLow      1    6[COMRAM] unsigned char 
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  2    0[COMRAM] unsigned short 
  6880 ;; Registers used:
  6881 ;;		wreg, status,2
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6888 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;Total ram usage:        8 bytes
  6892 ;; Hardware stack levels used:    1
  6893 ;; This function calls:
  6894 ;;		Nothing
  6895 ;; This function is called by:
  6896 ;;		_main
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text25
  6901  00DED4                     __ptext25:
  6902                           	opt callstack 0
  6903  00DED4                     _TMR0_ReadTimer:
  6904                           	opt callstack 30
  6905  00DED4                     
  6906                           ;mcc_generated_files/tmr0.c: 104:     uint16_t readVal;;mcc_generated_files/tmr0.c: 105:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 106:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 108:     readValLow = TMR0L;
  6907  00DED4  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  6908                           
  6909                           ;mcc_generated_files/tmr0.c: 109:     readValHigh = TMR0H;
  6910  00DED8  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  6911  00DEDC                     
  6912                           ;mcc_generated_files/tmr0.c: 110:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  6913  00DEDC  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  6914  00DEDE  6E03               	movwf	??_TMR0_ReadTimer^0,c
  6915  00DEE0  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  6916  00DEE2  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  6917  00DEE4  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  6918  00DEE8                     
  6919                           ;mcc_generated_files/tmr0.c: 112:     return readVal;
  6920  00DEE8  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  6921  00DEEC  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  6922  00DEF0  0012               	return		;funcret
  6923  00DEF2                     __end_of_TMR0_ReadTimer:
  6924                           	opt callstack 0
  6925                           
  6926 ;; *************** function _TMR0_HasOverflowOccured *****************
  6927 ;; Defined at:
  6928 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  6929 ;; Parameters:    Size  Location     Type
  6930 ;;		None
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  1    wreg      _Bool 
  6935 ;; Registers used:
  6936 ;;		wreg
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;Total ram usage:        0 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_main
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text26
  6956  00DE08                     __ptext26:
  6957                           	opt callstack 0
  6958  00DE08                     _TMR0_HasOverflowOccured:
  6959                           	opt callstack 30
  6960  00DE08                     
  6961                           ;mcc_generated_files/tmr0.c: 132:     return(INTCONbits.TMR0IF);
  6962  00DE08  B4F2               	btfsc	242,2,c	;volatile
  6963  00DE0A  EF09  F06F         	goto	u1901
  6964  00DE0E  EF0C  F06F         	goto	u1900
  6965  00DE12                     u1901:
  6966  00DE12  0E01               	movlw	1
  6967  00DE14  EF0D  F06F         	goto	u1906
  6968  00DE18                     u1900:
  6969  00DE18  0E00               	movlw	0
  6970  00DE1A                     u1906:
  6971  00DE1A  0012               	return		;funcret
  6972  00DE1C                     __end_of_TMR0_HasOverflowOccured:
  6973                           	opt callstack 0
  6974                           
  6975 ;; *************** function _SYSTEM_Initialize *****************
  6976 ;; Defined at:
  6977 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;		None
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;		None
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  1    wreg      void 
  6984 ;; Registers used:
  6985 ;;		wreg, status,2, status,0, cstack
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;Total ram usage:        0 bytes
  6996 ;; Hardware stack levels used:    1
  6997 ;; Hardware stack levels required when called:    2
  6998 ;; This function calls:
  6999 ;;		_ADC_Initialize
  7000 ;;		_EUSART1_Initialize
  7001 ;;		_OSCILLATOR_Initialize
  7002 ;;		_PIN_MANAGER_Initialize
  7003 ;;		_TMR0_Initialize
  7004 ;; This function is called by:
  7005 ;;		_main
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text27
  7010  00DE46                     __ptext27:
  7011                           	opt callstack 0
  7012  00DE46                     _SYSTEM_Initialize:
  7013                           	opt callstack 28
  7014  00DE46                     
  7015                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7016  00DE46  ECB4  F06F         	call	_PIN_MANAGER_Initialize	;wreg free
  7017                           
  7018                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7019  00DE4A  EC5C  F06F         	call	_OSCILLATOR_Initialize	;wreg free
  7020                           
  7021                           ;mcc_generated_files/mcc.c: 55:     ADC_Initialize();
  7022  00DE4E  EC18  F06F         	call	_ADC_Initialize	;wreg free
  7023  00DE52                     
  7024                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  7025  00DE52  ECC9  F06F         	call	_TMR0_Initialize	;wreg free
  7026  00DE56                     
  7027                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  7028  00DE56  EC15  F070         	call	_EUSART1_Initialize	;wreg free
  7029  00DE5A  0012               	return		;funcret
  7030  00DE5C                     __end_of_SYSTEM_Initialize:
  7031                           	opt callstack 0
  7032                           
  7033 ;; *************** function _TMR0_Initialize *****************
  7034 ;; Defined at:
  7035 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;		None
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, status,2, status,0
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7052 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7053 ;;Total ram usage:        2 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_SYSTEM_Initialize
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text28
  7063  00DF92                     __ptext28:
  7064                           	opt callstack 0
  7065  00DF92                     _TMR0_Initialize:
  7066                           	opt callstack 29
  7067  00DF92                     
  7068                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
  7069  00DF92  9CD5               	bcf	213,6,c	;volatile
  7070  00DF94                     
  7071                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFC;
  7072  00DF94  0EFC               	movlw	252
  7073  00DF96  6ED7               	movwf	215,c	;volatile
  7074                           
  7075                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0x17;
  7076  00DF98  0E17               	movlw	23
  7077  00DF9A  6ED6               	movwf	214,c	;volatile
  7078  00DF9C                     
  7079                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  7080  00DF9C  50D6               	movf	214,w,c	;volatile
  7081  00DF9E  CFD7 F001          	movff	4055,??_TMR0_Initialize	;volatile
  7082  00DFA2  6A02               	clrf	(??_TMR0_Initialize+1)^0,c
  7083  00DFA4  C001  F002         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  7084  00DFA8  6A01               	clrf	??_TMR0_Initialize^0,c
  7085  00DFAA  1001               	iorwf	??_TMR0_Initialize^0,w,c
  7086  00DFAC  0100               	movlb	0	; () banked
  7087  00DFAE  6FCD               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  7088  00DFB0  5002               	movf	(??_TMR0_Initialize+1)^0,w,c
  7089  00DFB2  6FCE               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  7090  00DFB4                     
  7091                           ; BSR set to: 0
  7092                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
  7093  00DFB4  94F2               	bcf	242,2,c	;volatile
  7094  00DFB6                     
  7095                           ; BSR set to: 0
  7096                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x93;
  7097  00DFB6  0E93               	movlw	147
  7098  00DFB8  6ED5               	movwf	213,c	;volatile
  7099  00DFBA                     
  7100                           ; BSR set to: 0
  7101  00DFBA  0012               	return		;funcret
  7102  00DFBC                     __end_of_TMR0_Initialize:
  7103                           	opt callstack 0
  7104                           
  7105 ;; *************** function _PIN_MANAGER_Initialize *****************
  7106 ;; Defined at:
  7107 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;		None
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;		None
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, status,2
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;Total ram usage:        0 bytes
  7126 ;; Hardware stack levels used:    1
  7127 ;; This function calls:
  7128 ;;		Nothing
  7129 ;; This function is called by:
  7130 ;;		_SYSTEM_Initialize
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text29
  7135  00DF68                     __ptext29:
  7136                           	opt callstack 0
  7137  00DF68                     _PIN_MANAGER_Initialize:
  7138                           	opt callstack 29
  7139  00DF68                     
  7140                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  7141  00DF68  0E00               	movlw	0
  7142  00DF6A  6E89               	movwf	137,c	;volatile
  7143                           
  7144                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  7145  00DF6C  0E00               	movlw	0
  7146  00DF6E  6E8A               	movwf	138,c	;volatile
  7147                           
  7148                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  7149  00DF70  0E00               	movlw	0
  7150  00DF72  6E8B               	movwf	139,c	;volatile
  7151  00DF74                     
  7152                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  7153  00DF74  6892               	setf	146,c	;volatile
  7154  00DF76                     
  7155                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  7156  00DF76  6893               	setf	147,c	;volatile
  7157                           
  7158                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  7159  00DF78  0EBB               	movlw	187
  7160  00DF7A  6E94               	movwf	148,c	;volatile
  7161                           
  7162                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  7163  00DF7C  0E3C               	movlw	60
  7164  00DF7E  010F               	movlb	15	; () banked
  7165  00DF80  6F3A               	movwf	58,b	;volatile
  7166                           
  7167                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  7168  00DF82  0E3F               	movlw	63
  7169  00DF84  6F39               	movwf	57,b	;volatile
  7170                           
  7171                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x23;
  7172  00DF86  0E23               	movlw	35
  7173  00DF88  6F38               	movwf	56,b	;volatile
  7174                           
  7175                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  7176  00DF8A  0E00               	movlw	0
  7177  00DF8C  6E61               	movwf	97,c	;volatile
  7178  00DF8E                     
  7179                           ; BSR set to: 15
  7180                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  7181  00DF8E  8EF1               	bsf	241,7,c	;volatile
  7182  00DF90                     
  7183                           ; BSR set to: 15
  7184  00DF90  0012               	return		;funcret
  7185  00DF92                     __end_of_PIN_MANAGER_Initialize:
  7186                           	opt callstack 0
  7187                           
  7188 ;; *************** function _OSCILLATOR_Initialize *****************
  7189 ;; Defined at:
  7190 ;;		line 60 in file "mcc_generated_files/mcc.c"
  7191 ;; Parameters:    Size  Location     Type
  7192 ;;		None
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;		None
  7195 ;; Return value:  Size  Location     Type
  7196 ;;                  1    wreg      void 
  7197 ;; Registers used:
  7198 ;;		wreg, status,2
  7199 ;; Tracked objects:
  7200 ;;		On entry : 0/0
  7201 ;;		On exit  : 0/0
  7202 ;;		Unchanged: 0/0
  7203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7208 ;;Total ram usage:        0 bytes
  7209 ;; Hardware stack levels used:    1
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_SYSTEM_Initialize
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text30
  7218  00DEB8                     __ptext30:
  7219                           	opt callstack 0
  7220  00DEB8                     _OSCILLATOR_Initialize:
  7221                           	opt callstack 29
  7222  00DEB8                     
  7223                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  7224  00DEB8  0E70               	movlw	112
  7225  00DEBA  6ED3               	movwf	211,c	;volatile
  7226                           
  7227                           ;mcc_generated_files/mcc.c: 65:     OSCCON2 = 0x04;
  7228  00DEBC  0E04               	movlw	4
  7229  00DEBE  6ED2               	movwf	210,c	;volatile
  7230                           
  7231                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x40;
  7232  00DEC0  0E40               	movlw	64
  7233  00DEC2  6E9B               	movwf	155,c	;volatile
  7234  00DEC4                     l317:
  7235                           
  7236                           ;mcc_generated_files/mcc.c: 69:     while(PLLRDY == 0)
  7237  00DEC4  AED2               	btfss	4050,7,c	;volatile
  7238  00DEC6  EF67  F06F         	goto	u1881
  7239  00DECA  EF69  F06F         	goto	u1880
  7240  00DECE                     u1881:
  7241  00DECE  EF62  F06F         	goto	l317
  7242  00DED2                     u1880:
  7243  00DED2  0012               	return		;funcret
  7244  00DED4                     __end_of_OSCILLATOR_Initialize:
  7245                           	opt callstack 0
  7246                           
  7247 ;; *************** function _EUSART1_Initialize *****************
  7248 ;; Defined at:
  7249 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;		None
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;		None
  7254 ;; Return value:  Size  Location     Type
  7255 ;;                  1    wreg      void 
  7256 ;; Registers used:
  7257 ;;		wreg, status,2, status,0, cstack
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7267 ;;Total ram usage:        0 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; Hardware stack levels required when called:    1
  7270 ;; This function calls:
  7271 ;;		_EUSART1_SetErrorHandler
  7272 ;;		_EUSART1_SetFramingErrorHandler
  7273 ;;		_EUSART1_SetOverrunErrorHandler
  7274 ;; This function is called by:
  7275 ;;		_SYSTEM_Initialize
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           	psect	text31
  7280  00E02A                     __ptext31:
  7281                           	opt callstack 0
  7282  00E02A                     _EUSART1_Initialize:
  7283                           	opt callstack 28
  7284  00E02A                     
  7285                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  7286  00E02A  0E08               	movlw	8
  7287  00E02C  6EB8               	movwf	184,c	;volatile
  7288                           
  7289                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  7290  00E02E  0E90               	movlw	144
  7291  00E030  6EAB               	movwf	171,c	;volatile
  7292                           
  7293                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  7294  00E032  0E24               	movlw	36
  7295  00E034  6EAC               	movwf	172,c	;volatile
  7296                           
  7297                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  7298  00E036  0E82               	movlw	130
  7299  00E038  6EAF               	movwf	175,c	;volatile
  7300                           
  7301                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  7302  00E03A  0E06               	movlw	6
  7303  00E03C  6EB0               	movwf	176,c	;volatile
  7304  00E03E                     
  7305                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  7306  00E03E  0E00               	movlw	0
  7307  00E040  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  7308  00E042  0E00               	movlw	0
  7309  00E044  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  7310  00E046  ECD2  F06E         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  7311  00E04A                     
  7312                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  7313  00E04A  0E00               	movlw	0
  7314  00E04C  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  7315  00E04E  0E00               	movlw	0
  7316  00E050  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  7317  00E052  ECD7  F06E         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  7318  00E056                     
  7319                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  7320  00E056  0E00               	movlw	0
  7321  00E058  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  7322  00E05A  0E00               	movlw	0
  7323  00E05C  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  7324  00E05E  ECCD  F06E         	call	_EUSART1_SetErrorHandler	;wreg free
  7325  00E062                     
  7326                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  7327  00E062  0E00               	movlw	0
  7328  00E064  6E5F               	movwf	_eusart1RxLastError^0,c	;volatile
  7329  00E066  0012               	return		;funcret
  7330  00E068                     __end_of_EUSART1_Initialize:
  7331                           	opt callstack 0
  7332                           
  7333 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  7334 ;; Defined at:
  7335 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  7336 ;; Parameters:    Size  Location     Type
  7337 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  7338 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1    wreg      void 
  7343 ;; Registers used:
  7344 ;;		wreg, status,2, status,0
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7354 ;;Total ram usage:        2 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; This function calls:
  7357 ;;		Nothing
  7358 ;; This function is called by:
  7359 ;;		_EUSART1_Initialize
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text32
  7364  00DDAE                     __ptext32:
  7365                           	opt callstack 0
  7366  00DDAE                     _EUSART1_SetOverrunErrorHandler:
  7367                           	opt callstack 28
  7368  00DDAE                     
  7369                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  7370  00DDAE  C001  F0C7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  7371  00DDB2  C002  F0C8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  7372  00DDB6  0012               	return		;funcret
  7373  00DDB8                     __end_of_EUSART1_SetOverrunErrorHandler:
  7374                           	opt callstack 0
  7375                           
  7376 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  7377 ;; Defined at:
  7378 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  7381 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;		None
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1    wreg      void 
  7386 ;; Registers used:
  7387 ;;		wreg, status,2, status,0
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7393 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;Total ram usage:        2 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_EUSART1_Initialize
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text33
  7407  00DDA4                     __ptext33:
  7408                           	opt callstack 0
  7409  00DDA4                     _EUSART1_SetFramingErrorHandler:
  7410                           	opt callstack 28
  7411  00DDA4                     
  7412                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  7413  00DDA4  C001  F0C9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  7414  00DDA8  C002  F0CA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  7415  00DDAC  0012               	return		;funcret
  7416  00DDAE                     __end_of_EUSART1_SetFramingErrorHandler:
  7417                           	opt callstack 0
  7418                           
  7419 ;; *************** function _EUSART1_SetErrorHandler *****************
  7420 ;; Defined at:
  7421 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  7424 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;		None
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  1    wreg      void 
  7429 ;; Registers used:
  7430 ;;		wreg, status,2, status,0
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7440 ;;Total ram usage:        2 bytes
  7441 ;; Hardware stack levels used:    1
  7442 ;; This function calls:
  7443 ;;		Nothing
  7444 ;; This function is called by:
  7445 ;;		_EUSART1_Initialize
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           	psect	text34
  7450  00DD9A                     __ptext34:
  7451                           	opt callstack 0
  7452  00DD9A                     _EUSART1_SetErrorHandler:
  7453                           	opt callstack 28
  7454  00DD9A                     
  7455                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  7456  00DD9A  C001  F0C5         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  7457  00DD9E  C002  F0C6         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  7458  00DDA2  0012               	return		;funcret
  7459  00DDA4                     __end_of_EUSART1_SetErrorHandler:
  7460                           	opt callstack 0
  7461                           
  7462 ;; *************** function _ADC_Initialize *****************
  7463 ;; Defined at:
  7464 ;;		line 62 in file "mcc_generated_files/adc.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;		None
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;		None
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, status,2
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7482 ;;Total ram usage:        0 bytes
  7483 ;; Hardware stack levels used:    1
  7484 ;; This function calls:
  7485 ;;		Nothing
  7486 ;; This function is called by:
  7487 ;;		_SYSTEM_Initialize
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text35
  7492  00DE30                     __ptext35:
  7493                           	opt callstack 0
  7494  00DE30                     _ADC_Initialize:
  7495                           	opt callstack 29
  7496  00DE30                     
  7497                           ;mcc_generated_files/adc.c: 67:     ADCON0 = 0x01;
  7498  00DE30  0E01               	movlw	1
  7499  00DE32  6EC2               	movwf	194,c	;volatile
  7500                           
  7501                           ;mcc_generated_files/adc.c: 70:     ADCON1 = 0x00;
  7502  00DE34  0E00               	movlw	0
  7503  00DE36  6EC1               	movwf	193,c	;volatile
  7504                           
  7505                           ;mcc_generated_files/adc.c: 73:     ADCON2 = 0x26;
  7506  00DE38  0E26               	movlw	38
  7507  00DE3A  6EC0               	movwf	192,c	;volatile
  7508                           
  7509                           ;mcc_generated_files/adc.c: 76:     ADRESL = 0x00;
  7510  00DE3C  0E00               	movlw	0
  7511  00DE3E  6EC3               	movwf	195,c	;volatile
  7512                           
  7513                           ;mcc_generated_files/adc.c: 79:     ADRESH = 0x00;
  7514  00DE40  0E00               	movlw	0
  7515  00DE42  6EC4               	movwf	196,c	;volatile
  7516  00DE44  0012               	return		;funcret
  7517  00DE46                     __end_of_ADC_Initialize:
  7518                           	opt callstack 0
  7519                           
  7520 ;; *************** function _EUSART1_is_rx_ready *****************
  7521 ;; Defined at:
  7522 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;		None
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;		None
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  1    wreg      _Bool 
  7529 ;; Registers used:
  7530 ;;		wreg
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7540 ;;Total ram usage:        0 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; This function calls:
  7543 ;;		Nothing
  7544 ;; This function is called by:
  7545 ;;		_main
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           	psect	text36
  7550  00DDF4                     __ptext36:
  7551                           	opt callstack 0
  7552  00DDF4                     _EUSART1_is_rx_ready:
  7553                           	opt callstack 30
  7554  00DDF4                     
  7555                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  7556  00DDF4  BA9E               	btfsc	158,5,c	;volatile
  7557  00DDF6  EFFF  F06E         	goto	u1931
  7558  00DDFA  EF02  F06F         	goto	u1930
  7559  00DDFE                     u1931:
  7560  00DDFE  0E01               	movlw	1
  7561  00DE00  EF03  F06F         	goto	u1936
  7562  00DE04                     u1930:
  7563  00DE04  0E00               	movlw	0
  7564  00DE06                     u1936:
  7565  00DE06  0012               	return		;funcret
  7566  00DE08                     __end_of_EUSART1_is_rx_ready:
  7567                           	opt callstack 0
  7568                           
  7569 ;; *************** function _EUSART1_Read *****************
  7570 ;; Defined at:
  7571 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;		None
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;		None
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  1    wreg      unsigned char 
  7578 ;; Registers used:
  7579 ;;		wreg, status,2
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7589 ;;Total ram usage:        0 bytes
  7590 ;; Hardware stack levels used:    1
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_main
  7595 ;;		_getch
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text37
  7600  00DF18                     __ptext37:
  7601                           	opt callstack 0
  7602  00DF18                     _EUSART1_Read:
  7603                           	opt callstack 30
  7604  00DF18                     l259:
  7605                           
  7606                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  7607  00DF18  AA9E               	btfss	158,5,c	;volatile
  7608  00DF1A  EF91  F06F         	goto	u1941
  7609  00DF1E  EF93  F06F         	goto	u1940
  7610  00DF22                     u1941:
  7611  00DF22  EF8C  F06F         	goto	l259
  7612  00DF26                     u1940:
  7613  00DF26                     
  7614                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  7615  00DF26  0E00               	movlw	0
  7616  00DF28  6E5F               	movwf	_eusart1RxLastError^0,c	;volatile
  7617  00DF2A                     
  7618                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  7619  00DF2A  A2AB               	btfss	171,1,c	;volatile
  7620  00DF2C  EF9A  F06F         	goto	u1951
  7621  00DF30  EF9C  F06F         	goto	u1950
  7622  00DF34                     u1951:
  7623  00DF34  EF9E  F06F         	goto	l2593
  7624  00DF38                     u1950:
  7625  00DF38                     
  7626                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  7627  00DF38  98AB               	bcf	171,4,c	;volatile
  7628                           
  7629                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  7630  00DF3A  88AB               	bsf	171,4,c	;volatile
  7631  00DF3C                     l2593:
  7632                           
  7633                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  7634  00DF3C  50AE               	movf	174,w,c	;volatile
  7635  00DF3E  0012               	return		;funcret
  7636  00DF40                     __end_of_EUSART1_Read:
  7637                           	opt callstack 0
  7638                           
  7639 ;; *************** function _ADC_StartConversion *****************
  7640 ;; Defined at:
  7641 ;;		line 91 in file "mcc_generated_files/adc.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;		None
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;		None
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1    wreg      void 
  7648 ;; Registers used:
  7649 ;;		None
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 0/0
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7659 ;;Total ram usage:        0 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; This function calls:
  7662 ;;		Nothing
  7663 ;; This function is called by:
  7664 ;;		_main
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text38
  7669  00DD96                     __ptext38:
  7670                           	opt callstack 0
  7671  00DD96                     _ADC_StartConversion:
  7672                           	opt callstack 30
  7673  00DD96                     
  7674                           ;mcc_generated_files/adc.c: 94:     ADCON0bits.GO_nDONE = 1;
  7675  00DD96  82C2               	bsf	194,1,c	;volatile
  7676  00DD98  0012               	return		;funcret
  7677  00DD9A                     __end_of_ADC_StartConversion:
  7678                           	opt callstack 0
  7679                           
  7680 ;; *************** function _ADC_SelectChannel *****************
  7681 ;; Defined at:
  7682 ;;		line 83 in file "mcc_generated_files/adc.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;  channel         1    wreg     enum E5751
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;  channel         1    1[COMRAM] enum E5751
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      void 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7700 ;;Total ram usage:        2 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; This function calls:
  7703 ;;		Nothing
  7704 ;; This function is called by:
  7705 ;;		_main
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           	psect	text39
  7710  00DE88                     __ptext39:
  7711                           	opt callstack 0
  7712  00DE88                     _ADC_SelectChannel:
  7713                           	opt callstack 30
  7714                           
  7715                           ;incstack = 0
  7716                           ;ADC_SelectChannel@channel stored from wreg
  7717  00DE88  6E02               	movwf	ADC_SelectChannel@channel^0,c
  7718  00DE8A                     
  7719                           ;mcc_generated_files/adc.c: 83: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 84: {;mcc_generated_files/adc.c: 86:     ADCON0bits.CHS = channel;
  7720  00DE8A  C002  F001         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  7721  00DE8E  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  7722  00DE90  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  7723  00DE92  50C2               	movf	194,w,c	;volatile
  7724  00DE94  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  7725  00DE96  0B83               	andlw	-125
  7726  00DE98  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  7727  00DE9A  6EC2               	movwf	194,c	;volatile
  7728  00DE9C                     
  7729                           ;mcc_generated_files/adc.c: 88:     ADCON0bits.ADON = 1;
  7730  00DE9C  80C2               	bsf	194,0,c	;volatile
  7731  00DE9E  0012               	return		;funcret
  7732  00DEA0                     __end_of_ADC_SelectChannel:
  7733                           	opt callstack 0
  7734                           
  7735 ;; *************** function _ADC_IsConversionDone *****************
  7736 ;; Defined at:
  7737 ;;		line 98 in file "mcc_generated_files/adc.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      _Bool 
  7744 ;; Registers used:
  7745 ;;		wreg
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7755 ;;Total ram usage:        0 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; This function calls:
  7758 ;;		Nothing
  7759 ;; This function is called by:
  7760 ;;		_main
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text40
  7765  00DDE0                     __ptext40:
  7766                           	opt callstack 0
  7767  00DDE0                     _ADC_IsConversionDone:
  7768                           	opt callstack 30
  7769  00DDE0                     
  7770                           ;mcc_generated_files/adc.c: 101:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  7771  00DDE0  A2C2               	btfss	194,1,c	;volatile
  7772  00DDE2  EFF5  F06E         	goto	u1911
  7773  00DDE6  EFF8  F06E         	goto	u1910
  7774  00DDEA                     u1911:
  7775  00DDEA  0E01               	movlw	1
  7776  00DDEC  EFF9  F06E         	goto	u1920
  7777  00DDF0                     u1910:
  7778  00DDF0  0E00               	movlw	0
  7779  00DDF2                     u1920:
  7780  00DDF2  0012               	return		;funcret
  7781  00DDF4                     __end_of_ADC_IsConversionDone:
  7782                           	opt callstack 0
  7783                           
  7784 ;; *************** function _ADC_GetConversionResult *****************
  7785 ;; Defined at:
  7786 ;;		line 104 in file "mcc_generated_files/adc.c"
  7787 ;; Parameters:    Size  Location     Type
  7788 ;;		None
  7789 ;; Auto vars:     Size  Location     Type
  7790 ;;		None
  7791 ;; Return value:  Size  Location     Type
  7792 ;;                  2    0[COMRAM] unsigned short 
  7793 ;; Registers used:
  7794 ;;		wreg, status,2, status,0
  7795 ;; Tracked objects:
  7796 ;;		On entry : 0/0
  7797 ;;		On exit  : 0/0
  7798 ;;		Unchanged: 0/0
  7799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;Total ram usage:        4 bytes
  7805 ;; Hardware stack levels used:    1
  7806 ;; This function calls:
  7807 ;;		Nothing
  7808 ;; This function is called by:
  7809 ;;		_main
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text41
  7814  00DDCC                     __ptext41:
  7815                           	opt callstack 0
  7816  00DDCC                     _ADC_GetConversionResult:
  7817                           	opt callstack 30
  7818  00DDCC                     
  7819                           ;mcc_generated_files/adc.c: 107:      return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7820  00DDCC  50C4               	movf	196,w,c	;volatile
  7821  00DDCE  6E04               	movwf	(??_ADC_GetConversionResult+1)^0,c
  7822  00DDD0  6A03               	clrf	??_ADC_GetConversionResult^0,c
  7823  00DDD2  50C3               	movf	195,w,c	;volatile
  7824  00DDD4  2403               	addwf	??_ADC_GetConversionResult^0,w,c
  7825  00DDD6  6E01               	movwf	?_ADC_GetConversionResult^0,c
  7826  00DDD8  0E00               	movlw	0
  7827  00DDDA  2004               	addwfc	(??_ADC_GetConversionResult+1)^0,w,c
  7828  00DDDC  6E02               	movwf	(?_ADC_GetConversionResult+1)^0,c
  7829  00DDDE  0012               	return		;funcret
  7830  00DDE0                     __end_of_ADC_GetConversionResult:
  7831                           	opt callstack 0
  7832                           
  7833                           	psect	rparam
  7834  0000                     tosu	equ	0xFFF
  7835                           tosh	equ	0xFFE
  7836                           tosl	equ	0xFFD
  7837                           stkptr	equ	0xFFC
  7838                           pclatu	equ	0xFFB
  7839                           pclath	equ	0xFFA
  7840                           pcl	equ	0xFF9
  7841                           tblptru	equ	0xFF8
  7842                           tblptrh	equ	0xFF7
  7843                           tblptrl	equ	0xFF6
  7844                           tablat	equ	0xFF5
  7845                           prodh	equ	0xFF4
  7846                           prodl	equ	0xFF3
  7847                           indf0	equ	0xFEF
  7848                           postinc0	equ	0xFEE
  7849                           postdec0	equ	0xFED
  7850                           preinc0	equ	0xFEC
  7851                           plusw0	equ	0xFEB
  7852                           fsr0h	equ	0xFEA
  7853                           fsr0l	equ	0xFE9
  7854                           wreg	equ	0xFE8
  7855                           indf1	equ	0xFE7
  7856                           postinc1	equ	0xFE6
  7857                           postdec1	equ	0xFE5
  7858                           preinc1	equ	0xFE4
  7859                           plusw1	equ	0xFE3
  7860                           fsr1h	equ	0xFE2
  7861                           fsr1l	equ	0xFE1
  7862                           bsr	equ	0xFE0
  7863                           indf2	equ	0xFDF
  7864                           postinc2	equ	0xFDE
  7865                           postdec2	equ	0xFDD
  7866                           preinc2	equ	0xFDC
  7867                           plusw2	equ	0xFDB
  7868                           fsr2h	equ	0xFDA
  7869                           fsr2l	equ	0xFD9
  7870                           status	equ	0xFD8


Data Sizes:
    Strings     1614
    Constant    0
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     93     143
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_58(CODE[17]), STR_57(CODE[50]), STR_56(CODE[25]), STR_55(CODE[38]), 
		 -> STR_54(CODE[41]), STR_53(CODE[42]), STR_52(CODE[67]), STR_51(CODE[68]), 
		 -> STR_50(CODE[52]), STR_49(CODE[48]), STR_48(CODE[42]), STR_47(CODE[26]), 
		 -> STR_46(CODE[31]), STR_45(CODE[35]), STR_44(CODE[37]), STR_43(CODE[15]), 
		 -> STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), STR_39(CODE[20]), 
		 -> STR_38(CODE[23]), STR_37(CODE[26]), STR_36(CODE[38]), STR_35(CODE[29]), 
		 -> STR_34(CODE[20]), STR_33(CODE[3]), STR_32(CODE[5]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[41]), STR_28(CODE[17]), STR_27(CODE[36]), 
		 -> STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), STR_19(CODE[27]), 
		 -> STR_18(CODE[68]), STR_17(CODE[49]), STR_16(CODE[48]), STR_15(CODE[38]), 
		 -> STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), STR_7(CODE[17]), 
		 -> STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[22]), 
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1538_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_58(CODE[17]), STR_57(CODE[50]), STR_56(CODE[25]), STR_55(CODE[38]), 
		 -> STR_54(CODE[41]), STR_53(CODE[42]), STR_52(CODE[67]), STR_51(CODE[68]), 
		 -> STR_50(CODE[52]), STR_49(CODE[48]), STR_48(CODE[42]), STR_47(CODE[26]), 
		 -> STR_46(CODE[31]), STR_45(CODE[35]), STR_44(CODE[37]), STR_43(CODE[15]), 
		 -> STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), STR_39(CODE[20]), 
		 -> STR_38(CODE[23]), STR_37(CODE[26]), STR_36(CODE[38]), STR_35(CODE[29]), 
		 -> STR_34(CODE[20]), STR_33(CODE[3]), STR_32(CODE[5]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[41]), STR_28(CODE[17]), STR_27(CODE[36]), 
		 -> STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), STR_19(CODE[27]), 
		 -> STR_18(CODE[68]), STR_17(CODE[49]), STR_16(CODE[48]), STR_15(CODE[38]), 
		 -> STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), STR_7(CODE[17]), 
		 -> STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[22]), 
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 74
		 -> STR_58(CODE[17]), STR_57(CODE[50]), STR_56(CODE[25]), STR_55(CODE[38]), 
		 -> STR_54(CODE[41]), STR_53(CODE[42]), STR_52(CODE[67]), STR_51(CODE[68]), 
		 -> STR_50(CODE[52]), STR_49(CODE[48]), STR_48(CODE[42]), STR_47(CODE[26]), 
		 -> STR_46(CODE[31]), STR_45(CODE[35]), STR_44(CODE[37]), STR_43(CODE[15]), 
		 -> STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), STR_39(CODE[20]), 
		 -> STR_38(CODE[23]), STR_37(CODE[26]), STR_36(CODE[38]), STR_35(CODE[29]), 
		 -> STR_34(CODE[20]), STR_33(CODE[3]), STR_32(CODE[5]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[41]), STR_28(CODE[17]), STR_27(CODE[36]), 
		 -> STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), STR_19(CODE[27]), 
		 -> STR_18(CODE[68]), STR_17(CODE[49]), STR_16(CODE[48]), STR_15(CODE[38]), 
		 -> STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), STR_7(CODE[17]), 
		 -> STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[22]), 
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 74
		 -> STR_58(CODE[17]), STR_57(CODE[50]), STR_56(CODE[25]), STR_55(CODE[38]), 
		 -> STR_54(CODE[41]), STR_53(CODE[42]), STR_52(CODE[67]), STR_51(CODE[68]), 
		 -> STR_50(CODE[52]), STR_49(CODE[48]), STR_48(CODE[42]), STR_47(CODE[26]), 
		 -> STR_46(CODE[31]), STR_45(CODE[35]), STR_44(CODE[37]), STR_43(CODE[15]), 
		 -> STR_42(CODE[27]), STR_41(CODE[24]), STR_40(CODE[23]), STR_39(CODE[20]), 
		 -> STR_38(CODE[23]), STR_37(CODE[26]), STR_36(CODE[38]), STR_35(CODE[29]), 
		 -> STR_34(CODE[20]), STR_33(CODE[3]), STR_32(CODE[5]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[41]), STR_28(CODE[17]), STR_27(CODE[36]), 
		 -> STR_26(CODE[72]), STR_25(CODE[38]), STR_24(CODE[74]), STR_23(CODE[2]), 
		 -> STR_22(CODE[2]), STR_21(CODE[13]), STR_20(CODE[52]), STR_19(CODE[27]), 
		 -> STR_18(CODE[68]), STR_17(CODE[49]), STR_16(CODE[48]), STR_15(CODE[38]), 
		 -> STR_14(CODE[33]), STR_13(CODE[25]), STR_12(CODE[22]), STR_11(CODE[7]), 
		 -> STR_10(CODE[15]), STR_9(CODE[52]), STR_8(CODE[41]), STR_7(CODE[17]), 
		 -> STR_6(CODE[23]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[22]), 
		 -> STR_2(CODE[21]), STR_1(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _utoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace
    _noteOn->_putByteSCI
    _TMR0_WriteTimer->_TMR0_ReadTimer
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                75    75      0   22400
                                             18 BANK0     75    75      0
            _ADC_GetConversionResult
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                     _TMR0_ReadTimer
                    _TMR0_WriteTimer
                             _noteOn
                             _printf
                         _putByteSCI
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   20462
                                              8 BANK0     10     4      6
            _ADC_GetConversionResult (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   15994
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   15626
                                             65 COMRAM    29    23      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    4171
                                             29 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4770
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    3341
                                             29 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3121
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1213
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     812
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1336
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     495
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _noteOn                                               3     1      2     392
                                              1 COMRAM     3     1      2
                         _putByteSCI
 ---------------------------------------------------------------------------------
 (1) _putByteSCI                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     272
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversionResult                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversionResult
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_ReadTimer
   _TMR0_WriteTimer
     _TMR0_ReadTimer (ARG)
   _noteOn
     _putByteSCI
   _printf
     _ADC_GetConversionResult (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
   _putByteSCI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5D      8F       5       89.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      EE      12        0.0%
DATA                 0      0      EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Apr 02 08:47:20 2020

               __end_of_TMR0_HasOverflowOccured DE1C                                              l15 DFBA  
                                            l24 DEF0                                              l33 DE1A  
                                            l27 DDC0                                              l85 F448  
                           ___wmul@multiplicand 0003                                 _timer0ReloadVal 00CD  
                                  __CFG_CP0$OFF 000000                                    __CFG_CP1$OFF 000000  
                                  __CFG_CP2$OFF 000000                                    __CFG_CP3$OFF 000000  
                                   __CFG_LVP$ON 000000                                             l112 F5B0  
                                           l320 DED2                                             l153 DEA2  
                                           l401 EC48                                             l250 DE06  
                                           l242 E066                                             l314 DE5A  
                                           l138 F87A                                             l155 DEB0  
                                           l156 DEB6                                             l181 DE9E  
                                           l317 DEC4                                             l190 DDDE  
                                           l263 DF3E                                             l159 DE70  
                                           l184 DD98                                             l424 E9D6  
                                           l178 DE44                                             l290 DDB6  
                                           l266 DE74                                             l434 EB9E  
                                           l426 E9DE                                             l187 DDF2  
                                           l259 DF18                                             l347 DF90  
                                           l275 DDCA                                             l419 EE80  
                                           l460 E1FA                                             l293 DDA2  
                                           l269 DE86                                             l381 E2D8  
                                           l287 DDAC                                             l463 DF16  
                                           l384 E31A                                             l393 E196  
                                           l449 F25A                                             l386 E356  
                                           l459 E1F2                                             l901 E4F6  
                                           l590 E67A                                             l399 EC40  
                                           l911 E406                                             l577 E802  
                                           l908 E516                                             l918 E426  
                                  __CFG_CPB$OFF 000000                                    __CFG_CPD$OFF 000000  
                                           _abs E068                                             _pad E292  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          ?_abs 0013                                            l2101 E2D0  
                                          l1141 E0A6                                            l1213 DF66  
                                          l1206 E0EA                                            l2111 E33E  
                                          l2103 E2E4                                            l2105 E2F8  
                                          l2201 E62A                                            l1138 E09E  
                                          l2123 DEF2                                            l1219 DFF0  
                                          l2107 E2FC                                            l2131 E680  
                                          l2203 E63A                                            l2115 E068  
                                          l2211 E434                                            l1172 E99C  
                                          l2125 DF0E                                            l2061 E1FC  
                                          l2109 E32A                                            l2141 E6E0  
                                          l2133 E68E                                            l2205 E65A  
                                          l2117 E082                                            l2301 ED0E  
                                          l2221 E48E                                            l2213 E452  
                                          l1175 E028                                            l2119 DFF2  
                                          l1183 E13C                                            l2055 DE74  
                                          l2071 E27E                                            l2063 E20E  
                                          l2151 E72A                                            l2143 E6E4  
                                          l2135 E6AE                                            l2311 EDB6  
                                          l2303 ED14                                            l2223 E4BC  
                                          l2215 E45A                                            l2231 E358  
                                          l1169 E994                                            l2057 DE82  
                                          l2065 E220                                            l2081 E0CA  
                                          l2161 E79A                                            l2153 E738  
                                          l2145 E6F0                                            l2137 E6B2  
                                          l2129 E67C                                            l2321 EE1C  
                                          l2313 EDD0                                            l2305 ED1A  
                                          l2225 E4DC                                            l2217 E46E  
                                          l2209 E428                                            l2241 E3CE  
                                          l2233 E376                                            l2251 E104  
                                          l2403 E954                                            l2059 DDC4  
                                          l2067 E22A                                            l2075 E0A8  
                                          l2083 DFBC                                            l2163 E7AC  
                                          l2155 E74A                                            l2147 E70E  
                                          l2139 E6C0                                            l2323 EE22  
                                          l2331 EE58                                            l2315 EDEA  
                                          l2307 ED7E                                            l2227 E4DE  
                                          l2219 E47C                                            l2243 E3EE  
                                          l2235 E37E                                            l2413 DDA4  
                                          l2501 DFB4                                            l2253 E132  
                                          l2405 E966                                            l2069 E248  
                                          l2077 E0B4                                            l2085 DFC8  
                                          l2093 E292                                            l2261 E152  
                                          l2157 E778                                            l2149 E716  
                                          l2165 E7B2                                            l2181 E54E  
                                          l2173 E518                                            l2325 EE34  
                                          l2309 ED98                                            l2317 EDFA  
                                          l2229 E4F0                                            l2245 E400  
                                          l2237 E392                                            l2341 E9CA  
                                          l2421 EEA8                                            l1198 E290  
                                          l2415 DDAE                                            l2511 E02A  
                                          l2503 DFB6                                            l2255 E136  
                                          l2247 E0EC                                            l2407 E978  
                                          l2079 E0C6                                            l2087 DFCC  
                                          l2095 E2A2                                            l2263 E15E  
                                          l2167 E7C2                                            l2159 E798  
                                          l2191 E5B6                                            l2183 E55C  
                                          l2175 E51C                                            l2327 EE40  
                                          l2319 EE0C                                            l2239 E3A0  
                                          l2351 EA92                                            l2343 EA06  
                                          l2335 E99E                                            l2431 EF28  
                                          l2423 EEB6                                            l2417 DD9A  
                                          l2513 E03E                                            l2521 DF68  
                                          l2505 DEA2                                            l2249 E0F0  
                                          l2089 DFE4                                            l2097 E2B6  
                                          l2265 E16A                                            l2169 E7E2  
                                          l2193 E5C4                                            l2185 E57C  
                                          l2177 E52A                                            l2329 EE48  
                                          l2281 EC18                                            l2273 EBA0  
                                          l2361 EB32                                            l2353 EA98  
                                          l2345 EA0E                                            l2337 E9AE  
                                          l2433 EF36                                            l2425 EEC8  
                                          l2515 E04A                                            l2523 DF74  
                                          l2507 DEB2                                            l2371 E804  
                                          l2099 E2C4                                            l2267 E16E  
                                          l2259 E13E                                            l2195 E5F2  
                                          l2187 E59A                                            l2179 E54A  
                                          l2291 EC70                                            l2283 EC1A  
                                          l2275 EBC0                                            l2363 EB4C  
                                          l2355 EA9E                                            l2347 EA16  
                                          l2339 E9B0                                            l2443 EFBA  
                                          l2435 EF44                                            l2427 EECC  
                                          l2419 EE82                                            l2531 E198  
                                          l2611 F28E                                            l2603 F25C  
                                          l2509 DE30                                            l2517 E056  
                                          l2525 DF76                                            l2541 DEDC  
                                          l2381 E876                                            l2373 E818  
                                          l2269 E172                                            l2197 E612  
                                          l2189 E5A2                                            l2293 EC76  
                                          l2285 EC34                                            l2277 EBE8  
                                          l2365 EB66                                            l2349 EA1C  
                                          l2357 EB02                                            l2453 F040  
                                          l2437 EF64                                            l2445 EFCC  
                                          l2429 EEF2                                            l2533 E1A0  
                                          l2701 F5B6                                            l2621 F2D0  
                                          l2613 F29C                                            l2605 F276  
                                          l2519 E062                                            l2527 DF8E  
                                          l2551 DE08                                            l2543 DEE8  
                                          l2391 E89E                                            l2383 E87A  
                                          l2375 E81C                                            l2199 E624  
                                          l2295 EC7E                                            l2287 EC50  
                                          l2279 EC08                                            l2359 EB14  
                                          l2367 EB76                                            l2471 F1B4  
                                          l2463 F10C                                            l2455 F066  
                                          l2447 EFF2                                            l2439 EF72  
                                          l2535 E1AE                                            l2711 F618  
                                          l2703 F5B8                                            l2631 F424  
                                          l2623 F2E0                                            l2615 F2AA  
                                          l2607 F27A                                            l2561 DE8A  
                                          l2529 DEB8                                            l2393 E8A6  
                                          l2377 E820                                            l2297 EC86  
                                          l2289 EC62                                            l2473 F1DA  
                                          l2481 F208                                            l2465 F132  
                                          l2457 F08C                                            l2449 F024  
                                          l2537 E1D4                                            l2713 F61A  
                                          l2705 F5CC                                            l2641 F438  
                                          l2625 F2F4                                            l2617 F2B8  
                                          l2609 F280                                            l2563 DE9C  
                                          l2571 DD96                                            l2555 DE46  
                                          l2539 DED4                                            l2547 DDB8  
                                          l2395 E8DC                                            l2387 E880  
                                          l2379 E83E                                            l2299 EC8C  
                                          l2483 F216                                            l2475 F1E8  
                                          l2467 F17C                                            l2459 F0D4  
                                          l2731 F6A0                                            l2715 F61E  
                                          l2707 F5EA                                            l2651 F45E  
                                          l2643 F44E                                            l2627 F300  
                                          l2619 F2BC                                            l2573 DDE0  
                                          l2581 DDF4                                            l2557 DE52  
                                          l2549 DDBC                                            l2389 E896  
                                          l2477 F1FC                                            l2565 DF40  
                                          l2741 F6C0                                            l2733 F6A2  
                                          l2725 F666                                            l2709 F5FA  
                                          l2717 F632                                            l2661 F49A  
                                          l2653 F462                                            l2637 F428  
                                          l2629 F414                                            l2591 DF38  
                                          l2495 DF92                                            l2559 DE56  
                                          l2399 E914                                            l2487 F222  
                                          l2567 DF4A                                            l2751 F6F6  
                                          l2743 F6D0                                            l2735 F6A6  
                                          l2727 F680                                            l2719 F662  
                                          l2671 F4E4                                            l2663 F49E  
                                          l2655 F476                                            l2639 F434  
                                          l2577 DDCC                                            l2593 DF3C  
                                          l2585 DF18                                            l2497 DF94  
                                          l2489 F248                                            l2761 F730  
                                          l2753 F6FA                                            l2737 F6A8  
                                          l2729 F69E                                            l2681 F524  
                                          l2673 F4F8                                            l2665 F4B2  
                                          l2657 F482                                            l2649 F452  
                                          l2587 DF26                                            l2499 DF9C  
                                          l2771 F8AE                                            l2763 F870  
                                          l2755 F70A                                            l2739 F6BC  
                                          l2691 F56A                                            l2683 F53A  
                                          l2675 F4FC                                            l2667 F4C2  
                                          l2659 F496                                            l2589 DF2A  
                                          l2597 DE5E                                            l2781 F8E8  
                                          l2773 F8B0                                            l2765 F876  
                                          l2757 F716                                            l2749 F6D4  
                                          l2693 F57C                                            l2685 F54C  
                                          l2677 F500                                            l2669 F4D8  
                                          ?_pad 0013                                            l2791 F914  
                                          l2783 F8EC                                            l2775 F8C4  
                                          l2767 F88C                                            l2759 F716  
                                          l2695 F588                                            l2687 F552  
                                          l2679 F514                                            l2857 F93E  
                                          l2785 F8F4                                            l2777 F8D2  
                                          l2769 F89A                                            l2697 F590  
                                          l2689 F554                                            l2859 E8C6  
                                          l2787 F8FA                                            l2779 F8D8  
                                          l2699 F5B2                                            l2795 F92A  
                                          l2789 F902                                            STR_1 FF56  
                                          STR_2 FF19                                            STR_3 FEED  
                                          STR_4 FFF5                                            STR_5 FB42  
                                          STR_6 FED6                                            STR_7 FFA1  
                                          STR_8 FC8C                                            STR_9 FB42  
                                          u1100 DE82                                            u1101 DE7E  
                                          u1110 E20E                                            u1111 E20A  
                                          u1120 E220                                            u1200 E32A  
                                          u2000 F496                                            u1121 E21C  
                                          u1201 E326                                            u2001 F492  
                                          u1130 E248                                            u1210 E082  
                                          u2010 F4B2                                            u1131 E244  
                                          u1211 E07E                                            u2011 F4AE  
                                          u1220 E022                                            u1140 E27E  
                                          u1300 E7C2                                            u2100 F6D0  
                                          u2020 F4F8                                            u1221 E01C  
                                          u1141 E27A                                            u1301 E7BE  
                                          u2101 F6CC                                            u2021 F4F4  
                                          u1230 E024                                            u1150 E0EA  
                                          u1310 E52A                                            u2110 F70A  
                                          u2030 F514                                            u1151 E0E6  
                                          u1311 E526                                            u2111 F706  
                                          u2031 F510                                            u1160 DFE4  
                                          u1240 E68E                                            u1320 E55C  
                                          u1400 E4BC                                            u2120 F888  
                                          u2040 F54C                                            u1161 DFE0  
                                          u1241 E68A                                            u1321 E558  
                                          u1401 E4B8                                            u2121 F884  
                                          u2041 F548                                            u1170 E2A2  
                                          u1250 E6C0                                            u1330 E59A  
                                          u1410 E376                                            u2130 F8C4  
                                          u2050 F57C                                            u1171 E29E  
                                          u1251 E6BC                                            u1331 E596  
                                          u1411 E372                                            u2131 F8C0  
                                          u2051 F578                                            u1180 E2C4  
                                          u1340 E5C4                                            u1500 EC18  
                                          u1420 E3A0                                            u2140 F8E8  
                                          u2060 F5CC                                            u1181 E2C0  
                                          u1261 E6EA                                            u1341 E5C0  
                                          u1501 EC14                                            u1421 E39C  
                                          u2141 F8E4                                            u2061 F5C8  
                                          _LATA 000F89                                            u1190 E31A  
                                          u1270 E70E                                            u1350 E5F2  
                                          u1510 EC34                                            u1430 E3CE  
                                          u2150 F910                                            u2070 F632  
                                          _LATB 000F8A                                            u1191 E316  
                                          u1271 E70A                                            u1351 E5EE  
                                          u1511 EC30                                            u1431 E3CA  
                                          u2151 F90C                                            u2071 F62E  
                                          _LATC 000F8B                                            u1440 E104  
                                          u1280 E738                                            u1360 E63A  
                                          u1600 EE1C                                            u1520 EC62  
                                          u2080 F662                                            u1441 E100  
                                          u1281 E734                                            u1361 E636  
                                          u1601 EE18                                            u1521 EC5E  
                                          u2081 F65E                                            u1450 E132  
                                          u1290 E778                                            u1610 EE34  
                                          u1530 EC70                                            u2090 F6BC  
                                          u1451 E12E                                            u1291 E774  
                                          u1611 EE30                                            u1531 EC6C  
                                          u1371 E42E                                            u2091 F6B8  
                                          u1700 E876                                            u1460 E152  
                                          u1540 ED98                                            u1380 E452  
                                          u1620 E9AE                                            u1701 E872  
                                          u1461 E14E                                            u1541 ED94  
                                          u1381 E44E                                            u1621 E9AA  
                                          u1710 E892                                            u1550 EDB6  
                                          u1470 EBD0                                            u1390 E47C  
                                          u1630 E9CA                                            u1711 E88E  
                                          u1551 EDB2                                            u1471 EBCA  
                                          u1391 E478                                            u1631 E9C6  
                                          u1720 E94E                                            u1560 EDD0  
                                          u1480 EBD2                                            u1640 EB14  
                                          u1800 EFB6                                            u1721 E948  
                                          u1561 EDCC                                            u1641 EB10  
                                          u1730 E950                                            u1570 EDEA  
                                          u1490 EBE8                                            u1650 EB32  
                                          u1810 EFCC                                            u1571 EDE6  
                                          u1491 EBE4                                            u1651 EB2E  
                                          u1811 EFC8                                            u1900 DE18  
                                          u1740 E966                                            u1580 EDFA  
                                          u1660 EB4C                                            u1820 EFF2  
                                          u1901 DE12                                            u1741 E962  
                                          u1581 EDF6                                            u1661 EB48  
                                          u1821 EFEE                                            u1910 DDF0  
                                          u1750 E978                                            u1590 EE0C  
                                          u1670 EB66                                            u1830 F066  
                                          u1911 DDEA                                            u1751 E974  
                                          u1591 EE08                                            u1671 EB62  
                                          u1831 F062                                            u1920 DDF2  
                                          u1680 EB76                                            u1840 F08C  
                                          u1760 EEA8                                            u1681 EB72  
                                          u1841 F088                                            u1761 EEA4  
                                          u1930 DE04                                            u1906 DE1A  
                                          u1690 E83E                                            u1850 F132  
                                          u1770 EEF2                                            u1931 DDFE  
                                          u1691 E83A                                            u1851 F12E  
                                          u1771 EEEE                                            u1940 DF26  
                                          u1860 F1DA                                            u1780 EF36  
                                          u1941 DF22                                            u1861 F1D6  
                                          u1781 EF32                                            u1950 DF38  
                                          u1870 DEB0                                            u1790 EFB4  
                                          u1951 DF34                                            u1871 DEAC  
                                          u1791 EFAE                                            u1936 DE06  
                                          u1880 DED2                                            u1960 F2D0  
                                          u1881 DECE                                            u1961 F2CC  
                                          u1890 E1F2                                            u1970 F2F4  
                                          u1891 E1EE                                            u1971 F2F0  
                                          u1980 F448                                            u1981 F444  
                                          u1990 F472                                            u1991 F46E  
                                          _WPUB 000F61                                   _EUSART1_Write DE72  
                                          abs@a 0013                                            _dbuf 00CF  
                                          _atoi E804                                            _ctoa E13E  
                                          _main F25C                                            _dtoa EBA0  
                                 ?_EUSART1_Read 0001                                            _prec 00C1  
                                          _nout 00BD                                            pad@i 001A  
                                          pad@p 0017                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 001C  
                                          fsr2l 000FD9                                            _utoa E99E  
                                 __CFG_BORV$190 000000                                            prodh 000FF4  
                                          prodl 000FF3                                            start 0000  
                                 __CFG_IESO$OFF 000000                                    ___param_bank 000000  
                                         ??_abs 0015                                           ??_pad 0019  
                       __end_of_TMR0_Initialize DFBC                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize DED4                                 __end_of___aodiv E804  
                                         ?_atoi 0008                                           ?_ctoa 001E  
                                         ?_main 0001                                           ?_dtoa 001E  
                               __end_of___aomod E67C                                           STR_10 FFD2  
                                         STR_11 FFEE                                           STR_20 FB42  
                                         STR_12 FF03                                           STR_21 FFE1  
                                         STR_13 FE5E                                           STR_22 FD95  
                                         STR_30 FF7D                                           STR_14 FD97  
                                         STR_23 FD95                                           STR_31 FF6A  
                                         STR_15 FD2A                                           STR_32 FFFA  
                                         STR_40 FEBF                                           STR_16 FC09  
                                         STR_24 F9B1                                           STR_33 FB3F  
                                         STR_41 FE90                                           STR_25 FD04  
                                         STR_17 FBA8                                           STR_34 FF42  
                                         STR_42 FE0F                                           STR_50 FB0E  
                                         STR_18 FA43                                           STR_26 F9FB  
                                         STR_43 FFC3                                           STR_19 FDF4  
                                         STR_35 FDD7                                           STR_27 FD50  
                                         STR_51 FA87                                           STR_44 FC67  
                                         STR_36 FC3D                                           STR_28 FFB2  
                                         STR_52 FACB                                           STR_53 FC39  
                                         STR_37 FE44                                           STR_45 FD74  
                                         STR_29 FCB5                                           STR_38 FEA8  
                                         STR_46 FDB8                                           STR_54 FC63  
                                         STR_39 FF2E                                           STR_47 FE2A  
                                         STR_55 FCDE                                           STR_56 FE77  
                                         STR_48 FC39                                           STR_49 FBD9  
                                         STR_57 FB76                                           STR_58 FF90  
                     TMR0_ReadTimer@readValHigh 0008                                           ?_utoa 001E  
                                         _T0CON 000FD5                                 __end_of___lodiv E518  
                               __end_of___lomod E428                                  __CFG_DEBUG$OFF 000000  
                               _TMR0_WriteTimer DDB8                                    vfpfcnvrt@fmt 0044  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 0054  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
              __size_of_ADC_GetConversionResult 0014                                   __CFG_WRT0$OFF 000000  
                                 __CFG_WRT1$OFF 000000                                   __CFG_WRT2$OFF 000000  
                                 __CFG_WRT3$OFF 000000                                  __CFG_EBTR0$OFF 000000  
                                __CFG_FCMEN$OFF 000000                                  __CFG_EBTR1$OFF 000000  
                                __CFG_EBTR2$OFF 000000                                  __CFG_EBTR3$OFF 000000  
                                 __CFG_WRTB$OFF 000000                                   __CFG_WRTC$OFF 000000  
                                 __CFG_WRTD$OFF 000000                                  __CFG_EBTRB$OFF 000000  
                                         _flags 00C3                                           _fputc E1FC  
                                         _fputs E0A8                                 __end_of_isdigit E02A  
                                noteOn@velocity 0003                              __CFG_MCLRE$EXTMCLR 000000  
                                         atoi@n 0015                                           pad@fp 0013  
                                         atoi@s 0008                                           _width 00BF  
                                         ctoa@c 0020                                           _putch DDC2  
                                         ctoa@w 0021                                           main@i 00BC  
                                         dtoa@d 0020                                           dtoa@i 0040  
                                         dtoa@n 0038                                           dtoa@p 0032  
                                         dtoa@s 0036                                           dtoa@w 0034  
                               __end_of_isspace E13E                                  ?_EUSART1_Write 0001  
                                         tablat 000FF5                                  ??_EUSART1_Read 0001  
                                         utoa@d 0020                                           utoa@i 003C  
                                         utoa@n 0034                                           utoa@p 0030  
                                         utoa@w 0032                                           status 000FD8  
                                __CFG_HFOFST$ON 000000                                ___lodiv@dividend 0001  
            _EUSART1_DefaultFramingErrorHandler 000000                                  __CFG_PBADEN$ON 000000  
                               __initialization DE1C                                    __end_of_atoi E99E  
                                  __end_of_ctoa E198                      __end_of_EUSART1_Initialize E068  
                                  __end_of_main F9B0                                    __end_of_dtoa EE82  
                                  __end_of_utoa EBA0                                          ??_atoi 000A  
                                        ??_ctoa 0021                                          ??_main 0072  
                                        ??_dtoa 0028                                          ??_utoa 0028  
                                 __activetblptr 000003                                ___lodiv@quotient 0011  
                 __size_of_ADC_IsConversionDone 0014                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0003                                          ?_fputs 000C  
                                        _ADRESH 000FC4                                          _ADRESL 000FC3  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                  __CFG_WDTEN$OFF 000000  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
              __size_of_TMR0_HasOverflowOccured 0014                                          _SPBRG1 000FAF  
                                        _TX1REG 000FAD                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                          main@nominalHallPressed 00B4  
                                __CFG_XINST$OFF 000000                                    vfprintf@cfmt 0066  
                                     ??___aodiv 0011                                       ??___aomod 0011  
                                        ___wmul DEF2                                  __CFG_STVREN$ON 000000  
                       __end_of_TMR0_WriteTimer DDC2                                       ??___lodiv 0011  
                                     ??___lomod 0011                        ?_EUSART1_SetErrorHandler 0001  
                              ?_TMR0_Initialize 0001                                          clear_0 DE22  
                                        _noteOn DE5C                                          _printf DF40  
                                        pad@buf 0015                ??_EUSART1_SetOverrunErrorHandler 0003  
               ?_EUSART1_SetOverrunErrorHandler 0001                                          ctoa@fp 001E  
                                        dtoa@fp 001E                                          _strlen DFBC  
                                        fputc@c 0003                                          fputs@c 0010  
                                        fputs@i 0011                                          fputs@s 000C  
                                     ??_isdigit 0003                                    __mediumconst F9B0  
                                     ??_isspace 0003                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf E1FC                                 ??_EUSART1_Write 0001  
                                        utoa@fp 001E                               _SYSTEM_Initialize DE46  
                                    __accesstop 0060                         __end_of__initialization DE2A  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                  __size_of_ADC_StartConversion 0004                                  __pcstackCOMRAM 0001  
                           ??_SYSTEM_Initialize 0003                                   __end_of_fputc E292  
                                 __end_of_fputs E0EC                                   __end_of_putch DDCC  
                       __size_of_TMR0_ReadTimer 001E                            __end_of_EUSART1_Read DF40  
                       _ADC_GetConversionResult DDCC                                         ??_fputc 0007  
                     __end_of_SYSTEM_Initialize DE5C                                         ??_fputs 0010  
                                       ??_putch 0002                                      __pbssBANK0 00BD  
                               __CFG_PLLCFG$OFF 000000                 __end_of_EUSART1_SetErrorHandler DDA4  
                            __CFG_CCP2MX$PORTC1 000000                                         ?___wmul 0001  
                            __CFG_CCP3MX$PORTB5 000000                                ?_TMR0_WriteTimer 0009  
                                       ?_noteOn 0002                                         ?_printf 0068  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 0001  
        __end_of_EUSART1_SetFramingErrorHandler DDAE         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler DDA4                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 03DA                                         _OSCTUNE 000F9B  
                                       _SPBRGH1 000FB0                                ___lomod@dividend 0001  
                       _TMR0_HasOverflowOccured DE08                                     noteOn@pitch 0002  
                               __CFG_PWRTEN$OFF 000000                            _ADC_InterruptHandler 00CB  
                                       __Hparam 0000                                         __Lparam 0000  
                                       ___aodiv E67C                                         ___aomod E518  
                               __size_of___wmul 0026                                         ___lodiv E428  
                                       ___lomod E358                                       ?_vfprintf 0060  
                           _EUSART1_is_rx_ready DDF4                       ??_ADC_GetConversionResult 0003  
                                main@instrument 00B5                                         __pcinit DE1C  
                                main@sampleRate 00BA                                         __ramtop 1000  
                               __size_of_noteOn 0016                                         __ptext0 F25C  
                                       __ptext1 DF40                                         __ptext2 E198  
                                       __ptext3 EE82                                         __ptext4 E99E  
                                       __ptext5 E358                                         __ptext6 E428  
                                       __ptext7 EBA0                                         __ptext8 E068  
                                       __ptext9 E518                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize DEB8                                    __size_of_abs 0040  
                                  __size_of_pad 00C6                                         _isdigit DFF2  
                            _EUSART1_Initialize E02A                        ??_PIN_MANAGER_Initialize 0001  
                                       _isspace E0EC                                         atoi@neg 000E  
                                       main@cmd 00B8                      __size_of_SYSTEM_Initialize 0016  
                          end_of_initialization DE2A                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                         fputc@fp 0005  
                   _EUSART1_OverrunErrorHandler 00C7                                         fputs@fp 000E  
                  __end_of_ADC_IsConversionDone DDF4                               __end_of_vfpfcnvrt F25C  
                         TMR0_ReadTimer@readVal 0005                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0028  
                                    ??_vfprintf 005F                                  _TMR0_ReadTimer DED4  
                          ??_EUSART1_Initialize 0003                                         strlen@a 0003  
                                       strlen@s 0001                                      _putByteSCI DEA0  
                                     _PORTAbits 000F80                             _ADC_StartConversion DD96  
                     ??_TMR0_HasOverflowOccured 0001                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0001                           ??_EUSART1_is_rx_ready 0001  
                                  _EUSART1_Read DF18                                      main@sample 0074  
                          ?_ADC_StartConversion 0001                          __end_of_TMR0_ReadTimer DEF2  
                                   vfpfcnvrt@ap 0046                                     vfpfcnvrt@fp 0042  
                                   vfpfcnvrt@ll 004C                                  __end_of___wmul DF18  
                                _ADC_Initialize DE30                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_noteOn DE72                                  __end_of_printf DF68  
                                __end_of_strlen DFF2                             start_initialization DE1C  
                               ___lodiv@divisor 0009                                 ___lodiv@counter 0019  
                      __size_of_TMR0_Initialize 002A                 __size_of_PIN_MANAGER_Initialize 002A  
                                   __end_of_abs E0A8                                     __end_of_pad E358  
                                   putch@txData 0002                           __end_of_EUSART1_Write DE88  
                         ??_ADC_StartConversion 0001                                     vfprintf@fmt 0062  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0005  
                        __end_of_ADC_Initialize DE46                                        ??_noteOn 0004  
                                   ?_putByteSCI 0001                                        ??_printf 005F  
                                      ??_strlen 0003                                     __pbssCOMRAM 005F  
                                 __pcstackBANK0 0060                                ___aodiv@dividend 0001  
                          _ADC_IsConversionDone DDE0                ??_EUSART1_SetFramingErrorHandler 0003  
               ?_EUSART1_SetFramingErrorHandler 0001                                       _atoi$1516 0010  
                                     _atoi$1517 0014                                       _atoi$1518 0012  
                        _PIN_MANAGER_Initialize DF68                                       _dtoa$1036 0030  
                             _ADC_SelectChannel DE88                                   __pmediumconst F9B0  
                                      ?___aodiv 0001                                        ?___aomod 0001  
                              ___aodiv@quotient 0013                                        ?___lodiv 0001  
                                      ?___lomod 0001                                 ?_ADC_Initialize 0001  
                            ?_ADC_SelectChannel 0001                                __CFG_PRICLKEN$ON 000000  
                             __size_of_vfprintf 0064                                 ___lomod@divisor 0009  
                               ___lomod@counter 0011                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isdigit 0001  
                           ??_ADC_SelectChannel 0001                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 00C5                           ?_ADC_IsConversionDone 0001  
                                      ?_isspace 0001                         _EUSART1_SetErrorHandler DD9A  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                __size_of_putch 000A                               ??_TMR0_Initialize 0001  
                                ___wmul@product 0005         EUSART1_SetErrorHandler@interruptHandler 0001  
                                      _LATCbits 000F8B                             __size_of_putByteSCI 0018  
                     __end_of_ADC_SelectChannel DEA0                                        _PIR1bits 000F9E  
                              __CFG_WDTPS$32768 000000                                       _vfpfcnvrt EE82  
                      TMR0_ReadTimer@readValLow 0007                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 0001                        ADC_SelectChannel@channel 0002  
                                     main@delta 00B7                                       main@pitch 00B9  
                                  _isspace$1534 0007                                      vfpfcnvrt@c 005E  
                                   _INTCON2bits 000FF1                        main@nominalHallUnPressed 00B6  
                                      __Hrparam 0000                                      vfprintf@ap 0064  
                                      __Lrparam 0000                                      vfprintf@fp 0060  
                      ?_ADC_GetConversionResult 0001                              __CFG_BOREN$SBORDIS 000000  
                             __CFG_P2BMX$PORTB5 000000                         ??_OSCILLATOR_Initialize 0001  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                              __size_of___lodiv 00F0                     __size_of_EUSART1_Initialize 003E  
                              __size_of___lomod 00D0                                      ?_vfpfcnvrt 0042  
                               ___aodiv@divisor 0009                                 ___aodiv@counter 0011  
                     ??_EUSART1_SetErrorHandler 0003                             putByteSCI@writeByte 0001  
                        ??_ADC_IsConversionDone 0001                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready DE08                                __size_of_isdigit 0038  
                              __size_of_isspace 0052                                        __ptext10 E67C  
                                      __ptext11 E13E                                        __ptext20 DFF2  
                                      __ptext12 E292                                        __ptext21 DEF2  
                                      __ptext13 DFBC                                        __ptext30 DEB8  
                                      __ptext22 DE5C                                        __ptext14 E0A8  
                                      __ptext31 E02A                                        __ptext23 DEA0  
                                      __ptext15 E1FC                                        __ptext40 DDE0  
                                      __ptext32 DDAE                                        __ptext24 DDB8  
                                      __ptext16 DDC2                                        __ptext41 DDCC  
                                      __ptext33 DDA4                                        __ptext25 DED4  
                                      __ptext17 DE72                                        __ptext34 DD9A  
                                      __ptext26 DE08                                        __ptext18 E804  
                                      __ptext35 DE30                                        __ptext27 DE46  
                                      __ptext19 E0EC                                        __ptext36 DDF4  
                                      __ptext28 DF92                                        __ptext37 DF18  
                                      __ptext29 DF68                                        __ptext38 DD96  
                                      __ptext39 DE88                         TMR0_WriteTimer@timerVal 0009  
                                     noteOn@cmd 0004                               ??_TMR0_WriteTimer 000B  
                                 __size_of_atoi 019A                                   __size_of_ctoa 005A  
                                 __size_of_main 0754                                   __size_of_dtoa 02E2  
                                 __size_of_utoa 0202                                ??_TMR0_ReadTimer 0003  
                    __size_of_ADC_SelectChannel 0018  EUSART1_SetOverrunErrorHandler@interruptHandler 0001  
                                      _vfprintf E198                                       printf@fmt 0068  
                                  ??_putByteSCI 0001                     _EUSART1_FramingErrorHandler 00C9  
                              ___aomod@dividend 0001                        ?_TMR0_HasOverflowOccured 0001  
                                _vfpfcnvrt$1057 005C                                      _INTCONbits 000FF2  
                                      isdigit@c 0001                     __end_of_ADC_StartConversion DD9A  
                                      isspace@c 0001                         ?_PIN_MANAGER_Initialize 0001  
               __end_of_ADC_GetConversionResult DDE0          __end_of_EUSART1_SetOverrunErrorHandler DDB8  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler DDAE  
                                    _RCSTA1bits 000FAB                              __end_of_putByteSCI DEB8  
                              ??_ADC_Initialize 0001                                        printf@ap 0070  
EUSART1_SetFramingErrorHandler@interruptHandler 0001                                 ___aomod@divisor 0009  
                                   ??_vfpfcnvrt 0048                                 ___aomod@counter 0011  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 005F  
                               _TMR0_Initialize DF92                               __CFG_T3CMX$PORTC0 000000  
                                  ___aodiv@sign 0012                  __end_of_PIN_MANAGER_Initialize DF92  
                             __CFG_FOSC$INTIO67 000000                                    ___aomod@sign 0012  
